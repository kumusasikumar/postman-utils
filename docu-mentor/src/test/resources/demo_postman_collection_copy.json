{
	"info": {
		"_postman_id": "425498db-3e4e-41fa-ace3-83cf7cf13ceb",
		"name": "Demo Collection Copy",
		"description": "A collection of example requests.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET Requests",
			"item": [
				{
					"name": "Run tabulation query.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://host/api/query/{catalogId}/{dataProductId}/tabulate?count=<boolean>&dims=<string>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&measure=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&totals=<boolean>&weights=<string array>&where=<string>",
							"protocol": "http",
							"host": [
								"host"
							],
							"path": [
								"api",
								"query",
								"{catalogId}",
								"{dataProductId}",
								"tabulate"
							],
							"query": [
								{
									"key": "count",
									"value": "<boolean>",
									"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
								},
								{
									"key": "dims",
									"value": "<string>",
									"description": "Optional - Columns to use as dimensions."
								},
								{
									"key": "format",
									"value": "<format enum>",
									"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
								},
								{
									"key": "groupby",
									"value": "<string array>",
									"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
								},
								{
									"key": "inject",
									"value": "<boolean>",
									"description": "Required - Flag specifying if we want the values injected into the returned records."
								},
								{
									"key": "limit",
									"value": "<number>",
									"description": "Optional - The limit of records to return."
								},
								{
									"key": "measure",
									"value": "<string>",
									"description": "Optional - Columns to use as measures. Count is used by default."
								},
								{
									"key": "metadata",
									"value": "<boolean>",
									"description": "Required - Flag specifying whether metadata should be returned along side the data."
								},
								{
									"key": "offset",
									"value": "<number>",
									"description": "Optional - The record to start at."
								},
								{
									"key": "orderby",
									"value": "<string>",
									"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
								},
								{
									"key": "totals",
									"value": "<boolean>",
									"description": "Required - Flag specifying whether subtotals should be returned along side the data."
								},
								{
									"key": "weights",
									"value": "<string array>",
									"description": "Optional - The IDs of variables to use as weights in the resulting data."
								},
								{
									"key": "where",
									"value": "<string>",
									"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
								}
							],
							"variable": [
								{
									"key": "catalogId",
									"value": "<string>",
									"description": "Required - The ID of the catalog that contains the data product."
								},
								{
									"key": "dataProductId",
									"value": "<string>",
									"description": "Required - The ID of the data product to query."
								}
							]
						},
						"description": "\n<p>\nRunning tabulations on the specified data product returns aggregate level\ndata about the dimensions and measures specified. A variety of querying\ntechniques can be used to subset, compute, order, filter and format the\nresults.\n</p>"
					},
					"response": [
						{
							"name": "Plotly Pie Chart",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://host/api/query/{catalogId}/{dataProductId}/tabulate?count=<boolean>&dims=<string>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&measure=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&totals=<boolean>&weights=<string array>&where=<string>",
									"protocol": "http",
									"host": [
										"host"
									],
									"path": [
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"tabulate"
									],
									"query": [
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "dims",
											"value": "<string>",
											"description": "Optional - Columns to use as dimensions."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Required - Flag specifying if we want the values injected into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "measure",
											"value": "<string>",
											"description": "Optional - Columns to use as measures. Count is used by default."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "totals",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether subtotals should be returned along side the data."
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning tabulations on the specified data product returns aggregate level\ndata about the dimensions and measures specified. A variety of querying\ntechniques can be used to subset, compute, order, filter and format the\nresults.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Plotly Pie Chart\",\n  \"value\" : {\n    \"labels\" : [ 1, 1, 1 ],\n    \"type\" : \"pie\",\n    \"values\" : [ 2, 1, 1 ]\n  }\n}"
						},
						{
							"name": "Plotly Boxplot",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://host/api/query/{catalogId}/{dataProductId}/tabulate?count=<boolean>&dims=<string>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&measure=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&totals=<boolean>&weights=<string array>&where=<string>",
									"protocol": "http",
									"host": [
										"host"
									],
									"path": [
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"tabulate"
									],
									"query": [
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "dims",
											"value": "<string>",
											"description": "Optional - Columns to use as dimensions."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Required - Flag specifying if we want the values injected into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "measure",
											"value": "<string>",
											"description": "Optional - Columns to use as measures. Count is used by default."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "totals",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether subtotals should be returned along side the data."
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning tabulations on the specified data product returns aggregate level\ndata about the dimensions and measures specified. A variety of querying\ntechniques can be used to subset, compute, order, filter and format the\nresults.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Plotly Boxplot\",\n  \"value\" : {\n    \"y\" : [ 0, 1, 1, 2, 3, 5, 8, 13, 21 ],\n    \"boxpoints\" : \"all\",\n    \"jitter\" : 0.3,\n    \"pointpos\" : -1.8,\n    \"type\" : \"box\"\n  }\n}"
						},
						{
							"name": "AM Charts",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://host/api/query/{catalogId}/{dataProductId}/tabulate?count=<boolean>&dims=<string>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&measure=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&totals=<boolean>&weights=<string array>&where=<string>",
									"protocol": "http",
									"host": [
										"host"
									],
									"path": [
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"tabulate"
									],
									"query": [
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "dims",
											"value": "<string>",
											"description": "Optional - Columns to use as dimensions."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Required - Flag specifying if we want the values injected into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "measure",
											"value": "<string>",
											"description": "Optional - Columns to use as measures. Count is used by default."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "totals",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether subtotals should be returned along side the data."
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning tabulations on the specified data product returns aggregate level\ndata about the dimensions and measures specified. A variety of querying\ntechniques can be used to subset, compute, order, filter and format the\nresults.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"AM Charts\",\n  \"value\" : {\n    \"dataProvider\" : [ {\n      \"DOGS\" : 1,\n      \"CATS\" : 2,\n      \"BIRDS\" : 4\n    }, {\n      \"DOGS\" : 1,\n      \"CATS\" : 1,\n      \"BIRDS\" : 4\n    }, {\n      \"DOGS\" : 1,\n      \"CATS\" : 1,\n      \"BIRDS\" : 4\n    } ]\n  }\n}"
						},
						{
							"name": "Plotly Histogram",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://host/api/query/{catalogId}/{dataProductId}/tabulate?count=<boolean>&dims=<string>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&measure=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&totals=<boolean>&weights=<string array>&where=<string>",
									"protocol": "http",
									"host": [
										"host"
									],
									"path": [
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"tabulate"
									],
									"query": [
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "dims",
											"value": "<string>",
											"description": "Optional - Columns to use as dimensions."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Required - Flag specifying if we want the values injected into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "measure",
											"value": "<string>",
											"description": "Optional - Columns to use as measures. Count is used by default."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "totals",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether subtotals should be returned along side the data."
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning tabulations on the specified data product returns aggregate level\ndata about the dimensions and measures specified. A variety of querying\ntechniques can be used to subset, compute, order, filter and format the\nresults.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Plotly Histogram\",\n  \"value\" : {\n    \"x\" : \"x0\",\n    \"opacity\" : 0.75,\n    \"type\" : \"histogram\"\n  }\n}"
						},
						{
							"name": "Google Charts",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://host/api/query/{catalogId}/{dataProductId}/tabulate?count=<boolean>&dims=<string>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&measure=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&totals=<boolean>&weights=<string array>&where=<string>",
									"protocol": "http",
									"host": [
										"host"
									],
									"path": [
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"tabulate"
									],
									"query": [
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "dims",
											"value": "<string>",
											"description": "Optional - Columns to use as dimensions."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Required - Flag specifying if we want the values injected into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "measure",
											"value": "<string>",
											"description": "Optional - Columns to use as measures. Count is used by default."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "totals",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether subtotals should be returned along side the data."
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning tabulations on the specified data product returns aggregate level\ndata about the dimensions and measures specified. A variety of querying\ntechniques can be used to subset, compute, order, filter and format the\nresults.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Google Charts\",\n  \"value\" : {\n    \"cols\" : [ {\n      \"id\" : \"CATS\",\n      \"label\" : \"Number of cats\",\n      \"type\" : \"string\"\n    }, {\n      \"id\" : \"DOGS\",\n      \"label\" : \"Number of dogs\",\n      \"type\" : \"string\"\n    }, {\n      \"id\" : \"BIRDS\",\n      \"label\" : \"Number of birds\",\n      \"type\" : \"string\"\n    } ],\n    \"rows\" : [ {\n      \"c\" : [ {\n        \"v\" : 1\n      }, {\n        \"v\" : 2\n      }, {\n        \"v\" : 4\n      } ]\n    }, {\n      \"c\" : [ {\n        \"v\" : 1\n      }, {\n        \"v\" : 1\n      }, {\n        \"v\" : 4\n      } ]\n    }, {\n      \"c\" : [ {\n        \"v\" : 1\n      }, {\n        \"v\" : 1\n      }, {\n        \"v\" : 4\n      } ]\n    } ]\n  }\n}"
						},
						{
							"name": "MTNA Dataset",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://host/api/query/{catalogId}/{dataProductId}/tabulate?count=<boolean>&dims=<string>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&measure=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&totals=<boolean>&weights=<string array>&where=<string>",
									"protocol": "http",
									"host": [
										"host"
									],
									"path": [
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"tabulate"
									],
									"query": [
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "dims",
											"value": "<string>",
											"description": "Optional - Columns to use as dimensions."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Required - Flag specifying if we want the values injected into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "measure",
											"value": "<string>",
											"description": "Optional - Columns to use as measures. Count is used by default."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "totals",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether subtotals should be returned along side the data."
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning tabulations on the specified data product returns aggregate level\ndata about the dimensions and measures specified. A variety of querying\ntechniques can be used to subset, compute, order, filter and format the\nresults.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"MTNA Dataset\",\n  \"value\" : {\n    \"classifications\" : [ ],\n    \"dataSetInformation\" : {\n      \"cached\" : false,\n      \"columnCount\" : 2,\n      \"columnOffset\" : 0,\n      \"end\" : \"2019-06-26T20:04:47.104Z\",\n      \"includeMetadata\" : true,\n      \"moreColumns\" : false,\n      \"moreRows\" : true,\n      \"notes\" : [ ],\n      \"postQueryTime\" : 0,\n      \"preQueryTime\" : 87,\n      \"queryTime\" : 1598,\n      \"rowLimit\" : 3,\n      \"rowOffset\" : 0,\n      \"start\" : \"2019-06-26T20:04:45.419Z\",\n      \"totalProcessingTime\" : 1685\n    },\n    \"recordLayout\" : {\n      \"isPrivate\" : false,\n      \"variables\" : [ {\n        \"dataType\" : \"NUMERIC\",\n        \"decimals\" : 0,\n        \"endPosition\" : 2,\n        \"fixedStorageWidth\" : 2,\n        \"id\" : \"CATS\",\n        \"isPrivate\" : false,\n        \"label\" : \"NUMBER OF CATS\",\n        \"name\" : \"CATS\",\n        \"questionText\" : \"How many cats do you have?\",\n        \"startPosition\" : 0,\n        \"storageType\" : \"INT\",\n        \"summaryStatistics\" : {\n          \"dateProduced\" : \"2019-06-21T12:32:28.034Z\",\n          \"sets\" : [ {\n            \"distinctSet\" : [ ],\n            \"max\" : 1,\n            \"mean\" : 1,\n            \"min\" : 1,\n            \"missing\" : 0,\n            \"populated\" : 662,\n            \"standardDeviation\" : 0,\n            \"weighted\" : false\n          } ]\n        },\n        \"uri\" : \"3893482a-3f43r5f-234rrf3\"\n      }, {\n        \"classificationUri\" : \"23984fu-deu490u-aa7\",\n        \"dataType\" : \"NUMERIC\",\n        \"decimals\" : 0,\n        \"endPosition\" : 17,\n        \"fixedStorageWidth\" : 1,\n        \"frequencies\" : {\n          \"dateProduced\" : \"2019-06-21T12:32:28.055Z\",\n          \"sets\" : [ {\n            \"map\" : {\n              \"1\" : 182,\n              \"2\" : 354,\n              \"3\" : 126\n            },\n            \"weighted\" : false,\n            \"weights\" : [ ]\n          } ]\n        },\n        \"id\" : \"DOGS\",\n        \"isPrivate\" : false,\n        \"label\" : \"NUMBER OF DOGS\",\n        \"name\" : \"DOGS\",\n        \"questionText\" : \"How many dogs do you have?\",\n        \"startPosition\" : 16,\n        \"storageType\" : \"INT\",\n        \"summaryStatistics\" : {\n          \"dateProduced\" : \"2019-06-21T12:32:28.055Z\",\n          \"sets\" : [ {\n            \"distinctSet\" : [ ],\n            \"max\" : 3,\n            \"mean\" : 1.915,\n            \"min\" : 1,\n            \"missing\" : 0,\n            \"populated\" : 662,\n            \"standardDeviation\" : 0.677,\n            \"weighted\" : false\n          } ]\n        },\n        \"uri\" : \"3893482a\"\n      } ]\n    },\n    \"records\" : [ {\n      \"data\" : [ {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 1,\n          \"variable\" : {\n            \"id\" : \"CATS\",\n            \"isPrivate\" : false,\n            \"name\" : \"CATS\",\n            \"uri\" : \"3893482a-3f43r5f-234rrf3\"\n          }\n        }\n      }, {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 2,\n          \"variable\" : {\n            \"id\" : \"DOGS\",\n            \"isPrivate\" : false,\n            \"name\" : \"DOGS\",\n            \"uri\" : \"3893482a\"\n          }\n        }\n      } ]\n    }, {\n      \"data\" : [ {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 1,\n          \"variable\" : {\n            \"id\" : \"CATS\",\n            \"isPrivate\" : false,\n            \"name\" : \"CATS\",\n            \"uri\" : \"3893482a-3f43r5f-234rrf3\"\n          }\n        }\n      }, {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 1,\n          \"variable\" : {\n            \"id\" : \"DOGS\",\n            \"isPrivate\" : false,\n            \"name\" : \"DOGS\",\n            \"uri\" : \"3893482a\"\n          }\n        }\n      } ]\n    }, {\n      \"data\" : [ {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 1,\n          \"variable\" : {\n            \"id\" : \"CATS\",\n            \"isPrivate\" : false,\n            \"name\" : \"CATS\",\n            \"uri\" : \"3893482a-3f43r5f-234rrf3\"\n          }\n        }\n      }, {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 1,\n          \"variable\" : {\n            \"id\" : \"DOGS\",\n            \"isPrivate\" : false,\n            \"name\" : \"DOGS\",\n            \"uri\" : \"3893482a\"\n          }\n        }\n      } ]\n    } ],\n    \"totals\" : [ ],\n    \"variableGroups\" : [ ]\n  }\n}"
						},
						{
							"name": "Plotly Bubble Chart",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://host/api/query/{catalogId}/{dataProductId}/tabulate?count=<boolean>&dims=<string>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&measure=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&totals=<boolean>&weights=<string array>&where=<string>",
									"protocol": "http",
									"host": [
										"host"
									],
									"path": [
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"tabulate"
									],
									"query": [
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "dims",
											"value": "<string>",
											"description": "Optional - Columns to use as dimensions."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Required - Flag specifying if we want the values injected into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "measure",
											"value": "<string>",
											"description": "Optional - Columns to use as measures. Count is used by default."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "totals",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether subtotals should be returned along side the data."
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning tabulations on the specified data product returns aggregate level\ndata about the dimensions and measures specified. A variety of querying\ntechniques can be used to subset, compute, order, filter and format the\nresults.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Plotly Bubble Chart\",\n  \"value\" : {\n    \"x\" : [ 1, 2, 3, 4 ],\n    \"y\" : [ 10, 11, 12, 13 ],\n    \"mode\" : \"markers\",\n    \"marker\" : {\n      \"size\" : [ 10, 10, 10, 10 ]\n    }\n  }\n}"
						},
						{
							"name": "Plotly Bar Chart",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://host/api/query/{catalogId}/{dataProductId}/tabulate?count=<boolean>&dims=<string>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&measure=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&totals=<boolean>&weights=<string array>&where=<string>",
									"protocol": "http",
									"host": [
										"host"
									],
									"path": [
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"tabulate"
									],
									"query": [
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "dims",
											"value": "<string>",
											"description": "Optional - Columns to use as dimensions."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Required - Flag specifying if we want the values injected into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "measure",
											"value": "<string>",
											"description": "Optional - Columns to use as measures. Count is used by default."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "totals",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether subtotals should be returned along side the data."
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning tabulations on the specified data product returns aggregate level\ndata about the dimensions and measures specified. A variety of querying\ntechniques can be used to subset, compute, order, filter and format the\nresults.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Plotly Bar Chart\",\n  \"value\" : {\n    \"x\" : [ \"giraffes\", \"orangutans\", \"monkeys\" ],\n    \"y\" : [ 20, 14, 23 ],\n    \"type\" : \"bar\"\n  }\n}"
						},
						{
							"name": "MTNA Simple Dataset",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://host/api/query/{catalogId}/{dataProductId}/tabulate?count=<boolean>&dims=<string>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&measure=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&totals=<boolean>&weights=<string array>&where=<string>",
									"protocol": "http",
									"host": [
										"host"
									],
									"path": [
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"tabulate"
									],
									"query": [
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "dims",
											"value": "<string>",
											"description": "Optional - Columns to use as dimensions."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Required - Flag specifying if we want the values injected into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "measure",
											"value": "<string>",
											"description": "Optional - Columns to use as measures. Count is used by default."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "totals",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether subtotals should be returned along side the data."
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning tabulations on the specified data product returns aggregate level\ndata about the dimensions and measures specified. A variety of querying\ntechniques can be used to subset, compute, order, filter and format the\nresults.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"MTNA Simple Dataset\",\n  \"value\" : {\n    \"info\" : {\n      \"cached\" : false,\n      \"columnCount\" : 2,\n      \"columnOffset\" : 0,\n      \"end\" : \"2019-06-26T20:10:42.210Z\",\n      \"includeMetadata\" : true,\n      \"moreColumns\" : false,\n      \"moreRows\" : true,\n      \"notes\" : [ ],\n      \"postQueryTime\" : 0,\n      \"preQueryTime\" : 98,\n      \"queryTime\" : 1579,\n      \"rowLimit\" : 3,\n      \"rowOffset\" : 0,\n      \"start\" : \"2019-06-26T20:10:40.533Z\",\n      \"totalProcessingTime\" : 1677\n    },\n    \"records\" : [ [ 1, 2 ], [ 1, 1 ], [ 1, 1 ] ],\n    \"totals\" : [ ],\n    \"variables\" : [ {\n      \"dataType\" : \"NUMERIC\",\n      \"decimals\" : 0,\n      \"endPosition\" : 2,\n      \"fixedStorageWidth\" : 2,\n      \"id\" : \"CATS\",\n      \"isPrivate\" : false,\n      \"label\" : \"NUMBER OF CATS\",\n      \"name\" : \"CATS\",\n      \"questionText\" : \"How many cats do you have?\",\n      \"startPosition\" : 0,\n      \"storageType\" : \"INT\",\n      \"summaryStatistics\" : {\n        \"dateProduced\" : \"2019-06-21T12:32:28.034Z\",\n        \"sets\" : [ {\n          \"distinctSet\" : [ ],\n          \"max\" : 1,\n          \"mean\" : 1,\n          \"min\" : 1,\n          \"missing\" : 0,\n          \"populated\" : 662,\n          \"standardDeviation\" : 0,\n          \"weighted\" : false\n        } ]\n      },\n      \"uri\" : \"c456\"\n    }, {\n      \"classificationUri\" : \"cx234\",\n      \"dataType\" : \"NUMERIC\",\n      \"decimals\" : 0,\n      \"endPosition\" : 17,\n      \"fixedStorageWidth\" : 1,\n      \"frequencies\" : {\n        \"dateProduced\" : \"2019-06-21T12:32:28.055Z\",\n        \"sets\" : [ {\n          \"map\" : {\n            \"1\" : 182,\n            \"2\" : 354,\n            \"3\" : 126\n          },\n          \"weighted\" : false,\n          \"weights\" : [ ]\n        } ]\n      },\n      \"id\" : \"DOGS\",\n      \"isPrivate\" : false,\n      \"label\" : \"NUMBER OF DOGS\",\n      \"name\" : \"DOGS\",\n      \"questionText\" : \"How many dogs do you have?\",\n      \"startPosition\" : 16,\n      \"storageType\" : \"INT\",\n      \"summaryStatistics\" : {\n        \"dateProduced\" : \"2019-06-21T12:32:28.055Z\",\n        \"sets\" : [ {\n          \"distinctSet\" : [ ],\n          \"max\" : 3,\n          \"mean\" : 1.915,\n          \"min\" : 1,\n          \"missing\" : 0,\n          \"populated\" : 662,\n          \"standardDeviation\" : 0.677,\n          \"weighted\" : false\n        } ]\n      },\n      \"uri\" : \"123\"\n    } ]\n  }\n}"
						},
						{
							"name": "Plotly Scatterplot",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://host/api/query/{catalogId}/{dataProductId}/tabulate?count=<boolean>&dims=<string>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&measure=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&totals=<boolean>&weights=<string array>&where=<string>",
									"protocol": "http",
									"host": [
										"host"
									],
									"path": [
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"tabulate"
									],
									"query": [
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "dims",
											"value": "<string>",
											"description": "Optional - Columns to use as dimensions."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Required - Flag specifying if we want the values injected into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "measure",
											"value": "<string>",
											"description": "Optional - Columns to use as measures. Count is used by default."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "totals",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether subtotals should be returned along side the data."
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning tabulations on the specified data product returns aggregate level\ndata about the dimensions and measures specified. A variety of querying\ntechniques can be used to subset, compute, order, filter and format the\nresults.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Plotly Scatterplot\",\n  \"value\" : {\n    \"x\" : [ 1, 2, 3, 4 ],\n    \"y\" : [ 10, 15, 13, 17 ],\n    \"type\" : \"scatter\"\n  }\n}"
						}
					]
				},
				{
					"name": "Run select query.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/rds/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
							"host": [
								"{{host}}"
							],
							"path": [
								"rds",
								"api",
								"query",
								"{catalogId}",
								"{dataProductId}",
								"select"
							],
							"query": [
								{
									"key": "collimit",
									"value": "<integer>",
									"description": "Optional - Limits the number of columns returned."
								},
								{
									"key": "coloffset",
									"value": "<integer>",
									"description": "Optional - Determines which column to start at."
								},
								{
									"key": "cols",
									"value": "<string>",
									"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
								},
								{
									"key": "count",
									"value": "<boolean>",
									"description": "Optional - Flag specifying whether the total row count should be returned along side\nthe data."
								},
								{
									"key": "format",
									"value": "<format enum>",
									"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries, if none is specified, 'RDS'  will be set by default. Possible Values: AMCHARTS, DENODO, GCHARTS, RDS, MTNA, MTNA_TABULATE, PLOTLY_AREA, PLOTLY_BAR, PLOTLY_BOXPLOT, PLOTLY_BUBBLE, PLOTLY_HIST, PLOTLY_H_BAR, PLOTLY_H_HIST, PLOTLY_LINE, PLOTLY_PIE, PLOTLY_SCATTER, PLOTLY_TS, TABLEAU."
								},
								{
									"key": "groupby",
									"value": "<string array>",
									"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
								},
								{
									"key": "inject",
									"value": "<boolean>",
									"description": "Optional - Flag specifying to inject codes into the returned records."
								},
								{
									"key": "limit",
									"value": "<number>",
									"description": "Optional - The limit of records to return."
								},
								{
									"key": "lock",
									"value": "<string>",
									"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
								},
								{
									"key": "metadata",
									"value": "<boolean>",
									"description": "Optional - Flag specifying if metadata should be returned along side the data."
								},
								{
									"key": "offset",
									"value": "<number>",
									"description": "Optional - The record to start at."
								},
								{
									"key": "orderby",
									"value": "<string>",
									"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
								},
								{
									"key": "weights",
									"value": "<string array>",
									"description": "Optional - The IDs of variables to use as weights in the resulting data."
								},
								{
									"key": "where",
									"value": "<string>",
									"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
								}
							],
							"variable": [
								{
									"key": "catalogId",
									"value": "<string>",
									"description": "Required - The ID of the catalog that contains the data product."
								},
								{
									"key": "dataProductId",
									"value": "<string>",
									"description": "Required - The ID of the data product to query."
								}
							]
						},
						"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
					},
					"response": [
						{
							"name": "Plotly Boxplot",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rds/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
									"host": [
										"{{host}}"
									],
									"path": [
										"rds",
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"select"
									],
									"query": [
										{
											"key": "collimit",
											"value": "<integer>",
											"description": "Optional - Limits the number of columns returned."
										},
										{
											"key": "coloffset",
											"value": "<integer>",
											"description": "Optional - Determines which column to start at."
										},
										{
											"key": "cols",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
										},
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Optional - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Optional - Flag specifying to inject codes into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "lock",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Optional - Flag specifying if metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Plotly Boxplot\",\n  \"value\" : {\n    \"y\" : [ 0, 1, 1, 2, 3, 5, 8, 13, 21 ],\n    \"boxpoints\" : \"all\",\n    \"jitter\" : 0.3,\n    \"pointpos\" : -1.8,\n    \"type\" : \"box\"\n  }\n}"
						},
						{
							"name": "Plotly Scatterplot",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rds/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
									"host": [
										"{{host}}"
									],
									"path": [
										"rds",
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"select"
									],
									"query": [
										{
											"key": "collimit",
											"value": "<integer>",
											"description": "Optional - Limits the number of columns returned."
										},
										{
											"key": "coloffset",
											"value": "<integer>",
											"description": "Optional - Determines which column to start at."
										},
										{
											"key": "cols",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
										},
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Optional - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Optional - Flag specifying to inject codes into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "lock",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Optional - Flag specifying if metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Plotly Scatterplot\",\n  \"value\" : {\n    \"x\" : [ 1, 2, 3, 4 ],\n    \"y\" : [ 10, 15, 13, 17 ],\n    \"type\" : \"scatter\"\n  }\n}"
						},
						{
							"name": "Google Charts",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rds/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
									"host": [
										"{{host}}"
									],
									"path": [
										"rds",
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"select"
									],
									"query": [
										{
											"key": "collimit",
											"value": "<integer>",
											"description": "Optional - Limits the number of columns returned."
										},
										{
											"key": "coloffset",
											"value": "<integer>",
											"description": "Optional - Determines which column to start at."
										},
										{
											"key": "cols",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
										},
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Optional - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Optional - Flag specifying to inject codes into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "lock",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Optional - Flag specifying if metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Google Charts\",\n  \"value\" : {\n    \"cols\" : [ {\n      \"id\" : \"CATS\",\n      \"label\" : \"Number of cats\",\n      \"type\" : \"string\"\n    }, {\n      \"id\" : \"DOGS\",\n      \"label\" : \"Number of dogs\",\n      \"type\" : \"string\"\n    }, {\n      \"id\" : \"BIRDS\",\n      \"label\" : \"Number of birds\",\n      \"type\" : \"string\"\n    } ],\n    \"rows\" : [ {\n      \"c\" : [ {\n        \"v\" : 1\n      }, {\n        \"v\" : 2\n      }, {\n        \"v\" : 4\n      } ]\n    }, {\n      \"c\" : [ {\n        \"v\" : 1\n      }, {\n        \"v\" : 1\n      }, {\n        \"v\" : 4\n      } ]\n    }, {\n      \"c\" : [ {\n        \"v\" : 1\n      }, {\n        \"v\" : 1\n      }, {\n        \"v\" : 4\n      } ]\n    } ]\n  }\n}"
						},
						{
							"name": "Plotly Histogram",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rds/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
									"host": [
										"{{host}}"
									],
									"path": [
										"rds",
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"select"
									],
									"query": [
										{
											"key": "collimit",
											"value": "<integer>",
											"description": "Optional - Limits the number of columns returned."
										},
										{
											"key": "coloffset",
											"value": "<integer>",
											"description": "Optional - Determines which column to start at."
										},
										{
											"key": "cols",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
										},
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Optional - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Optional - Flag specifying to inject codes into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "lock",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Optional - Flag specifying if metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Plotly Histogram\",\n  \"value\" : {\n    \"x\" : \"x0\",\n    \"opacity\" : 0.75,\n    \"type\" : \"histogram\"\n  }\n}"
						},
						{
							"name": "Plotly Bar Chart",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rds/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
									"host": [
										"{{host}}"
									],
									"path": [
										"rds",
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"select"
									],
									"query": [
										{
											"key": "collimit",
											"value": "<integer>",
											"description": "Optional - Limits the number of columns returned."
										},
										{
											"key": "coloffset",
											"value": "<integer>",
											"description": "Optional - Determines which column to start at."
										},
										{
											"key": "cols",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
										},
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Optional - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Optional - Flag specifying to inject codes into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "lock",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Optional - Flag specifying if metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Plotly Bar Chart\",\n  \"value\" : {\n    \"x\" : [ \"giraffes\", \"orangutans\", \"monkeys\" ],\n    \"y\" : [ 20, 14, 23 ],\n    \"type\" : \"bar\"\n  }\n}"
						},
						{
							"name": "MTNA Simple Dataset",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rds/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
									"host": [
										"{{host}}"
									],
									"path": [
										"rds",
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"select"
									],
									"query": [
										{
											"key": "collimit",
											"value": "<integer>",
											"description": "Optional - Limits the number of columns returned."
										},
										{
											"key": "coloffset",
											"value": "<integer>",
											"description": "Optional - Determines which column to start at."
										},
										{
											"key": "cols",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
										},
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Optional - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Optional - Flag specifying to inject codes into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "lock",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Optional - Flag specifying if metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"MTNA Simple Dataset\",\n  \"value\" : {\n    \"info\" : {\n      \"cached\" : false,\n      \"columnCount\" : 2,\n      \"columnOffset\" : 0,\n      \"end\" : \"2019-06-26T20:10:42.210Z\",\n      \"includeMetadata\" : true,\n      \"moreColumns\" : false,\n      \"moreRows\" : true,\n      \"notes\" : [ ],\n      \"postQueryTime\" : 0,\n      \"preQueryTime\" : 98,\n      \"queryTime\" : 1579,\n      \"rowLimit\" : 3,\n      \"rowOffset\" : 0,\n      \"start\" : \"2019-06-26T20:10:40.533Z\",\n      \"totalProcessingTime\" : 1677\n    },\n    \"records\" : [ [ 1, 2 ], [ 1, 1 ], [ 1, 1 ] ],\n    \"totals\" : [ ],\n    \"variables\" : [ {\n      \"dataType\" : \"NUMERIC\",\n      \"decimals\" : 0,\n      \"endPosition\" : 2,\n      \"fixedStorageWidth\" : 2,\n      \"id\" : \"CATS\",\n      \"isPrivate\" : false,\n      \"label\" : \"NUMBER OF CATS\",\n      \"name\" : \"CATS\",\n      \"questionText\" : \"How many cats do you have?\",\n      \"startPosition\" : 0,\n      \"storageType\" : \"INT\",\n      \"summaryStatistics\" : {\n        \"dateProduced\" : \"2019-06-21T12:32:28.034Z\",\n        \"sets\" : [ {\n          \"distinctSet\" : [ ],\n          \"max\" : 1,\n          \"mean\" : 1,\n          \"min\" : 1,\n          \"missing\" : 0,\n          \"populated\" : 662,\n          \"standardDeviation\" : 0,\n          \"weighted\" : false\n        } ]\n      },\n      \"uri\" : \"c456\"\n    }, {\n      \"classificationUri\" : \"cx234\",\n      \"dataType\" : \"NUMERIC\",\n      \"decimals\" : 0,\n      \"endPosition\" : 17,\n      \"fixedStorageWidth\" : 1,\n      \"frequencies\" : {\n        \"dateProduced\" : \"2019-06-21T12:32:28.055Z\",\n        \"sets\" : [ {\n          \"map\" : {\n            \"1\" : 182,\n            \"2\" : 354,\n            \"3\" : 126\n          },\n          \"weighted\" : false,\n          \"weights\" : [ ]\n        } ]\n      },\n      \"id\" : \"DOGS\",\n      \"isPrivate\" : false,\n      \"label\" : \"NUMBER OF DOGS\",\n      \"name\" : \"DOGS\",\n      \"questionText\" : \"How many dogs do you have?\",\n      \"startPosition\" : 16,\n      \"storageType\" : \"INT\",\n      \"summaryStatistics\" : {\n        \"dateProduced\" : \"2019-06-21T12:32:28.055Z\",\n        \"sets\" : [ {\n          \"distinctSet\" : [ ],\n          \"max\" : 3,\n          \"mean\" : 1.915,\n          \"min\" : 1,\n          \"missing\" : 0,\n          \"populated\" : 662,\n          \"standardDeviation\" : 0.677,\n          \"weighted\" : false\n        } ]\n      },\n      \"uri\" : \"123\"\n    } ]\n  }\n}"
						},
						{
							"name": "MTNA Dataset",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rds/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
									"host": [
										"{{host}}"
									],
									"path": [
										"rds",
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"select"
									],
									"query": [
										{
											"key": "collimit",
											"value": "<integer>",
											"description": "Optional - Limits the number of columns returned."
										},
										{
											"key": "coloffset",
											"value": "<integer>",
											"description": "Optional - Determines which column to start at."
										},
										{
											"key": "cols",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
										},
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Optional - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Optional - Flag specifying to inject codes into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "lock",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Optional - Flag specifying if metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"MTNA Dataset\",\n  \"value\" : {\n    \"classifications\" : [ ],\n    \"dataSetInformation\" : {\n      \"cached\" : false,\n      \"columnCount\" : 2,\n      \"columnOffset\" : 0,\n      \"end\" : \"2019-06-26T20:04:47.104Z\",\n      \"includeMetadata\" : true,\n      \"moreColumns\" : false,\n      \"moreRows\" : true,\n      \"notes\" : [ ],\n      \"postQueryTime\" : 0,\n      \"preQueryTime\" : 87,\n      \"queryTime\" : 1598,\n      \"rowLimit\" : 3,\n      \"rowOffset\" : 0,\n      \"start\" : \"2019-06-26T20:04:45.419Z\",\n      \"totalProcessingTime\" : 1685\n    },\n    \"recordLayout\" : {\n      \"isPrivate\" : false,\n      \"variables\" : [ {\n        \"dataType\" : \"NUMERIC\",\n        \"decimals\" : 0,\n        \"endPosition\" : 2,\n        \"fixedStorageWidth\" : 2,\n        \"id\" : \"CATS\",\n        \"isPrivate\" : false,\n        \"label\" : \"NUMBER OF CATS\",\n        \"name\" : \"CATS\",\n        \"questionText\" : \"How many cats do you have?\",\n        \"startPosition\" : 0,\n        \"storageType\" : \"INT\",\n        \"summaryStatistics\" : {\n          \"dateProduced\" : \"2019-06-21T12:32:28.034Z\",\n          \"sets\" : [ {\n            \"distinctSet\" : [ ],\n            \"max\" : 1,\n            \"mean\" : 1,\n            \"min\" : 1,\n            \"missing\" : 0,\n            \"populated\" : 662,\n            \"standardDeviation\" : 0,\n            \"weighted\" : false\n          } ]\n        },\n        \"uri\" : \"3893482a-3f43r5f-234rrf3\"\n      }, {\n        \"classificationUri\" : \"23984fu-deu490u-aa7\",\n        \"dataType\" : \"NUMERIC\",\n        \"decimals\" : 0,\n        \"endPosition\" : 17,\n        \"fixedStorageWidth\" : 1,\n        \"frequencies\" : {\n          \"dateProduced\" : \"2019-06-21T12:32:28.055Z\",\n          \"sets\" : [ {\n            \"map\" : {\n              \"1\" : 182,\n              \"2\" : 354,\n              \"3\" : 126\n            },\n            \"weighted\" : false,\n            \"weights\" : [ ]\n          } ]\n        },\n        \"id\" : \"DOGS\",\n        \"isPrivate\" : false,\n        \"label\" : \"NUMBER OF DOGS\",\n        \"name\" : \"DOGS\",\n        \"questionText\" : \"How many dogs do you have?\",\n        \"startPosition\" : 16,\n        \"storageType\" : \"INT\",\n        \"summaryStatistics\" : {\n          \"dateProduced\" : \"2019-06-21T12:32:28.055Z\",\n          \"sets\" : [ {\n            \"distinctSet\" : [ ],\n            \"max\" : 3,\n            \"mean\" : 1.915,\n            \"min\" : 1,\n            \"missing\" : 0,\n            \"populated\" : 662,\n            \"standardDeviation\" : 0.677,\n            \"weighted\" : false\n          } ]\n        },\n        \"uri\" : \"3893482a\"\n      } ]\n    },\n    \"records\" : [ {\n      \"data\" : [ {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 1,\n          \"variable\" : {\n            \"id\" : \"CATS\",\n            \"isPrivate\" : false,\n            \"name\" : \"CATS\",\n            \"uri\" : \"3893482a-3f43r5f-234rrf3\"\n          }\n        }\n      }, {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 2,\n          \"variable\" : {\n            \"id\" : \"DOGS\",\n            \"isPrivate\" : false,\n            \"name\" : \"DOGS\",\n            \"uri\" : \"3893482a\"\n          }\n        }\n      } ]\n    }, {\n      \"data\" : [ {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 1,\n          \"variable\" : {\n            \"id\" : \"CATS\",\n            \"isPrivate\" : false,\n            \"name\" : \"CATS\",\n            \"uri\" : \"3893482a-3f43r5f-234rrf3\"\n          }\n        }\n      }, {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 1,\n          \"variable\" : {\n            \"id\" : \"DOGS\",\n            \"isPrivate\" : false,\n            \"name\" : \"DOGS\",\n            \"uri\" : \"3893482a\"\n          }\n        }\n      } ]\n    }, {\n      \"data\" : [ {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 1,\n          \"variable\" : {\n            \"id\" : \"CATS\",\n            \"isPrivate\" : false,\n            \"name\" : \"CATS\",\n            \"uri\" : \"3893482a-3f43r5f-234rrf3\"\n          }\n        }\n      }, {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 1,\n          \"variable\" : {\n            \"id\" : \"DOGS\",\n            \"isPrivate\" : false,\n            \"name\" : \"DOGS\",\n            \"uri\" : \"3893482a\"\n          }\n        }\n      } ]\n    } ],\n    \"totals\" : [ ],\n    \"variableGroups\" : [ ]\n  }\n}"
						},
						{
							"name": "Plotly Pie Chart",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rds/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
									"host": [
										"{{host}}"
									],
									"path": [
										"rds",
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"select"
									],
									"query": [
										{
											"key": "collimit",
											"value": "<integer>",
											"description": "Optional - Limits the number of columns returned."
										},
										{
											"key": "coloffset",
											"value": "<integer>",
											"description": "Optional - Determines which column to start at."
										},
										{
											"key": "cols",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
										},
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Optional - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Optional - Flag specifying to inject codes into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "lock",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Optional - Flag specifying if metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Plotly Pie Chart\",\n  \"value\" : {\n    \"labels\" : [ 1, 1, 1 ],\n    \"type\" : \"pie\",\n    \"values\" : [ 2, 1, 1 ]\n  }\n}"
						},
						{
							"name": "MTNA Simple Dataset",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rds/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
									"host": [
										"{{host}}"
									],
									"path": [
										"rds",
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"select"
									],
									"query": [
										{
											"key": "collimit",
											"value": "<integer>",
											"description": "Optional - Limits the number of columns returned."
										},
										{
											"key": "coloffset",
											"value": "<integer>",
											"description": "Optional - Determines which column to start at."
										},
										{
											"key": "cols",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
										},
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Optional - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Optional - Flag specifying to inject codes into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "lock",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Optional - Flag specifying if metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"MTNA Simple Dataset\",\n  \"value\" : {\n    \"info\" : {\n      \"cached\" : false,\n      \"columnCount\" : 2,\n      \"columnOffset\" : 0,\n      \"end\" : \"2019-06-26T20:10:42.210Z\",\n      \"includeMetadata\" : true,\n      \"moreColumns\" : false,\n      \"moreRows\" : true,\n      \"notes\" : [ ],\n      \"postQueryTime\" : 0,\n      \"preQueryTime\" : 98,\n      \"queryTime\" : 1579,\n      \"rowLimit\" : 3,\n      \"rowOffset\" : 0,\n      \"start\" : \"2019-06-26T20:10:40.533Z\",\n      \"totalProcessingTime\" : 1677\n    },\n    \"records\" : [ [ 1, 2 ], [ 1, 1 ], [ 1, 1 ] ],\n    \"totals\" : [ ],\n    \"variables\" : [ {\n      \"dataType\" : \"NUMERIC\",\n      \"decimals\" : 0,\n      \"endPosition\" : 2,\n      \"fixedStorageWidth\" : 2,\n      \"id\" : \"CATS\",\n      \"isPrivate\" : false,\n      \"label\" : \"NUMBER OF CATS\",\n      \"name\" : \"CATS\",\n      \"questionText\" : \"How many cats do you have?\",\n      \"startPosition\" : 0,\n      \"storageType\" : \"INT\",\n      \"summaryStatistics\" : {\n        \"dateProduced\" : \"2019-06-21T12:32:28.034Z\",\n        \"sets\" : [ {\n          \"distinctSet\" : [ ],\n          \"max\" : 1,\n          \"mean\" : 1,\n          \"min\" : 1,\n          \"missing\" : 0,\n          \"populated\" : 662,\n          \"standardDeviation\" : 0,\n          \"weighted\" : false\n        } ]\n      },\n      \"uri\" : \"c456\"\n    }, {\n      \"classificationUri\" : \"cx234\",\n      \"dataType\" : \"NUMERIC\",\n      \"decimals\" : 0,\n      \"endPosition\" : 17,\n      \"fixedStorageWidth\" : 1,\n      \"frequencies\" : {\n        \"dateProduced\" : \"2019-06-21T12:32:28.055Z\",\n        \"sets\" : [ {\n          \"map\" : {\n            \"1\" : 182,\n            \"2\" : 354,\n            \"3\" : 126\n          },\n          \"weighted\" : false,\n          \"weights\" : [ ]\n        } ]\n      },\n      \"id\" : \"DOGS\",\n      \"isPrivate\" : false,\n      \"label\" : \"NUMBER OF DOGS\",\n      \"name\" : \"DOGS\",\n      \"questionText\" : \"How many dogs do you have?\",\n      \"startPosition\" : 16,\n      \"storageType\" : \"INT\",\n      \"summaryStatistics\" : {\n        \"dateProduced\" : \"2019-06-21T12:32:28.055Z\",\n        \"sets\" : [ {\n          \"distinctSet\" : [ ],\n          \"max\" : 3,\n          \"mean\" : 1.915,\n          \"min\" : 1,\n          \"missing\" : 0,\n          \"populated\" : 662,\n          \"standardDeviation\" : 0.677,\n          \"weighted\" : false\n        } ]\n      },\n      \"uri\" : \"123\"\n    } ]\n  }\n}"
						},
						{
							"name": "AM Charts",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rds/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
									"host": [
										"{{host}}"
									],
									"path": [
										"rds",
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"select"
									],
									"query": [
										{
											"key": "collimit",
											"value": "<integer>",
											"description": "Optional - Limits the number of columns returned."
										},
										{
											"key": "coloffset",
											"value": "<integer>",
											"description": "Optional - Determines which column to start at."
										},
										{
											"key": "cols",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
										},
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Optional - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Optional - Flag specifying to inject codes into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "lock",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Optional - Flag specifying if metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"AM Charts\",\n  \"value\" : {\n    \"dataProvider\" : [ {\n      \"DOGS\" : 1,\n      \"CATS\" : 2,\n      \"BIRDS\" : 4\n    }, {\n      \"DOGS\" : 1,\n      \"CATS\" : 1,\n      \"BIRDS\" : 4\n    }, {\n      \"DOGS\" : 1,\n      \"CATS\" : 1,\n      \"BIRDS\" : 4\n    } ]\n  }\n}"
						},
						{
							"name": "Plotly Bubble Chart",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rds/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
									"host": [
										"{{host}}"
									],
									"path": [
										"rds",
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"select"
									],
									"query": [
										{
											"key": "collimit",
											"value": "<integer>",
											"description": "Optional - Limits the number of columns returned."
										},
										{
											"key": "coloffset",
											"value": "<integer>",
											"description": "Optional - Determines which column to start at."
										},
										{
											"key": "cols",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
										},
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Optional - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Optional - Flag specifying to inject codes into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "lock",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Optional - Flag specifying if metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Plotly Bubble Chart\",\n  \"value\" : {\n    \"x\" : [ 1, 2, 3, 4 ],\n    \"y\" : [ 10, 11, 12, 13 ],\n    \"mode\" : \"markers\",\n    \"marker\" : {\n      \"size\" : [ 10, 10, 10, 10 ]\n    }\n  }\n}"
						}
					]
				}
			],
			"description": "THIS IS A FOLDER DESCRIPTION",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Badly documented requests",
			"item": [
				{
					"name": "Run tabulation query. Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://host/api/query/{catalogId}/{dataProductId}/tabulate?count=<boolean>&dims=<string>&format=<format enum>&groupby=<string array>&inject=&limit=<number>&measure=&metadata=<boolean>&offset=<number>&orderby=<string>&totals=<boolean>&weights=<string array>&where=<string>",
							"protocol": "http",
							"host": [
								"host"
							],
							"path": [
								"api",
								"query",
								"{catalogId}",
								"{dataProductId}",
								"tabulate"
							],
							"query": [
								{
									"key": "count",
									"value": "<boolean>",
									"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
								},
								{
									"key": "dims",
									"value": "<string>",
									"description": "Optional - Columns to use as dimensions."
								},
								{
									"key": "format",
									"value": "<format enum>",
									"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
								},
								{
									"key": "groupby",
									"value": "<string array>",
									"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
								},
								{
									"key": "inject",
									"value": ""
								},
								{
									"key": "limit",
									"value": "<number>"
								},
								{
									"key": "measure",
									"value": "",
									"description": "Optional - Columns to use as measures. Count is used by default."
								},
								{
									"key": "metadata",
									"value": "<boolean>",
									"description": "Required - Flag specifying whether metadata should be returned along side the data."
								},
								{
									"key": "offset",
									"value": "<number>",
									"description": "Optional - The record to start at."
								},
								{
									"key": "orderby",
									"value": "<string>",
									"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
								},
								{
									"key": "totals",
									"value": "<boolean>",
									"description": "Required - Flag specifying whether subtotals should be returned along side the data."
								},
								{
									"key": "weights",
									"value": "<string array>",
									"description": "Optional - The IDs of variables to use as weights in the resulting data."
								},
								{
									"key": "where",
									"value": "<string>",
									"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
								}
							],
							"variable": [
								{
									"key": "catalogId",
									"value": "<string>",
									"description": "Required - The ID of the catalog that contains the data product."
								},
								{
									"key": "dataProductId",
									"value": "<string>",
									"description": "Required - The ID of the data product to query."
								}
							]
						},
						"description": "\n<p>\nRunning tabulations on the specified data product returns aggregate level\ndata about the dimensions and measures specified. A variety of querying\ntechniques can be used to subset, compute, order, filter and format the\nresults.\n</p>"
					},
					"response": [
						{
							"name": "Plotly Bubble Chart",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://host/api/query/{catalogId}/{dataProductId}/tabulate?count=<boolean>&dims=<string>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&measure=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&totals=<boolean>&weights=<string array>&where=<string>",
									"protocol": "http",
									"host": [
										"host"
									],
									"path": [
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"tabulate"
									],
									"query": [
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "dims",
											"value": "<string>",
											"description": "Optional - Columns to use as dimensions."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Required - Flag specifying if we want the values injected into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "measure",
											"value": "<string>",
											"description": "Optional - Columns to use as measures. Count is used by default."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "totals",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether subtotals should be returned along side the data."
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning tabulations on the specified data product returns aggregate level\ndata about the dimensions and measures specified. A variety of querying\ntechniques can be used to subset, compute, order, filter and format the\nresults.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Plotly Bubble Chart\",\n  \"value\" : {\n    \"x\" : [ 1, 2, 3, 4 ],\n    \"y\" : [ 10, 11, 12, 13 ],\n    \"mode\" : \"markers\",\n    \"marker\" : {\n      \"size\" : [ 10, 10, 10, 10 ]\n    }\n  }\n}"
						},
						{
							"name": "Plotly Scatterplot",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://host/api/query/{catalogId}/{dataProductId}/tabulate?count=<boolean>&dims=<string>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&measure=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&totals=<boolean>&weights=<string array>&where=<string>",
									"protocol": "http",
									"host": [
										"host"
									],
									"path": [
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"tabulate"
									],
									"query": [
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "dims",
											"value": "<string>",
											"description": "Optional - Columns to use as dimensions."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Required - Flag specifying if we want the values injected into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "measure",
											"value": "<string>",
											"description": "Optional - Columns to use as measures. Count is used by default."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "totals",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether subtotals should be returned along side the data."
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning tabulations on the specified data product returns aggregate level\ndata about the dimensions and measures specified. A variety of querying\ntechniques can be used to subset, compute, order, filter and format the\nresults.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Plotly Scatterplot\",\n  \"value\" : {\n    \"x\" : [ 1, 2, 3, 4 ],\n    \"y\" : [ 10, 15, 13, 17 ],\n    \"type\" : \"scatter\"\n  }\n}"
						},
						{
							"name": "MTNA Dataset",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://host/api/query/{catalogId}/{dataProductId}/tabulate?count=<boolean>&dims=<string>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&measure=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&totals=<boolean>&weights=<string array>&where=<string>",
									"protocol": "http",
									"host": [
										"host"
									],
									"path": [
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"tabulate"
									],
									"query": [
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "dims",
											"value": "<string>",
											"description": "Optional - Columns to use as dimensions."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Required - Flag specifying if we want the values injected into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "measure",
											"value": "<string>",
											"description": "Optional - Columns to use as measures. Count is used by default."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "totals",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether subtotals should be returned along side the data."
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning tabulations on the specified data product returns aggregate level\ndata about the dimensions and measures specified. A variety of querying\ntechniques can be used to subset, compute, order, filter and format the\nresults.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"MTNA Dataset\",\n  \"value\" : {\n    \"classifications\" : [ ],\n    \"dataSetInformation\" : {\n      \"cached\" : false,\n      \"columnCount\" : 2,\n      \"columnOffset\" : 0,\n      \"end\" : \"2019-06-26T20:04:47.104Z\",\n      \"includeMetadata\" : true,\n      \"moreColumns\" : false,\n      \"moreRows\" : true,\n      \"notes\" : [ ],\n      \"postQueryTime\" : 0,\n      \"preQueryTime\" : 87,\n      \"queryTime\" : 1598,\n      \"rowLimit\" : 3,\n      \"rowOffset\" : 0,\n      \"start\" : \"2019-06-26T20:04:45.419Z\",\n      \"totalProcessingTime\" : 1685\n    },\n    \"recordLayout\" : {\n      \"isPrivate\" : false,\n      \"variables\" : [ {\n        \"dataType\" : \"NUMERIC\",\n        \"decimals\" : 0,\n        \"endPosition\" : 2,\n        \"fixedStorageWidth\" : 2,\n        \"id\" : \"CATS\",\n        \"isPrivate\" : false,\n        \"label\" : \"NUMBER OF CATS\",\n        \"name\" : \"CATS\",\n        \"questionText\" : \"How many cats do you have?\",\n        \"startPosition\" : 0,\n        \"storageType\" : \"INT\",\n        \"summaryStatistics\" : {\n          \"dateProduced\" : \"2019-06-21T12:32:28.034Z\",\n          \"sets\" : [ {\n            \"distinctSet\" : [ ],\n            \"max\" : 1,\n            \"mean\" : 1,\n            \"min\" : 1,\n            \"missing\" : 0,\n            \"populated\" : 662,\n            \"standardDeviation\" : 0,\n            \"weighted\" : false\n          } ]\n        },\n        \"uri\" : \"3893482a-3f43r5f-234rrf3\"\n      }, {\n        \"classificationUri\" : \"23984fu-deu490u-aa7\",\n        \"dataType\" : \"NUMERIC\",\n        \"decimals\" : 0,\n        \"endPosition\" : 17,\n        \"fixedStorageWidth\" : 1,\n        \"frequencies\" : {\n          \"dateProduced\" : \"2019-06-21T12:32:28.055Z\",\n          \"sets\" : [ {\n            \"map\" : {\n              \"1\" : 182,\n              \"2\" : 354,\n              \"3\" : 126\n            },\n            \"weighted\" : false,\n            \"weights\" : [ ]\n          } ]\n        },\n        \"id\" : \"DOGS\",\n        \"isPrivate\" : false,\n        \"label\" : \"NUMBER OF DOGS\",\n        \"name\" : \"DOGS\",\n        \"questionText\" : \"How many dogs do you have?\",\n        \"startPosition\" : 16,\n        \"storageType\" : \"INT\",\n        \"summaryStatistics\" : {\n          \"dateProduced\" : \"2019-06-21T12:32:28.055Z\",\n          \"sets\" : [ {\n            \"distinctSet\" : [ ],\n            \"max\" : 3,\n            \"mean\" : 1.915,\n            \"min\" : 1,\n            \"missing\" : 0,\n            \"populated\" : 662,\n            \"standardDeviation\" : 0.677,\n            \"weighted\" : false\n          } ]\n        },\n        \"uri\" : \"3893482a\"\n      } ]\n    },\n    \"records\" : [ {\n      \"data\" : [ {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 1,\n          \"variable\" : {\n            \"id\" : \"CATS\",\n            \"isPrivate\" : false,\n            \"name\" : \"CATS\",\n            \"uri\" : \"3893482a-3f43r5f-234rrf3\"\n          }\n        }\n      }, {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 2,\n          \"variable\" : {\n            \"id\" : \"DOGS\",\n            \"isPrivate\" : false,\n            \"name\" : \"DOGS\",\n            \"uri\" : \"3893482a\"\n          }\n        }\n      } ]\n    }, {\n      \"data\" : [ {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 1,\n          \"variable\" : {\n            \"id\" : \"CATS\",\n            \"isPrivate\" : false,\n            \"name\" : \"CATS\",\n            \"uri\" : \"3893482a-3f43r5f-234rrf3\"\n          }\n        }\n      }, {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 1,\n          \"variable\" : {\n            \"id\" : \"DOGS\",\n            \"isPrivate\" : false,\n            \"name\" : \"DOGS\",\n            \"uri\" : \"3893482a\"\n          }\n        }\n      } ]\n    }, {\n      \"data\" : [ {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 1,\n          \"variable\" : {\n            \"id\" : \"CATS\",\n            \"isPrivate\" : false,\n            \"name\" : \"CATS\",\n            \"uri\" : \"3893482a-3f43r5f-234rrf3\"\n          }\n        }\n      }, {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 1,\n          \"variable\" : {\n            \"id\" : \"DOGS\",\n            \"isPrivate\" : false,\n            \"name\" : \"DOGS\",\n            \"uri\" : \"3893482a\"\n          }\n        }\n      } ]\n    } ],\n    \"totals\" : [ ],\n    \"variableGroups\" : [ ]\n  }\n}"
						},
						{
							"name": "Plotly Boxplot",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://host/api/query/{catalogId}/{dataProductId}/tabulate?count=<boolean>&dims=<string>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&measure=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&totals=<boolean>&weights=<string array>&where=<string>",
									"protocol": "http",
									"host": [
										"host"
									],
									"path": [
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"tabulate"
									],
									"query": [
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "dims",
											"value": "<string>",
											"description": "Optional - Columns to use as dimensions."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Required - Flag specifying if we want the values injected into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "measure",
											"value": "<string>",
											"description": "Optional - Columns to use as measures. Count is used by default."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "totals",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether subtotals should be returned along side the data."
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning tabulations on the specified data product returns aggregate level\ndata about the dimensions and measures specified. A variety of querying\ntechniques can be used to subset, compute, order, filter and format the\nresults.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Plotly Boxplot\",\n  \"value\" : {\n    \"y\" : [ 0, 1, 1, 2, 3, 5, 8, 13, 21 ],\n    \"boxpoints\" : \"all\",\n    \"jitter\" : 0.3,\n    \"pointpos\" : -1.8,\n    \"type\" : \"box\"\n  }\n}"
						},
						{
							"name": "AM Charts",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://host/api/query/{catalogId}/{dataProductId}/tabulate?count=<boolean>&dims=<string>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&measure=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&totals=<boolean>&weights=<string array>&where=<string>",
									"protocol": "http",
									"host": [
										"host"
									],
									"path": [
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"tabulate"
									],
									"query": [
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "dims",
											"value": "<string>",
											"description": "Optional - Columns to use as dimensions."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Required - Flag specifying if we want the values injected into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "measure",
											"value": "<string>",
											"description": "Optional - Columns to use as measures. Count is used by default."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "totals",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether subtotals should be returned along side the data."
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning tabulations on the specified data product returns aggregate level\ndata about the dimensions and measures specified. A variety of querying\ntechniques can be used to subset, compute, order, filter and format the\nresults.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"AM Charts\",\n  \"value\" : {\n    \"dataProvider\" : [ {\n      \"DOGS\" : 1,\n      \"CATS\" : 2,\n      \"BIRDS\" : 4\n    }, {\n      \"DOGS\" : 1,\n      \"CATS\" : 1,\n      \"BIRDS\" : 4\n    }, {\n      \"DOGS\" : 1,\n      \"CATS\" : 1,\n      \"BIRDS\" : 4\n    } ]\n  }\n}"
						},
						{
							"name": "MTNA Simple Dataset",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://host/api/query/{catalogId}/{dataProductId}/tabulate?count=<boolean>&dims=<string>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&measure=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&totals=<boolean>&weights=<string array>&where=<string>",
									"protocol": "http",
									"host": [
										"host"
									],
									"path": [
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"tabulate"
									],
									"query": [
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "dims",
											"value": "<string>",
											"description": "Optional - Columns to use as dimensions."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Required - Flag specifying if we want the values injected into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "measure",
											"value": "<string>",
											"description": "Optional - Columns to use as measures. Count is used by default."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "totals",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether subtotals should be returned along side the data."
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning tabulations on the specified data product returns aggregate level\ndata about the dimensions and measures specified. A variety of querying\ntechniques can be used to subset, compute, order, filter and format the\nresults.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"MTNA Simple Dataset\",\n  \"value\" : {\n    \"info\" : {\n      \"cached\" : false,\n      \"columnCount\" : 2,\n      \"columnOffset\" : 0,\n      \"end\" : \"2019-06-26T20:10:42.210Z\",\n      \"includeMetadata\" : true,\n      \"moreColumns\" : false,\n      \"moreRows\" : true,\n      \"notes\" : [ ],\n      \"postQueryTime\" : 0,\n      \"preQueryTime\" : 98,\n      \"queryTime\" : 1579,\n      \"rowLimit\" : 3,\n      \"rowOffset\" : 0,\n      \"start\" : \"2019-06-26T20:10:40.533Z\",\n      \"totalProcessingTime\" : 1677\n    },\n    \"records\" : [ [ 1, 2 ], [ 1, 1 ], [ 1, 1 ] ],\n    \"totals\" : [ ],\n    \"variables\" : [ {\n      \"dataType\" : \"NUMERIC\",\n      \"decimals\" : 0,\n      \"endPosition\" : 2,\n      \"fixedStorageWidth\" : 2,\n      \"id\" : \"CATS\",\n      \"isPrivate\" : false,\n      \"label\" : \"NUMBER OF CATS\",\n      \"name\" : \"CATS\",\n      \"questionText\" : \"How many cats do you have?\",\n      \"startPosition\" : 0,\n      \"storageType\" : \"INT\",\n      \"summaryStatistics\" : {\n        \"dateProduced\" : \"2019-06-21T12:32:28.034Z\",\n        \"sets\" : [ {\n          \"distinctSet\" : [ ],\n          \"max\" : 1,\n          \"mean\" : 1,\n          \"min\" : 1,\n          \"missing\" : 0,\n          \"populated\" : 662,\n          \"standardDeviation\" : 0,\n          \"weighted\" : false\n        } ]\n      },\n      \"uri\" : \"c456\"\n    }, {\n      \"classificationUri\" : \"cx234\",\n      \"dataType\" : \"NUMERIC\",\n      \"decimals\" : 0,\n      \"endPosition\" : 17,\n      \"fixedStorageWidth\" : 1,\n      \"frequencies\" : {\n        \"dateProduced\" : \"2019-06-21T12:32:28.055Z\",\n        \"sets\" : [ {\n          \"map\" : {\n            \"1\" : 182,\n            \"2\" : 354,\n            \"3\" : 126\n          },\n          \"weighted\" : false,\n          \"weights\" : [ ]\n        } ]\n      },\n      \"id\" : \"DOGS\",\n      \"isPrivate\" : false,\n      \"label\" : \"NUMBER OF DOGS\",\n      \"name\" : \"DOGS\",\n      \"questionText\" : \"How many dogs do you have?\",\n      \"startPosition\" : 16,\n      \"storageType\" : \"INT\",\n      \"summaryStatistics\" : {\n        \"dateProduced\" : \"2019-06-21T12:32:28.055Z\",\n        \"sets\" : [ {\n          \"distinctSet\" : [ ],\n          \"max\" : 3,\n          \"mean\" : 1.915,\n          \"min\" : 1,\n          \"missing\" : 0,\n          \"populated\" : 662,\n          \"standardDeviation\" : 0.677,\n          \"weighted\" : false\n        } ]\n      },\n      \"uri\" : \"123\"\n    } ]\n  }\n}"
						},
						{
							"name": "Plotly Bar Chart",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://host/api/query/{catalogId}/{dataProductId}/tabulate?count=<boolean>&dims=<string>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&measure=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&totals=<boolean>&weights=<string array>&where=<string>",
									"protocol": "http",
									"host": [
										"host"
									],
									"path": [
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"tabulate"
									],
									"query": [
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "dims",
											"value": "<string>",
											"description": "Optional - Columns to use as dimensions."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Required - Flag specifying if we want the values injected into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "measure",
											"value": "<string>",
											"description": "Optional - Columns to use as measures. Count is used by default."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "totals",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether subtotals should be returned along side the data."
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning tabulations on the specified data product returns aggregate level\ndata about the dimensions and measures specified. A variety of querying\ntechniques can be used to subset, compute, order, filter and format the\nresults.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Plotly Bar Chart\",\n  \"value\" : {\n    \"x\" : [ \"giraffes\", \"orangutans\", \"monkeys\" ],\n    \"y\" : [ 20, 14, 23 ],\n    \"type\" : \"bar\"\n  }\n}"
						},
						{
							"name": "Plotly Pie Chart",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://host/api/query/{catalogId}/{dataProductId}/tabulate?count=<boolean>&dims=<string>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&measure=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&totals=<boolean>&weights=<string array>&where=<string>",
									"protocol": "http",
									"host": [
										"host"
									],
									"path": [
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"tabulate"
									],
									"query": [
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "dims",
											"value": "<string>",
											"description": "Optional - Columns to use as dimensions."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Required - Flag specifying if we want the values injected into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "measure",
											"value": "<string>",
											"description": "Optional - Columns to use as measures. Count is used by default."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "totals",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether subtotals should be returned along side the data."
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning tabulations on the specified data product returns aggregate level\ndata about the dimensions and measures specified. A variety of querying\ntechniques can be used to subset, compute, order, filter and format the\nresults.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Plotly Pie Chart\",\n  \"value\" : {\n    \"labels\" : [ 1, 1, 1 ],\n    \"type\" : \"pie\",\n    \"values\" : [ 2, 1, 1 ]\n  }\n}"
						},
						{
							"name": "Plotly Histogram",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://host/api/query/{catalogId}/{dataProductId}/tabulate?count=<boolean>&dims=<string>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&measure=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&totals=<boolean>&weights=<string array>&where=<string>",
									"protocol": "http",
									"host": [
										"host"
									],
									"path": [
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"tabulate"
									],
									"query": [
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "dims",
											"value": "<string>",
											"description": "Optional - Columns to use as dimensions."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Required - Flag specifying if we want the values injected into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "measure",
											"value": "<string>",
											"description": "Optional - Columns to use as measures. Count is used by default."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "totals",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether subtotals should be returned along side the data."
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning tabulations on the specified data product returns aggregate level\ndata about the dimensions and measures specified. A variety of querying\ntechniques can be used to subset, compute, order, filter and format the\nresults.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Plotly Histogram\",\n  \"value\" : {\n    \"x\" : \"x0\",\n    \"opacity\" : 0.75,\n    \"type\" : \"histogram\"\n  }\n}"
						}
					]
				},
				{
					"name": "Run select query. Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/rds/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
							"host": [
								"{{host}}"
							],
							"path": [
								"rds",
								"api",
								"query",
								"{catalogId}",
								"{dataProductId}",
								"select"
							],
							"query": [
								{
									"key": "collimit",
									"value": "<integer>",
									"description": "Optional - Limits the number of columns returned."
								},
								{
									"key": "coloffset",
									"value": "<integer>",
									"description": "Optional - Determines which column to start at."
								},
								{
									"key": "cols",
									"value": "<string>",
									"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
								},
								{
									"key": "count",
									"value": "<boolean>",
									"description": "Optional - Flag specifying whether the total row count should be returned along side\nthe data."
								},
								{
									"key": "format",
									"value": "<format enum>",
									"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries, if none is specified, 'RDS'  will be set by default. Possible Values: AMCHARTS, DENODO, GCHARTS, RDS, MTNA, MTNA_TABULATE, PLOTLY_AREA, PLOTLY_BAR, PLOTLY_BOXPLOT, PLOTLY_BUBBLE, PLOTLY_HIST, PLOTLY_H_BAR, PLOTLY_H_HIST, PLOTLY_LINE, PLOTLY_PIE, PLOTLY_SCATTER, PLOTLY_TS, TABLEAU."
								},
								{
									"key": "groupby",
									"value": "<string array>",
									"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
								},
								{
									"key": "inject",
									"value": "<boolean>",
									"description": "Optional - Flag specifying to inject codes into the returned records."
								},
								{
									"key": "limit",
									"value": "<number>",
									"description": "Optional - The limit of records to return."
								},
								{
									"key": "lock",
									"value": "<string>",
									"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
								},
								{
									"key": "metadata",
									"value": "<boolean>",
									"description": "Optional - Flag specifying if metadata should be returned along side the data."
								},
								{
									"key": "offset",
									"value": "<number>",
									"description": "Optional - The record to start at."
								},
								{
									"key": "orderby",
									"value": "<string>",
									"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
								},
								{
									"key": "weights",
									"value": "<string array>",
									"description": "Optional - The IDs of variables to use as weights in the resulting data."
								},
								{
									"key": "where",
									"value": "<string>",
									"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
								}
							],
							"variable": [
								{
									"key": "catalogId",
									"value": "<string>",
									"description": "Required - The ID of the catalog that contains the data product."
								},
								{
									"key": "dataProductId",
									"value": "<string>",
									"description": "Required - The ID of the data product to query."
								}
							]
						}
					},
					"response": [
						{
							"name": "Plotly Histogram",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rds/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
									"host": [
										"{{host}}"
									],
									"path": [
										"rds",
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"select"
									],
									"query": [
										{
											"key": "collimit",
											"value": "<integer>",
											"description": "Optional - Limits the number of columns returned."
										},
										{
											"key": "coloffset",
											"value": "<integer>",
											"description": "Optional - Determines which column to start at."
										},
										{
											"key": "cols",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
										},
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Optional - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Optional - Flag specifying to inject codes into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "lock",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Optional - Flag specifying if metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Plotly Histogram\",\n  \"value\" : {\n    \"x\" : \"x0\",\n    \"opacity\" : 0.75,\n    \"type\" : \"histogram\"\n  }\n}"
						},
						{
							"name": "MTNA Dataset",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rds/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
									"host": [
										"{{host}}"
									],
									"path": [
										"rds",
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"select"
									],
									"query": [
										{
											"key": "collimit",
											"value": "<integer>",
											"description": "Optional - Limits the number of columns returned."
										},
										{
											"key": "coloffset",
											"value": "<integer>",
											"description": "Optional - Determines which column to start at."
										},
										{
											"key": "cols",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
										},
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Optional - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Optional - Flag specifying to inject codes into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "lock",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Optional - Flag specifying if metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"MTNA Dataset\",\n  \"value\" : {\n    \"classifications\" : [ ],\n    \"dataSetInformation\" : {\n      \"cached\" : false,\n      \"columnCount\" : 2,\n      \"columnOffset\" : 0,\n      \"end\" : \"2019-06-26T20:04:47.104Z\",\n      \"includeMetadata\" : true,\n      \"moreColumns\" : false,\n      \"moreRows\" : true,\n      \"notes\" : [ ],\n      \"postQueryTime\" : 0,\n      \"preQueryTime\" : 87,\n      \"queryTime\" : 1598,\n      \"rowLimit\" : 3,\n      \"rowOffset\" : 0,\n      \"start\" : \"2019-06-26T20:04:45.419Z\",\n      \"totalProcessingTime\" : 1685\n    },\n    \"recordLayout\" : {\n      \"isPrivate\" : false,\n      \"variables\" : [ {\n        \"dataType\" : \"NUMERIC\",\n        \"decimals\" : 0,\n        \"endPosition\" : 2,\n        \"fixedStorageWidth\" : 2,\n        \"id\" : \"CATS\",\n        \"isPrivate\" : false,\n        \"label\" : \"NUMBER OF CATS\",\n        \"name\" : \"CATS\",\n        \"questionText\" : \"How many cats do you have?\",\n        \"startPosition\" : 0,\n        \"storageType\" : \"INT\",\n        \"summaryStatistics\" : {\n          \"dateProduced\" : \"2019-06-21T12:32:28.034Z\",\n          \"sets\" : [ {\n            \"distinctSet\" : [ ],\n            \"max\" : 1,\n            \"mean\" : 1,\n            \"min\" : 1,\n            \"missing\" : 0,\n            \"populated\" : 662,\n            \"standardDeviation\" : 0,\n            \"weighted\" : false\n          } ]\n        },\n        \"uri\" : \"3893482a-3f43r5f-234rrf3\"\n      }, {\n        \"classificationUri\" : \"23984fu-deu490u-aa7\",\n        \"dataType\" : \"NUMERIC\",\n        \"decimals\" : 0,\n        \"endPosition\" : 17,\n        \"fixedStorageWidth\" : 1,\n        \"frequencies\" : {\n          \"dateProduced\" : \"2019-06-21T12:32:28.055Z\",\n          \"sets\" : [ {\n            \"map\" : {\n              \"1\" : 182,\n              \"2\" : 354,\n              \"3\" : 126\n            },\n            \"weighted\" : false,\n            \"weights\" : [ ]\n          } ]\n        },\n        \"id\" : \"DOGS\",\n        \"isPrivate\" : false,\n        \"label\" : \"NUMBER OF DOGS\",\n        \"name\" : \"DOGS\",\n        \"questionText\" : \"How many dogs do you have?\",\n        \"startPosition\" : 16,\n        \"storageType\" : \"INT\",\n        \"summaryStatistics\" : {\n          \"dateProduced\" : \"2019-06-21T12:32:28.055Z\",\n          \"sets\" : [ {\n            \"distinctSet\" : [ ],\n            \"max\" : 3,\n            \"mean\" : 1.915,\n            \"min\" : 1,\n            \"missing\" : 0,\n            \"populated\" : 662,\n            \"standardDeviation\" : 0.677,\n            \"weighted\" : false\n          } ]\n        },\n        \"uri\" : \"3893482a\"\n      } ]\n    },\n    \"records\" : [ {\n      \"data\" : [ {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 1,\n          \"variable\" : {\n            \"id\" : \"CATS\",\n            \"isPrivate\" : false,\n            \"name\" : \"CATS\",\n            \"uri\" : \"3893482a-3f43r5f-234rrf3\"\n          }\n        }\n      }, {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 2,\n          \"variable\" : {\n            \"id\" : \"DOGS\",\n            \"isPrivate\" : false,\n            \"name\" : \"DOGS\",\n            \"uri\" : \"3893482a\"\n          }\n        }\n      } ]\n    }, {\n      \"data\" : [ {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 1,\n          \"variable\" : {\n            \"id\" : \"CATS\",\n            \"isPrivate\" : false,\n            \"name\" : \"CATS\",\n            \"uri\" : \"3893482a-3f43r5f-234rrf3\"\n          }\n        }\n      }, {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 1,\n          \"variable\" : {\n            \"id\" : \"DOGS\",\n            \"isPrivate\" : false,\n            \"name\" : \"DOGS\",\n            \"uri\" : \"3893482a\"\n          }\n        }\n      } ]\n    }, {\n      \"data\" : [ {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 1,\n          \"variable\" : {\n            \"id\" : \"CATS\",\n            \"isPrivate\" : false,\n            \"name\" : \"CATS\",\n            \"uri\" : \"3893482a-3f43r5f-234rrf3\"\n          }\n        }\n      }, {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 1,\n          \"variable\" : {\n            \"id\" : \"DOGS\",\n            \"isPrivate\" : false,\n            \"name\" : \"DOGS\",\n            \"uri\" : \"3893482a\"\n          }\n        }\n      } ]\n    } ],\n    \"totals\" : [ ],\n    \"variableGroups\" : [ ]\n  }\n}"
						},
						{
							"name": "Plotly Boxplot",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rds/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
									"host": [
										"{{host}}"
									],
									"path": [
										"rds",
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"select"
									],
									"query": [
										{
											"key": "collimit",
											"value": "<integer>",
											"description": "Optional - Limits the number of columns returned."
										},
										{
											"key": "coloffset",
											"value": "<integer>",
											"description": "Optional - Determines which column to start at."
										},
										{
											"key": "cols",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
										},
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Optional - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Optional - Flag specifying to inject codes into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "lock",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Optional - Flag specifying if metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Plotly Boxplot\",\n  \"value\" : {\n    \"y\" : [ 0, 1, 1, 2, 3, 5, 8, 13, 21 ],\n    \"boxpoints\" : \"all\",\n    \"jitter\" : 0.3,\n    \"pointpos\" : -1.8,\n    \"type\" : \"box\"\n  }\n}"
						},
						{
							"name": "MTNA Simple Dataset",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rds/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
									"host": [
										"{{host}}"
									],
									"path": [
										"rds",
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"select"
									],
									"query": [
										{
											"key": "collimit",
											"value": "<integer>",
											"description": "Optional - Limits the number of columns returned."
										},
										{
											"key": "coloffset",
											"value": "<integer>",
											"description": "Optional - Determines which column to start at."
										},
										{
											"key": "cols",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
										},
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Optional - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Optional - Flag specifying to inject codes into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "lock",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Optional - Flag specifying if metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"MTNA Simple Dataset\",\n  \"value\" : {\n    \"info\" : {\n      \"cached\" : false,\n      \"columnCount\" : 2,\n      \"columnOffset\" : 0,\n      \"end\" : \"2019-06-26T20:10:42.210Z\",\n      \"includeMetadata\" : true,\n      \"moreColumns\" : false,\n      \"moreRows\" : true,\n      \"notes\" : [ ],\n      \"postQueryTime\" : 0,\n      \"preQueryTime\" : 98,\n      \"queryTime\" : 1579,\n      \"rowLimit\" : 3,\n      \"rowOffset\" : 0,\n      \"start\" : \"2019-06-26T20:10:40.533Z\",\n      \"totalProcessingTime\" : 1677\n    },\n    \"records\" : [ [ 1, 2 ], [ 1, 1 ], [ 1, 1 ] ],\n    \"totals\" : [ ],\n    \"variables\" : [ {\n      \"dataType\" : \"NUMERIC\",\n      \"decimals\" : 0,\n      \"endPosition\" : 2,\n      \"fixedStorageWidth\" : 2,\n      \"id\" : \"CATS\",\n      \"isPrivate\" : false,\n      \"label\" : \"NUMBER OF CATS\",\n      \"name\" : \"CATS\",\n      \"questionText\" : \"How many cats do you have?\",\n      \"startPosition\" : 0,\n      \"storageType\" : \"INT\",\n      \"summaryStatistics\" : {\n        \"dateProduced\" : \"2019-06-21T12:32:28.034Z\",\n        \"sets\" : [ {\n          \"distinctSet\" : [ ],\n          \"max\" : 1,\n          \"mean\" : 1,\n          \"min\" : 1,\n          \"missing\" : 0,\n          \"populated\" : 662,\n          \"standardDeviation\" : 0,\n          \"weighted\" : false\n        } ]\n      },\n      \"uri\" : \"c456\"\n    }, {\n      \"classificationUri\" : \"cx234\",\n      \"dataType\" : \"NUMERIC\",\n      \"decimals\" : 0,\n      \"endPosition\" : 17,\n      \"fixedStorageWidth\" : 1,\n      \"frequencies\" : {\n        \"dateProduced\" : \"2019-06-21T12:32:28.055Z\",\n        \"sets\" : [ {\n          \"map\" : {\n            \"1\" : 182,\n            \"2\" : 354,\n            \"3\" : 126\n          },\n          \"weighted\" : false,\n          \"weights\" : [ ]\n        } ]\n      },\n      \"id\" : \"DOGS\",\n      \"isPrivate\" : false,\n      \"label\" : \"NUMBER OF DOGS\",\n      \"name\" : \"DOGS\",\n      \"questionText\" : \"How many dogs do you have?\",\n      \"startPosition\" : 16,\n      \"storageType\" : \"INT\",\n      \"summaryStatistics\" : {\n        \"dateProduced\" : \"2019-06-21T12:32:28.055Z\",\n        \"sets\" : [ {\n          \"distinctSet\" : [ ],\n          \"max\" : 3,\n          \"mean\" : 1.915,\n          \"min\" : 1,\n          \"missing\" : 0,\n          \"populated\" : 662,\n          \"standardDeviation\" : 0.677,\n          \"weighted\" : false\n        } ]\n      },\n      \"uri\" : \"123\"\n    } ]\n  }\n}"
						},
						{
							"name": "Plotly Bar Chart",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rds/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
									"host": [
										"{{host}}"
									],
									"path": [
										"rds",
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"select"
									],
									"query": [
										{
											"key": "collimit",
											"value": "<integer>",
											"description": "Optional - Limits the number of columns returned."
										},
										{
											"key": "coloffset",
											"value": "<integer>",
											"description": "Optional - Determines which column to start at."
										},
										{
											"key": "cols",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
										},
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Optional - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Optional - Flag specifying to inject codes into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "lock",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Optional - Flag specifying if metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Plotly Bar Chart\",\n  \"value\" : {\n    \"x\" : [ \"giraffes\", \"orangutans\", \"monkeys\" ],\n    \"y\" : [ 20, 14, 23 ],\n    \"type\" : \"bar\"\n  }\n}"
						},
						{
							"name": "Plotly Scatterplot",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rds/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
									"host": [
										"{{host}}"
									],
									"path": [
										"rds",
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"select"
									],
									"query": [
										{
											"key": "collimit",
											"value": "<integer>",
											"description": "Optional - Limits the number of columns returned."
										},
										{
											"key": "coloffset",
											"value": "<integer>",
											"description": "Optional - Determines which column to start at."
										},
										{
											"key": "cols",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
										},
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Optional - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Optional - Flag specifying to inject codes into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "lock",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Optional - Flag specifying if metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Plotly Scatterplot\",\n  \"value\" : {\n    \"x\" : [ 1, 2, 3, 4 ],\n    \"y\" : [ 10, 15, 13, 17 ],\n    \"type\" : \"scatter\"\n  }\n}"
						},
						{
							"name": "Plotly Bubble Chart",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rds/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
									"host": [
										"{{host}}"
									],
									"path": [
										"rds",
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"select"
									],
									"query": [
										{
											"key": "collimit",
											"value": "<integer>",
											"description": "Optional - Limits the number of columns returned."
										},
										{
											"key": "coloffset",
											"value": "<integer>",
											"description": "Optional - Determines which column to start at."
										},
										{
											"key": "cols",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
										},
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Optional - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Optional - Flag specifying to inject codes into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "lock",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Optional - Flag specifying if metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Plotly Bubble Chart\",\n  \"value\" : {\n    \"x\" : [ 1, 2, 3, 4 ],\n    \"y\" : [ 10, 11, 12, 13 ],\n    \"mode\" : \"markers\",\n    \"marker\" : {\n      \"size\" : [ 10, 10, 10, 10 ]\n    }\n  }\n}"
						},
						{
							"name": "AM Charts",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rds/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
									"host": [
										"{{host}}"
									],
									"path": [
										"rds",
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"select"
									],
									"query": [
										{
											"key": "collimit",
											"value": "<integer>",
											"description": "Optional - Limits the number of columns returned."
										},
										{
											"key": "coloffset",
											"value": "<integer>",
											"description": "Optional - Determines which column to start at."
										},
										{
											"key": "cols",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
										},
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Optional - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Optional - Flag specifying to inject codes into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "lock",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Optional - Flag specifying if metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"AM Charts\",\n  \"value\" : {\n    \"dataProvider\" : [ {\n      \"DOGS\" : 1,\n      \"CATS\" : 2,\n      \"BIRDS\" : 4\n    }, {\n      \"DOGS\" : 1,\n      \"CATS\" : 1,\n      \"BIRDS\" : 4\n    }, {\n      \"DOGS\" : 1,\n      \"CATS\" : 1,\n      \"BIRDS\" : 4\n    } ]\n  }\n}"
						},
						{
							"name": "MTNA Simple Dataset",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rds/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
									"host": [
										"{{host}}"
									],
									"path": [
										"rds",
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"select"
									],
									"query": [
										{
											"key": "collimit",
											"value": "<integer>",
											"description": "Optional - Limits the number of columns returned."
										},
										{
											"key": "coloffset",
											"value": "<integer>",
											"description": "Optional - Determines which column to start at."
										},
										{
											"key": "cols",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
										},
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Optional - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Optional - Flag specifying to inject codes into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "lock",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Optional - Flag specifying if metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"MTNA Simple Dataset\",\n  \"value\" : {\n    \"info\" : {\n      \"cached\" : false,\n      \"columnCount\" : 2,\n      \"columnOffset\" : 0,\n      \"end\" : \"2019-06-26T20:10:42.210Z\",\n      \"includeMetadata\" : true,\n      \"moreColumns\" : false,\n      \"moreRows\" : true,\n      \"notes\" : [ ],\n      \"postQueryTime\" : 0,\n      \"preQueryTime\" : 98,\n      \"queryTime\" : 1579,\n      \"rowLimit\" : 3,\n      \"rowOffset\" : 0,\n      \"start\" : \"2019-06-26T20:10:40.533Z\",\n      \"totalProcessingTime\" : 1677\n    },\n    \"records\" : [ [ 1, 2 ], [ 1, 1 ], [ 1, 1 ] ],\n    \"totals\" : [ ],\n    \"variables\" : [ {\n      \"dataType\" : \"NUMERIC\",\n      \"decimals\" : 0,\n      \"endPosition\" : 2,\n      \"fixedStorageWidth\" : 2,\n      \"id\" : \"CATS\",\n      \"isPrivate\" : false,\n      \"label\" : \"NUMBER OF CATS\",\n      \"name\" : \"CATS\",\n      \"questionText\" : \"How many cats do you have?\",\n      \"startPosition\" : 0,\n      \"storageType\" : \"INT\",\n      \"summaryStatistics\" : {\n        \"dateProduced\" : \"2019-06-21T12:32:28.034Z\",\n        \"sets\" : [ {\n          \"distinctSet\" : [ ],\n          \"max\" : 1,\n          \"mean\" : 1,\n          \"min\" : 1,\n          \"missing\" : 0,\n          \"populated\" : 662,\n          \"standardDeviation\" : 0,\n          \"weighted\" : false\n        } ]\n      },\n      \"uri\" : \"c456\"\n    }, {\n      \"classificationUri\" : \"cx234\",\n      \"dataType\" : \"NUMERIC\",\n      \"decimals\" : 0,\n      \"endPosition\" : 17,\n      \"fixedStorageWidth\" : 1,\n      \"frequencies\" : {\n        \"dateProduced\" : \"2019-06-21T12:32:28.055Z\",\n        \"sets\" : [ {\n          \"map\" : {\n            \"1\" : 182,\n            \"2\" : 354,\n            \"3\" : 126\n          },\n          \"weighted\" : false,\n          \"weights\" : [ ]\n        } ]\n      },\n      \"id\" : \"DOGS\",\n      \"isPrivate\" : false,\n      \"label\" : \"NUMBER OF DOGS\",\n      \"name\" : \"DOGS\",\n      \"questionText\" : \"How many dogs do you have?\",\n      \"startPosition\" : 16,\n      \"storageType\" : \"INT\",\n      \"summaryStatistics\" : {\n        \"dateProduced\" : \"2019-06-21T12:32:28.055Z\",\n        \"sets\" : [ {\n          \"distinctSet\" : [ ],\n          \"max\" : 3,\n          \"mean\" : 1.915,\n          \"min\" : 1,\n          \"missing\" : 0,\n          \"populated\" : 662,\n          \"standardDeviation\" : 0.677,\n          \"weighted\" : false\n        } ]\n      },\n      \"uri\" : \"123\"\n    } ]\n  }\n}"
						},
						{
							"name": "Plotly Pie Chart",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rds/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
									"host": [
										"{{host}}"
									],
									"path": [
										"rds",
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"select"
									],
									"query": [
										{
											"key": "collimit",
											"value": "<integer>",
											"description": "Optional - Limits the number of columns returned."
										},
										{
											"key": "coloffset",
											"value": "<integer>",
											"description": "Optional - Determines which column to start at."
										},
										{
											"key": "cols",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
										},
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Optional - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Optional - Flag specifying to inject codes into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "lock",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Optional - Flag specifying if metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Plotly Pie Chart\",\n  \"value\" : {\n    \"labels\" : [ 1, 1, 1 ],\n    \"type\" : \"pie\",\n    \"values\" : [ 2, 1, 1 ]\n  }\n}"
						},
						{
							"name": "Google Charts",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rds/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
									"host": [
										"{{host}}"
									],
									"path": [
										"rds",
										"api",
										"query",
										"{catalogId}",
										"{dataProductId}",
										"select"
									],
									"query": [
										{
											"key": "collimit",
											"value": "<integer>",
											"description": "Optional - Limits the number of columns returned."
										},
										{
											"key": "coloffset",
											"value": "<integer>",
											"description": "Optional - Determines which column to start at."
										},
										{
											"key": "cols",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
										},
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Optional - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Optional - Flag specifying to inject codes into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "lock",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Optional - Flag specifying if metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									],
									"variable": [
										{
											"key": "catalogId",
											"value": "<string>",
											"description": "Required - The ID of the catalog that contains the data product."
										},
										{
											"key": "dataProductId",
											"value": "<string>",
											"description": "Required - The ID of the data product to query."
										}
									]
								},
								"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
							},
							"status": "Successful request",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"summary\" : \"Google Charts\",\n  \"value\" : {\n    \"cols\" : [ {\n      \"id\" : \"CATS\",\n      \"label\" : \"Number of cats\",\n      \"type\" : \"string\"\n    }, {\n      \"id\" : \"DOGS\",\n      \"label\" : \"Number of dogs\",\n      \"type\" : \"string\"\n    }, {\n      \"id\" : \"BIRDS\",\n      \"label\" : \"Number of birds\",\n      \"type\" : \"string\"\n    } ],\n    \"rows\" : [ {\n      \"c\" : [ {\n        \"v\" : 1\n      }, {\n        \"v\" : 2\n      }, {\n        \"v\" : 4\n      } ]\n    }, {\n      \"c\" : [ {\n        \"v\" : 1\n      }, {\n        \"v\" : 1\n      }, {\n        \"v\" : 4\n      } ]\n    }, {\n      \"c\" : [ {\n        \"v\" : 1\n      }, {\n        \"v\" : 1\n      }, {\n        \"v\" : 4\n      } ]\n    } ]\n  }\n}"
						}
					]
				},
				{
					"name": "Create data product. Copy",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"citation\": \"...\",\n    \"lastUpdate\": 12345,\n    \"name\": \"...\",\n    \"description\": \"...\",\n    \"provenance\": \"...\",\n    \"label\": \"...\",\n    \"keywords\": [\n        \"...\",\n        \"...\"\n    ],\n    \"keywordCount\": 12345,\n    \"uri\": \"...\",\n    \"note\": \"...\",\n    \"id\": \"...\",\n    \"dataSource\": {\n        \"name\": \"...\",\n        \"id\": \"...\",\n        \"purpose\": [\n            \"...\",\n            \"...\"\n        ],\n        \"configuration\": {\n            \"recordLayout\": {},\n            \"tableName\": \"...\",\n            \"dataSourceType\": \"BIGQUERY\",\n            \"user\": \"...\",\n            \"password\": \"...\",\n            \"connectionString\": \"...\",\n            \"readerConfiguration\": {},\n            \"$type\": \"SQL\"\n        },\n        \"description\": \"...\",\n        \"target\": {\n            \"recordLayout\": {},\n            \"tableName\": \"...\",\n            \"dataSourceType\": \"VERTICA\",\n            \"user\": \"...\",\n            \"password\": \"...\",\n            \"connectionString\": \"...\",\n            \"readerConfiguration\": {},\n            \"$type\": \"SQL\"\n        }\n    },\n    \"restriction\": \"...\",\n    \"urlCount\": 12345,\n    \"documentation\": \"...\",\n    \"urls\": [\n        \"...\",\n        \"...\"\n    ],\n    \"variableCount\": 12345,\n    \"exclusion\": \"...\",\n    \"isPrivate\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/rds/api/catalog/{catalogId}/{dataProductId}",
							"host": [
								"{{host}}"
							],
							"path": [
								"rds",
								"api",
								"catalog",
								"{catalogId}",
								"{dataProductId}"
							],
							"variable": [
								{
									"key": "catalogId",
									"value": "<string>",
									"description": "Required - The ID of the catalog to create the product in."
								},
								{
									"key": "dataProductId",
									"value": "<string>",
									"description": "Required - The ID of the data product being created."
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create data product.",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"citation\": \"...\",\n    \"lastUpdate\": 12345,\n    \"name\": \"...\",\n    \"description\": \"...\",\n    \"provenance\": \"...\",\n    \"label\": \"...\",\n    \"keywords\": [\n        \"...\",\n        \"...\"\n    ],\n    \"keywordCount\": 12345,\n    \"uri\": \"...\",\n    \"note\": \"...\",\n    \"id\": \"...\",\n    \"dataSource\": {\n        \"name\": \"...\",\n        \"id\": \"...\",\n        \"purpose\": [\n            \"...\",\n            \"...\"\n        ],\n        \"configuration\": {\n            \"recordLayout\": {},\n            \"tableName\": \"...\",\n            \"dataSourceType\": \"BIGQUERY\",\n            \"user\": \"...\",\n            \"password\": \"...\",\n            \"connectionString\": \"...\",\n            \"readerConfiguration\": {},\n            \"$type\": \"SQL\"\n        },\n        \"description\": \"...\",\n        \"target\": {\n            \"recordLayout\": {},\n            \"tableName\": \"...\",\n            \"dataSourceType\": \"VERTICA\",\n            \"user\": \"...\",\n            \"password\": \"...\",\n            \"connectionString\": \"...\",\n            \"readerConfiguration\": {},\n            \"$type\": \"SQL\"\n        }\n    },\n    \"restriction\": \"...\",\n    \"urlCount\": 12345,\n    \"documentation\": \"...\",\n    \"urls\": [\n        \"...\",\n        \"...\"\n    ],\n    \"variableCount\": 12345,\n    \"exclusion\": \"...\",\n    \"isPrivate\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/rds/api/catalog/{catalogId}/{dataProductId}",
					"host": [
						"{{host}}"
					],
					"path": [
						"rds",
						"api",
						"catalog",
						"{catalogId}",
						"{dataProductId}"
					],
					"variable": [
						{
							"key": "catalogId",
							"value": "<string>",
							"description": "Required - The ID of the catalog to create the product in."
						},
						{
							"key": "dataProductId",
							"value": "<string>",
							"description": "Required - The ID of the data product being created."
						}
					]
				},
				"description": "\n<p>\nCreates a new data product with the specified ID in the specified\ncatalog.\n</p>"
			},
			"response": [
				{
					"name": "Process started.",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"citation\" : \"...\",\n  \"lastUpdate\" : 12345,\n  \"name\" : \"...\",\n  \"description\" : \"...\",\n  \"provenance\" : \"...\",\n  \"label\" : \"...\",\n  \"keywords\" : [ \"...\", \"...\" ],\n  \"keywordCount\" : 12345,\n  \"uri\" : \"...\",\n  \"note\" : \"...\",\n  \"id\" : \"...\",\n  \"dataSource\" : {\n    \"name\" : \"...\",\n    \"id\" : \"...\",\n    \"purpose\" : [ \"...\", \"...\" ],\n    \"configuration\" : {\n      \"recordLayout\" : { },\n      \"tableName\" : \"...\",\n      \"dataSourceType\" : \"BIGQUERY\",\n      \"user\" : \"...\",\n      \"password\" : \"...\",\n      \"connectionString\" : \"...\",\n      \"readerConfiguration\" : { },\n      \"$type\" : \"SQL\"\n    },\n    \"description\" : \"...\",\n    \"target\" : {\n      \"recordLayout\" : { },\n      \"tableName\" : \"...\",\n      \"dataSourceType\" : \"VERTICA\",\n      \"user\" : \"...\",\n      \"password\" : \"...\",\n      \"connectionString\" : \"...\",\n      \"readerConfiguration\" : { },\n      \"$type\" : \"SQL\"\n    }\n  },\n  \"restriction\" : \"...\",\n  \"urlCount\" : 12345,\n  \"documentation\" : \"...\",\n  \"urls\" : [ \"...\", \"...\" ],\n  \"variableCount\" : 12345,\n  \"exclusion\" : \"...\",\n  \"isPrivate\" : true\n}"
						},
						"url": {
							"raw": "{{host}}/rds/api/catalog/{catalogId}/{dataProductId}",
							"host": [
								"{{host}}"
							],
							"path": [
								"rds",
								"api",
								"catalog",
								"{catalogId}",
								"{dataProductId}"
							],
							"variable": [
								{
									"key": "catalogId",
									"value": "<string>",
									"description": "Required - The ID of the catalog to create the product in."
								},
								{
									"key": "dataProductId",
									"value": "<string>",
									"description": "Required - The ID of the data product being created."
								}
							]
						},
						"description": "\n<p>\nCreates a new data product with the specified ID in the specified\ncatalog.\n</p>"
					},
					"status": "Process started.",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "\"Process started.\""
				}
			]
		},
		{
			"name": "Update existing catalog.",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"dataProducts\" : [ {\n    \"citation\" : \"...\",\n    \"lastUpdate\" : 12345,\n    \"name\" : \"...\",\n    \"description\" : \"...\",\n    \"provenance\" : \"...\",\n    \"label\" : \"...\",\n    \"keywords\" : [ \"...\", \"...\" ],\n    \"keywordCount\" : 12345,\n    \"uri\" : \"...\",\n    \"note\" : \"...\",\n    \"id\" : \"...\",\n    \"dataSource\" : {\n      \"name\" : \"...\",\n      \"id\" : \"...\",\n      \"purpose\" : [ \"...\", \"...\" ],\n      \"configuration\" : { },\n      \"description\" : \"...\",\n      \"target\" : { }\n    },\n    \"restriction\" : \"...\",\n    \"urlCount\" : 12345,\n    \"documentation\" : \"...\",\n    \"urls\" : [ \"...\", \"...\" ],\n    \"variableCount\" : 12345,\n    \"exclusion\" : \"...\",\n    \"isPrivate\" : true\n  }, {\n    \"citation\" : \"...\",\n    \"lastUpdate\" : 12345,\n    \"name\" : \"...\",\n    \"description\" : \"...\",\n    \"provenance\" : \"...\",\n    \"label\" : \"...\",\n    \"keywords\" : [ \"...\", \"...\" ],\n    \"keywordCount\" : 12345,\n    \"uri\" : \"...\",\n    \"note\" : \"...\",\n    \"id\" : \"...\",\n    \"dataSource\" : {\n      \"name\" : \"...\",\n      \"id\" : \"...\",\n      \"purpose\" : [ \"...\", \"...\" ],\n      \"configuration\" : { },\n      \"description\" : \"...\",\n      \"target\" : { }\n    },\n    \"restriction\" : \"...\",\n    \"urlCount\" : 12345,\n    \"documentation\" : \"...\",\n    \"urls\" : [ \"...\", \"...\" ],\n    \"variableCount\" : 12345,\n    \"exclusion\" : \"...\",\n    \"isPrivate\" : true\n  } ],\n  \"lastUpdate\" : 12345,\n  \"exclusion\" : \"...\",\n  \"name\" : \"...\",\n  \"catalogCount\" : 12345,\n  \"description\" : \"...\",\n  \"label\" : \"...\",\n  \"catalogs\" : [ {\n    \"dataProducts\" : [ {\n      \"citation\" : \"...\",\n      \"lastUpdate\" : 12345,\n      \"name\" : \"...\",\n      \"description\" : \"...\",\n      \"provenance\" : \"...\",\n      \"label\" : \"...\",\n      \"keywords\" : [ \"...\", \"...\" ],\n      \"keywordCount\" : 12345,\n      \"uri\" : \"...\",\n      \"note\" : \"...\",\n      \"id\" : \"...\",\n      \"dataSource\" : { },\n      \"restriction\" : \"...\",\n      \"urlCount\" : 12345,\n      \"documentation\" : \"...\",\n      \"urls\" : [ \"...\", \"...\" ],\n      \"variableCount\" : 12345,\n      \"exclusion\" : \"...\",\n      \"isPrivate\" : true\n    }, {\n      \"citation\" : \"...\",\n      \"lastUpdate\" : 12345,\n      \"name\" : \"...\",\n      \"description\" : \"...\",\n      \"provenance\" : \"...\",\n      \"label\" : \"...\",\n      \"keywords\" : [ \"...\", \"...\" ],\n      \"keywordCount\" : 12345,\n      \"uri\" : \"...\",\n      \"note\" : \"...\",\n      \"id\" : \"...\",\n      \"dataSource\" : { },\n      \"restriction\" : \"...\",\n      \"urlCount\" : 12345,\n      \"documentation\" : \"...\",\n      \"urls\" : [ \"...\", \"...\" ],\n      \"variableCount\" : 12345,\n      \"exclusion\" : \"...\",\n      \"isPrivate\" : true\n    } ],\n    \"lastUpdate\" : 12345,\n    \"exclusion\" : \"...\",\n    \"name\" : \"...\",\n    \"catalogCount\" : 12345,\n    \"description\" : \"...\",\n    \"label\" : \"...\",\n    \"catalogs\" : [ { }, { } ],\n    \"documentation\" : \"...\",\n    \"isPrivate\" : true,\n    \"id\" : \"...\",\n    \"keywords\" : [ \"...\", \"...\" ],\n    \"dataProductCount\" : 12345,\n    \"urls\" : [ \"...\", \"...\" ],\n    \"uri\" : \"...\",\n    \"keywordCount\" : 12345,\n    \"urlCount\" : 12345\n  }, {\n    \"dataProducts\" : [ {\n      \"citation\" : \"...\",\n      \"lastUpdate\" : 12345,\n      \"name\" : \"...\",\n      \"description\" : \"...\",\n      \"provenance\" : \"...\",\n      \"label\" : \"...\",\n      \"keywords\" : [ \"...\", \"...\" ],\n      \"keywordCount\" : 12345,\n      \"uri\" : \"...\",\n      \"note\" : \"...\",\n      \"id\" : \"...\",\n      \"dataSource\" : { },\n      \"restriction\" : \"...\",\n      \"urlCount\" : 12345,\n      \"documentation\" : \"...\",\n      \"urls\" : [ \"...\", \"...\" ],\n      \"variableCount\" : 12345,\n      \"exclusion\" : \"...\",\n      \"isPrivate\" : true\n    }, {\n      \"citation\" : \"...\",\n      \"lastUpdate\" : 12345,\n      \"name\" : \"...\",\n      \"description\" : \"...\",\n      \"provenance\" : \"...\",\n      \"label\" : \"...\",\n      \"keywords\" : [ \"...\", \"...\" ],\n      \"keywordCount\" : 12345,\n      \"uri\" : \"...\",\n      \"note\" : \"...\",\n      \"id\" : \"...\",\n      \"dataSource\" : { },\n      \"restriction\" : \"...\",\n      \"urlCount\" : 12345,\n      \"documentation\" : \"...\",\n      \"urls\" : [ \"...\", \"...\" ],\n      \"variableCount\" : 12345,\n      \"exclusion\" : \"...\",\n      \"isPrivate\" : true\n    } ],\n    \"lastUpdate\" : 12345,\n    \"exclusion\" : \"...\",\n    \"name\" : \"...\",\n    \"catalogCount\" : 12345,\n    \"description\" : \"...\",\n    \"label\" : \"...\",\n    \"catalogs\" : [ { }, { } ],\n    \"documentation\" : \"...\",\n    \"isPrivate\" : true,\n    \"id\" : \"...\",\n    \"keywords\" : [ \"...\", \"...\" ],\n    \"dataProductCount\" : 12345,\n    \"urls\" : [ \"...\", \"...\" ],\n    \"uri\" : \"...\",\n    \"keywordCount\" : 12345,\n    \"urlCount\" : 12345\n  } ],\n  \"documentation\" : \"...\",\n  \"isPrivate\" : true,\n  \"id\" : \"...\",\n  \"keywords\" : [ \"...\", \"...\" ],\n  \"dataProductCount\" : 12345,\n  \"urls\" : [ \"...\", \"...\" ],\n  \"uri\" : \"...\",\n  \"keywordCount\" : 12345,\n  \"urlCount\" : 12345\n}"
				},
				"url": {
					"raw": "{{host}}/rds/api/catalog/{catalogId}",
					"host": [
						"{{host}}"
					],
					"path": [
						"rds",
						"api",
						"catalog",
						"{catalogId}"
					],
					"variable": [
						{
							"key": "catalogId",
							"value": "<string>",
							"description": "Required - The ID of the catalog to update."
						}
					]
				},
				"description": "<p>\nThis is an administrative end point meant to update the a specified\ncatalog with values from the provided catalog object.\n</p>"
			},
			"response": [
				{
					"name": "Process started.",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"dataProducts\" : [ {\n    \"citation\" : \"...\",\n    \"lastUpdate\" : 12345,\n    \"name\" : \"...\",\n    \"description\" : \"...\",\n    \"provenance\" : \"...\",\n    \"label\" : \"...\",\n    \"keywords\" : [ \"...\", \"...\" ],\n    \"keywordCount\" : 12345,\n    \"uri\" : \"...\",\n    \"note\" : \"...\",\n    \"id\" : \"...\",\n    \"dataSource\" : {\n      \"name\" : \"...\",\n      \"id\" : \"...\",\n      \"purpose\" : [ \"...\", \"...\" ],\n      \"configuration\" : { },\n      \"description\" : \"...\",\n      \"target\" : { }\n    },\n    \"restriction\" : \"...\",\n    \"urlCount\" : 12345,\n    \"documentation\" : \"...\",\n    \"urls\" : [ \"...\", \"...\" ],\n    \"variableCount\" : 12345,\n    \"exclusion\" : \"...\",\n    \"isPrivate\" : true\n  }, {\n    \"citation\" : \"...\",\n    \"lastUpdate\" : 12345,\n    \"name\" : \"...\",\n    \"description\" : \"...\",\n    \"provenance\" : \"...\",\n    \"label\" : \"...\",\n    \"keywords\" : [ \"...\", \"...\" ],\n    \"keywordCount\" : 12345,\n    \"uri\" : \"...\",\n    \"note\" : \"...\",\n    \"id\" : \"...\",\n    \"dataSource\" : {\n      \"name\" : \"...\",\n      \"id\" : \"...\",\n      \"purpose\" : [ \"...\", \"...\" ],\n      \"configuration\" : { },\n      \"description\" : \"...\",\n      \"target\" : { }\n    },\n    \"restriction\" : \"...\",\n    \"urlCount\" : 12345,\n    \"documentation\" : \"...\",\n    \"urls\" : [ \"...\", \"...\" ],\n    \"variableCount\" : 12345,\n    \"exclusion\" : \"...\",\n    \"isPrivate\" : true\n  } ],\n  \"lastUpdate\" : 12345,\n  \"exclusion\" : \"...\",\n  \"name\" : \"...\",\n  \"catalogCount\" : 12345,\n  \"description\" : \"...\",\n  \"label\" : \"...\",\n  \"catalogs\" : [ {\n    \"dataProducts\" : [ {\n      \"citation\" : \"...\",\n      \"lastUpdate\" : 12345,\n      \"name\" : \"...\",\n      \"description\" : \"...\",\n      \"provenance\" : \"...\",\n      \"label\" : \"...\",\n      \"keywords\" : [ \"...\", \"...\" ],\n      \"keywordCount\" : 12345,\n      \"uri\" : \"...\",\n      \"note\" : \"...\",\n      \"id\" : \"...\",\n      \"dataSource\" : { },\n      \"restriction\" : \"...\",\n      \"urlCount\" : 12345,\n      \"documentation\" : \"...\",\n      \"urls\" : [ \"...\", \"...\" ],\n      \"variableCount\" : 12345,\n      \"exclusion\" : \"...\",\n      \"isPrivate\" : true\n    }, {\n      \"citation\" : \"...\",\n      \"lastUpdate\" : 12345,\n      \"name\" : \"...\",\n      \"description\" : \"...\",\n      \"provenance\" : \"...\",\n      \"label\" : \"...\",\n      \"keywords\" : [ \"...\", \"...\" ],\n      \"keywordCount\" : 12345,\n      \"uri\" : \"...\",\n      \"note\" : \"...\",\n      \"id\" : \"...\",\n      \"dataSource\" : { },\n      \"restriction\" : \"...\",\n      \"urlCount\" : 12345,\n      \"documentation\" : \"...\",\n      \"urls\" : [ \"...\", \"...\" ],\n      \"variableCount\" : 12345,\n      \"exclusion\" : \"...\",\n      \"isPrivate\" : true\n    } ],\n    \"lastUpdate\" : 12345,\n    \"exclusion\" : \"...\",\n    \"name\" : \"...\",\n    \"catalogCount\" : 12345,\n    \"description\" : \"...\",\n    \"label\" : \"...\",\n    \"catalogs\" : [ { }, { } ],\n    \"documentation\" : \"...\",\n    \"isPrivate\" : true,\n    \"id\" : \"...\",\n    \"keywords\" : [ \"...\", \"...\" ],\n    \"dataProductCount\" : 12345,\n    \"urls\" : [ \"...\", \"...\" ],\n    \"uri\" : \"...\",\n    \"keywordCount\" : 12345,\n    \"urlCount\" : 12345\n  }, {\n    \"dataProducts\" : [ {\n      \"citation\" : \"...\",\n      \"lastUpdate\" : 12345,\n      \"name\" : \"...\",\n      \"description\" : \"...\",\n      \"provenance\" : \"...\",\n      \"label\" : \"...\",\n      \"keywords\" : [ \"...\", \"...\" ],\n      \"keywordCount\" : 12345,\n      \"uri\" : \"...\",\n      \"note\" : \"...\",\n      \"id\" : \"...\",\n      \"dataSource\" : { },\n      \"restriction\" : \"...\",\n      \"urlCount\" : 12345,\n      \"documentation\" : \"...\",\n      \"urls\" : [ \"...\", \"...\" ],\n      \"variableCount\" : 12345,\n      \"exclusion\" : \"...\",\n      \"isPrivate\" : true\n    }, {\n      \"citation\" : \"...\",\n      \"lastUpdate\" : 12345,\n      \"name\" : \"...\",\n      \"description\" : \"...\",\n      \"provenance\" : \"...\",\n      \"label\" : \"...\",\n      \"keywords\" : [ \"...\", \"...\" ],\n      \"keywordCount\" : 12345,\n      \"uri\" : \"...\",\n      \"note\" : \"...\",\n      \"id\" : \"...\",\n      \"dataSource\" : { },\n      \"restriction\" : \"...\",\n      \"urlCount\" : 12345,\n      \"documentation\" : \"...\",\n      \"urls\" : [ \"...\", \"...\" ],\n      \"variableCount\" : 12345,\n      \"exclusion\" : \"...\",\n      \"isPrivate\" : true\n    } ],\n    \"lastUpdate\" : 12345,\n    \"exclusion\" : \"...\",\n    \"name\" : \"...\",\n    \"catalogCount\" : 12345,\n    \"description\" : \"...\",\n    \"label\" : \"...\",\n    \"catalogs\" : [ { }, { } ],\n    \"documentation\" : \"...\",\n    \"isPrivate\" : true,\n    \"id\" : \"...\",\n    \"keywords\" : [ \"...\", \"...\" ],\n    \"dataProductCount\" : 12345,\n    \"urls\" : [ \"...\", \"...\" ],\n    \"uri\" : \"...\",\n    \"keywordCount\" : 12345,\n    \"urlCount\" : 12345\n  } ],\n  \"documentation\" : \"...\",\n  \"isPrivate\" : true,\n  \"id\" : \"...\",\n  \"keywords\" : [ \"...\", \"...\" ],\n  \"dataProductCount\" : 12345,\n  \"urls\" : [ \"...\", \"...\" ],\n  \"uri\" : \"...\",\n  \"keywordCount\" : 12345,\n  \"urlCount\" : 12345\n}"
						},
						"url": {
							"raw": "{{host}}/rds/api/catalog/{catalogId}",
							"host": [
								"{{host}}"
							],
							"path": [
								"rds",
								"api",
								"catalog",
								"{catalogId}"
							],
							"variable": [
								{
									"key": "catalogId",
									"value": "<string>",
									"description": "Required - The ID of the catalog to update."
								}
							]
						},
						"description": "\n<p>\nThis is an administrative end point meant to update the a specified\ncatalog with values from the provided catalog object.\n</p>"
					},
					"status": "Process started.",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "\"Process started.\""
				}
			]
		},
		{
			"name": "Update a variable.",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"questionText\" : \"...\",\n  \"isMeasure\" : true,\n  \"endPosition\" : 12345,\n  \"isDisclosive\" : true,\n  \"index\" : 12345,\n  \"synonyms\" : [ \"...\", \"...\" ],\n  \"isWeight\" : true,\n  \"decimals\" : 12345,\n  \"synonymCount\" : 12345,\n  \"computation\" : {\n    \"computationExpressions\" : [ \"...\", \"...\" ],\n    \"computationExpressionCount\" : 12345,\n    \"variables\" : [ {\n      \"questionText\" : \"...\",\n      \"isMeasure\" : true,\n      \"endPosition\" : 12345,\n      \"isDisclosive\" : true,\n      \"index\" : 12345,\n      \"synonyms\" : [ \"...\", \"...\" ],\n      \"isWeight\" : true,\n      \"decimals\" : 12345,\n      \"synonymCount\" : 12345,\n      \"computation\" : { },\n      \"startPosition\" : 12345,\n      \"storageType\" : \"...\",\n      \"frequencies\" : { },\n      \"summaryStatistics\" : { },\n      \"fixedStorageWidth\" : 12345,\n      \"dataType\" : \"...\",\n      \"isDimension\" : true,\n      \"classificationUri\" : \"...\",\n      \"format\" : \"...\",\n      \"classification\" : { },\n      \"isRequired\" : true\n    }, {\n      \"questionText\" : \"...\",\n      \"isMeasure\" : true,\n      \"endPosition\" : 12345,\n      \"isDisclosive\" : true,\n      \"index\" : 12345,\n      \"synonyms\" : [ \"...\", \"...\" ],\n      \"isWeight\" : true,\n      \"decimals\" : 12345,\n      \"synonymCount\" : 12345,\n      \"computation\" : { },\n      \"startPosition\" : 12345,\n      \"storageType\" : \"...\",\n      \"frequencies\" : { },\n      \"summaryStatistics\" : { },\n      \"fixedStorageWidth\" : 12345,\n      \"dataType\" : \"...\",\n      \"isDimension\" : true,\n      \"classificationUri\" : \"...\",\n      \"format\" : \"...\",\n      \"classification\" : { },\n      \"isRequired\" : true\n    } ],\n    \"variableCount\" : 12345\n  },\n  \"startPosition\" : 12345,\n  \"storageType\" : \"...\",\n  \"frequencies\" : {\n    \"sets\" : [ {\n      \"map\" : {\n        \"property1\" : 12345.0,\n        \"property2\" : 12345.0\n      },\n      \"weights\" : [ \"...\", \"...\" ],\n      \"weighted\" : true\n    }, {\n      \"map\" : {\n        \"property1\" : 12345.0,\n        \"property2\" : 12345.0\n      },\n      \"weights\" : [ \"...\", \"...\" ],\n      \"weighted\" : true\n    } ],\n    \"dateProduced\" : 12345\n  },\n  \"summaryStatistics\" : {\n    \"sets\" : [ {\n      \"median\" : 12345.0,\n      \"distinctSet\" : [ { }, { } ],\n      \"max\" : 12345.0,\n      \"standardDeviation\" : 12345.0,\n      \"distinct\" : 12345.0,\n      \"kurtosis\" : 12345.0,\n      \"userMissing\" : 12345.0,\n      \"variance\" : 12345.0,\n      \"min\" : 12345.0,\n      \"missing\" : 12345.0,\n      \"weights\" : [ \"...\", \"...\" ],\n      \"populated\" : 12345.0,\n      \"skewness\" : 12345.0,\n      \"weighted\" : true,\n      \"mean\" : 12345.0\n    }, {\n      \"median\" : 12345.0,\n      \"distinctSet\" : [ { }, { } ],\n      \"max\" : 12345.0,\n      \"standardDeviation\" : 12345.0,\n      \"distinct\" : 12345.0,\n      \"kurtosis\" : 12345.0,\n      \"userMissing\" : 12345.0,\n      \"variance\" : 12345.0,\n      \"min\" : 12345.0,\n      \"missing\" : 12345.0,\n      \"weights\" : [ \"...\", \"...\" ],\n      \"populated\" : 12345.0,\n      \"skewness\" : 12345.0,\n      \"weighted\" : true,\n      \"mean\" : 12345.0\n    } ],\n    \"dateProduced\" : 12345\n  },\n  \"fixedStorageWidth\" : 12345,\n  \"dataType\" : \"...\",\n  \"isDimension\" : true,\n  \"classificationUri\" : \"...\",\n  \"format\" : \"...\",\n  \"classification\" : {\n    \"codes\" : [ {\n      \"synonyms\" : [ \"...\", \"...\" ],\n      \"sinceVersion\" : { },\n      \"childUris\" : [ \"...\", \"...\" ],\n      \"translationAidCount\" : 12345,\n      \"codeValue\" : \"...\",\n      \"childCount\" : 12345,\n      \"reverseTranslationAids\" : [ { }, { } ],\n      \"category\" : { },\n      \"translationAids\" : [ { }, { } ],\n      \"residual\" : true,\n      \"reverseTranslationAidCount\" : 12345,\n      \"parent\" : \"...\",\n      \"synonymCount\" : 12345\n    }, {\n      \"synonyms\" : [ \"...\", \"...\" ],\n      \"sinceVersion\" : { },\n      \"childUris\" : [ \"...\", \"...\" ],\n      \"translationAidCount\" : 12345,\n      \"codeValue\" : \"...\",\n      \"childCount\" : 12345,\n      \"reverseTranslationAids\" : [ { }, { } ],\n      \"category\" : { },\n      \"translationAids\" : [ { }, { } ],\n      \"residual\" : true,\n      \"reverseTranslationAidCount\" : 12345,\n      \"parent\" : \"...\",\n      \"synonymCount\" : 12345\n    } ],\n    \"levelCount\" : 12345,\n    \"levels\" : [ {\n      \"depth\" : 12345,\n      \"codePattern\" : \"...\",\n      \"codes\" : [ { }, { } ],\n      \"codeCount\" : 12345,\n      \"conceptUri\" : { },\n      \"conceptUriUri\" : \"...\",\n      \"categorySetUriUri\" : \"...\",\n      \"categorySetUri\" : { },\n      \"codeDataType\" : \"NUMERIC_ALPHA\"\n    }, {\n      \"depth\" : 12345,\n      \"codePattern\" : \"...\",\n      \"codes\" : [ { }, { } ],\n      \"codeCount\" : 12345,\n      \"conceptUri\" : { },\n      \"conceptUriUri\" : \"...\",\n      \"categorySetUriUri\" : \"...\",\n      \"categorySetUri\" : { },\n      \"codeDataType\" : \"ALPHA_NUMERIC\"\n    } ],\n    \"rootCodeCount\" : 12345\n  },\n  \"isRequired\" : true\n}"
				},
				"url": {
					"raw": "{{host}}/rds/api/catalog/{catalogId}/{dataProductId}/variable/{variableId}",
					"host": [
						"{{host}}"
					],
					"path": [
						"rds",
						"api",
						"catalog",
						"{catalogId}",
						"{dataProductId}",
						"variable",
						"{variableId}"
					],
					"variable": [
						{
							"key": "catalogId",
							"value": "<string>",
							"description": "Required - The ID of the catalog that contains the data product."
						},
						{
							"key": "dataProductId",
							"value": "<string>",
							"description": "Required - The ID of the data product that contains the variable."
						},
						{
							"key": "variableId",
							"value": "<string>",
							"description": "Required - The Id or URI of the variable that is being updated."
						}
					]
				},
				"description": "\n<p>\nAdministrative endpoint for editing a variable.\n</p>"
			},
			"response": [
				{
					"name": "Process started.",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"questionText\" : \"...\",\n  \"isMeasure\" : true,\n  \"endPosition\" : 12345,\n  \"isDisclosive\" : true,\n  \"index\" : 12345,\n  \"synonyms\" : [ \"...\", \"...\" ],\n  \"isWeight\" : true,\n  \"decimals\" : 12345,\n  \"synonymCount\" : 12345,\n  \"computation\" : {\n    \"computationExpressions\" : [ \"...\", \"...\" ],\n    \"computationExpressionCount\" : 12345,\n    \"variables\" : [ {\n      \"questionText\" : \"...\",\n      \"isMeasure\" : true,\n      \"endPosition\" : 12345,\n      \"isDisclosive\" : true,\n      \"index\" : 12345,\n      \"synonyms\" : [ \"...\", \"...\" ],\n      \"isWeight\" : true,\n      \"decimals\" : 12345,\n      \"synonymCount\" : 12345,\n      \"computation\" : { },\n      \"startPosition\" : 12345,\n      \"storageType\" : \"...\",\n      \"frequencies\" : { },\n      \"summaryStatistics\" : { },\n      \"fixedStorageWidth\" : 12345,\n      \"dataType\" : \"...\",\n      \"isDimension\" : true,\n      \"classificationUri\" : \"...\",\n      \"format\" : \"...\",\n      \"classification\" : { },\n      \"isRequired\" : true\n    }, {\n      \"questionText\" : \"...\",\n      \"isMeasure\" : true,\n      \"endPosition\" : 12345,\n      \"isDisclosive\" : true,\n      \"index\" : 12345,\n      \"synonyms\" : [ \"...\", \"...\" ],\n      \"isWeight\" : true,\n      \"decimals\" : 12345,\n      \"synonymCount\" : 12345,\n      \"computation\" : { },\n      \"startPosition\" : 12345,\n      \"storageType\" : \"...\",\n      \"frequencies\" : { },\n      \"summaryStatistics\" : { },\n      \"fixedStorageWidth\" : 12345,\n      \"dataType\" : \"...\",\n      \"isDimension\" : true,\n      \"classificationUri\" : \"...\",\n      \"format\" : \"...\",\n      \"classification\" : { },\n      \"isRequired\" : true\n    } ],\n    \"variableCount\" : 12345\n  },\n  \"startPosition\" : 12345,\n  \"storageType\" : \"...\",\n  \"frequencies\" : {\n    \"sets\" : [ {\n      \"map\" : {\n        \"property1\" : 12345.0,\n        \"property2\" : 12345.0\n      },\n      \"weights\" : [ \"...\", \"...\" ],\n      \"weighted\" : true\n    }, {\n      \"map\" : {\n        \"property1\" : 12345.0,\n        \"property2\" : 12345.0\n      },\n      \"weights\" : [ \"...\", \"...\" ],\n      \"weighted\" : true\n    } ],\n    \"dateProduced\" : 12345\n  },\n  \"summaryStatistics\" : {\n    \"sets\" : [ {\n      \"median\" : 12345.0,\n      \"distinctSet\" : [ { }, { } ],\n      \"max\" : 12345.0,\n      \"standardDeviation\" : 12345.0,\n      \"distinct\" : 12345.0,\n      \"kurtosis\" : 12345.0,\n      \"userMissing\" : 12345.0,\n      \"variance\" : 12345.0,\n      \"min\" : 12345.0,\n      \"missing\" : 12345.0,\n      \"weights\" : [ \"...\", \"...\" ],\n      \"populated\" : 12345.0,\n      \"skewness\" : 12345.0,\n      \"weighted\" : true,\n      \"mean\" : 12345.0\n    }, {\n      \"median\" : 12345.0,\n      \"distinctSet\" : [ { }, { } ],\n      \"max\" : 12345.0,\n      \"standardDeviation\" : 12345.0,\n      \"distinct\" : 12345.0,\n      \"kurtosis\" : 12345.0,\n      \"userMissing\" : 12345.0,\n      \"variance\" : 12345.0,\n      \"min\" : 12345.0,\n      \"missing\" : 12345.0,\n      \"weights\" : [ \"...\", \"...\" ],\n      \"populated\" : 12345.0,\n      \"skewness\" : 12345.0,\n      \"weighted\" : true,\n      \"mean\" : 12345.0\n    } ],\n    \"dateProduced\" : 12345\n  },\n  \"fixedStorageWidth\" : 12345,\n  \"dataType\" : \"...\",\n  \"isDimension\" : true,\n  \"classificationUri\" : \"...\",\n  \"format\" : \"...\",\n  \"classification\" : {\n    \"codes\" : [ {\n      \"synonyms\" : [ \"...\", \"...\" ],\n      \"sinceVersion\" : { },\n      \"childUris\" : [ \"...\", \"...\" ],\n      \"translationAidCount\" : 12345,\n      \"codeValue\" : \"...\",\n      \"childCount\" : 12345,\n      \"reverseTranslationAids\" : [ { }, { } ],\n      \"category\" : { },\n      \"translationAids\" : [ { }, { } ],\n      \"residual\" : true,\n      \"reverseTranslationAidCount\" : 12345,\n      \"parent\" : \"...\",\n      \"synonymCount\" : 12345\n    }, {\n      \"synonyms\" : [ \"...\", \"...\" ],\n      \"sinceVersion\" : { },\n      \"childUris\" : [ \"...\", \"...\" ],\n      \"translationAidCount\" : 12345,\n      \"codeValue\" : \"...\",\n      \"childCount\" : 12345,\n      \"reverseTranslationAids\" : [ { }, { } ],\n      \"category\" : { },\n      \"translationAids\" : [ { }, { } ],\n      \"residual\" : true,\n      \"reverseTranslationAidCount\" : 12345,\n      \"parent\" : \"...\",\n      \"synonymCount\" : 12345\n    } ],\n    \"levelCount\" : 12345,\n    \"levels\" : [ {\n      \"depth\" : 12345,\n      \"codePattern\" : \"...\",\n      \"codes\" : [ { }, { } ],\n      \"codeCount\" : 12345,\n      \"conceptUri\" : { },\n      \"conceptUriUri\" : \"...\",\n      \"categorySetUriUri\" : \"...\",\n      \"categorySetUri\" : { },\n      \"codeDataType\" : \"NUMERIC_ALPHA\"\n    }, {\n      \"depth\" : 12345,\n      \"codePattern\" : \"...\",\n      \"codes\" : [ { }, { } ],\n      \"codeCount\" : 12345,\n      \"conceptUri\" : { },\n      \"conceptUriUri\" : \"...\",\n      \"categorySetUriUri\" : \"...\",\n      \"categorySetUri\" : { },\n      \"codeDataType\" : \"ALPHA_NUMERIC\"\n    } ],\n    \"rootCodeCount\" : 12345\n  },\n  \"isRequired\" : true\n}"
						},
						"url": {
							"raw": "{{host}}/rds/api/catalog/{catalogId}/{dataProductId}/variable/{variableId}",
							"host": [
								"{{host}}"
							],
							"path": [
								"rds",
								"api",
								"catalog",
								"{catalogId}",
								"{dataProductId}",
								"variable",
								"{variableId}"
							],
							"variable": [
								{
									"key": "catalogId",
									"value": "<string>",
									"description": "Required - The ID of the catalog that contains the data product."
								},
								{
									"key": "dataProductId",
									"value": "<string>",
									"description": "Required - The ID of the data product that contains the variable."
								},
								{
									"key": "variableId",
									"value": "<string>",
									"description": "Required - The Id or URI of the variable that is being updated."
								}
							]
						},
						"description": "\n<p>\nAdministrative endpoint for editing a variable.\n</p>"
					},
					"status": "Process started.",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "\"Process started.\""
				}
			]
		},
		{
			"name": "Get all packaging bundles.",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/rds/api/package/option/bundles",
					"host": [
						"{{host}}"
					],
					"path": [
						"rds",
						"api",
						"package",
						"option",
						"bundles"
					]
				},
				"description": "\n<p>\nThese are groups of related OptionSets grouped together with some\npre-configuration already done. This can ensure that users can get a set of\noptions quickly and already set up with all the options needed.\n</p>"
			},
			"response": [
				{
					"name": "Option bundles retrieved successfully.",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/rds/api/package/option/bundles",
							"host": [
								"{{host}}"
							],
							"path": [
								"rds",
								"api",
								"package",
								"option",
								"bundles"
							]
						},
						"description": "\n<p>\nThese are groups of related OptionSets grouped together with some\npre-configuration already done. This can ensure that users can get a set of\noptions quickly and already set up with all the options needed.\n</p>"
					},
					"status": "Option bundles retrieved successfully.",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"description\" : \"...\",\n  \"includedFormats\" : [ {\n    \"description\" : \"...\",\n    \"id\" : \"...\",\n    \"name\" : \"...\"\n  }, {\n    \"description\" : \"...\",\n    \"id\" : \"...\",\n    \"name\" : \"...\"\n  } ],\n  \"id\" : \"...\",\n  \"name\" : \"...\"\n}"
				}
			]
		},
		{
			"name": "Upload File",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/rds/_files/upload?file=<string>",
					"host": [
						"{{host}}"
					],
					"path": [
						"rds",
						"_files",
						"upload"
					],
					"query": [
						{
							"key": "file",
							"value": "<string>",
							"description": "Required"
						}
					]
				},
				"description": "null"
			},
			"response": [
				{
					"name": "Resource created",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/rds/_files/upload?file=<string>",
							"host": [
								"{{host}}"
							],
							"path": [
								"rds",
								"_files",
								"upload"
							],
							"query": [
								{
									"key": "file",
									"value": "<string>",
									"description": "Required"
								}
							]
						},
						"description": "null"
					},
					"status": "Resource created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"contentType\" : \"...\",\n  \"fileSize\" : 12345,\n  \"key\" : \"...\",\n  \"managerSize\" : 12345,\n  \"fileName\" : \"...\"\n}"
				}
			]
		},
		{
			"name": "Delete catalog.",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/rds/api/catalog/{catalogId}?testparam",
					"host": [
						"{{host}}"
					],
					"path": [
						"rds",
						"api",
						"catalog",
						"{catalogId}"
					],
					"query": [
						{
							"key": "testparam",
							"value": null
						}
					],
					"variable": [
						{
							"key": "catalogId",
							"value": "<string>",
							"description": "Required - The ID of the catalog to delete."
						}
					]
				},
				"description": "\n<p>\nDeletes the specified catalog and any data products it contains.\n</p>"
			},
			"response": [
				{
					"name": "Process started.",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/rds/api/catalog/{catalogId}",
							"host": [
								"{{host}}"
							],
							"path": [
								"rds",
								"api",
								"catalog",
								"{catalogId}"
							],
							"variable": [
								{
									"key": "catalogId",
									"value": "<string>",
									"description": "Required - The ID of the catalog to delete."
								}
							]
						},
						"description": "\n<p>\nDeletes the specified catalog and any data products it contains.\n</p>"
					},
					"status": "Process started.",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "\"Process started.\""
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}