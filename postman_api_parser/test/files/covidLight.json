{
	"info": {
		"_postman_id": "45fa46d6-cba4-4519-b717-abbe0b7fc0db",
		"name": " COVID-19 Rich Data Services JSON (Light)",
		"description": "<img src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\" alt=\"rds logo\" width=\"200\"/>\n\n**The COVID-19 Rich Data Services API from MTNA offers curated, high-quality data and metadata from statistics and contextual datasets from around the world. The catalog is updated daily and constantly growing.**\n\nGiven the critical need for timely access to high quality data around COVID-19, [MTNA](https://mtna.us?utm_source=postman&utm_medium=postmanlabs&utm_campaign=covid_19_apis) is making our Rich Data Service platform publicly and freely available for the publication of primary and contextual COVID-19 related data, to support researchers, data analysts, developers, and public users. \n\nRich Data Services (RDS) is an innovative platform for publishing data and metadata for immediate reuse by both computer systems and users. While RDS is slated for release later this year, the urgency of the current situation calls for early access. We complement the platform with our extensive experience with statistical and scientific data to ensure high quality content.\n\nThis collection serves as a quick start guide for querying COVID-19 data using RDS. To see the full list of available APIs view the [full RDS documentation](https://documenter.getpostman.com/view/2220438/SzS5umZ3?version=latest#0e79e455-0ffc-4566-ab19-d9ecbf8b217f) or visit the [RDS COVID-19 website](http://covid19.richdataservices.com?utm_source=postman&utm_medium=postmanlabs&utm_campaign=covid_19_apis).\n\nWant to integrate RDS into your current project? We have some libraries to help you get started.\n* [RDS Javascript](https://github.com/mtna/rds-js)  \n* [RDS Python](https://github.com/mtna/rds-python)  \n* [RDS R](https://github.com/mtna/rds-r)   \n\nHave questions? Browse the [knowledge base](https://mtnaus.atlassian.net/wiki/spaces/RDSHD/overview) to find answers, or submit a ticket at our [service desk](https://mtnaus.atlassian.net/servicedesk/customer/portal/9).\n\n<!-- postman \n{\n    \"custodian\": \"This API is maintained and hosted by Metadata Technology North America (MTNA) is a U.S. based small business that provides high level expertise around the technical management of statistical and scientific data.\",\n    \"provenance\":\"Data is collected from official and popular data sources from around the world.\",\n    \"coverage\": {\n        \"topics\": \"covid19, testing, cases, labout force\",\n        \"geography\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n        \"time\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\n    },\n    \"resources\":\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\n}\n-->",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Choosing a data product",
			"item": [
				{
					"name": "Get catalog",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://covid19.richdataservices.com/rds/api/catalog",
							"protocol": "http",
							"host": [
								"covid19",
								"richdataservices",
								"com"
							],
							"path": [
								"rds",
								"api",
								"catalog"
							]
						},
						"description": "This will return a list of all the catalogs on the COVID-19 RDS server and the data products they contain. The `id` property of each data product will be used for further querying."
					},
					"response": [
						{
							"name": "Get available data products",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://covid19.richdataservices.com/rds/api/catalog",
									"protocol": "http",
									"host": [
										"covid19",
										"richdataservices",
										"com"
									],
									"path": [
										"rds",
										"api",
										"catalog"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 17 Jun 2020 20:02:06 GMT"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"catalogs\": [\n        {\n            \"dataProducts\": [\n                {\n                    \"citation\": \"Government of Canada. <a href=\\\"https://www.canada.ca/en/public-health/services/diseases/2019-novel-coronavirus-infection.html\\\" target=\\\"_blank\\\">Coronavirus disease (COVID-19): Outbreak update</a>\",\n                    \"description\": \"Provincial level COVID-19 case information collected and published by the Canadian government. Each record measures confirmed and probable cases, tests performed, recoveries, and deaths for a province on a specific date.\",\n                    \"id\": \"ca_gov_cases\",\n                    \"isPrivate\": false,\n                    \"lastUpdate\": \"2020-06-06T11:26:24.381Z\",\n                    \"name\": \"Government of Canada COVID-19\",\n                    \"note\": \"<strong>Time Series</strong><p>This data product is a time series, as such, the <em>date_stamp</em> should be included in any tabulations performed on it. In addition, tabulations should be created using the sum of a measure rather than the count or percentage of records.</p>\",\n                    \"provenance\": \"<p>This data product is created through cleaning and simple transformations  applied to the <a href=\\\"https://health-infobase.canada.ca/src/data/covidLive/covid-19.csv\\\" target=\\\"_blank\\\">CSV download</a> provided by the Government of Canada on their  <a href=\\\"https://www.canada.ca/en/public-health/services/diseases/2019-novel-coronavirus-infection.html\\\" target=\\\"_blank\\\">Coronavirus disease (COVID-19): Outbreak update website</a>. The data is pulled daily.</p><strong>Data Curation and Transformation</strong><p>The following data curation and transformation steps have been performed on the source data file.</p><ul><li>The source data includes aggregate records for all of Canada. These are removed as these values can be computed.</li><li>The source variables <em>numrecovered</em> and <em>percentrecovered</em> had a number of \\\"N/A\\\" values that have been replaced with empty (NULL) values. These variables were mapped to <em>cnt_recovered</em> and <em>pct_recovered</em> in this data product.</li><li>The source variable <em>pruid</em> has an extra code (99 Repatriated travellers) that keeps it from lining up with the standard geographic codes published by StatsCanada. To alleviate this the <em>pruid</em> field has been split into <em>ca_provterr</em> where 99 is null, and <em>ca_covid19_geo</em> which preserves the original value of 99.</li><li>The source variable <em>date</em> is formatted as DD-MM-YYYY, this is reformatted to YYYY-MM-DD (ISO 8601) and renamed as <em>date_stamp</em> in this data product.</li></ul><p>For more in depth information about the data curation process or how this data product's variables were mapped from the source file, please visit this data product's <a href=\\\"https://github.com/mtna/covid-19/tree/master/data/ca/gov/cases\\\" target=\\\"_blank\\\">GitHub repository</a>.</p>\",\n                    \"uri\": \"466f1f0b-fcc8-4eb9-9371-c6a6252832c5\"\n                },\n                {\n                    \"citation\": \"Statistics Canada. <a href=\\\"https://www.canada.ca/en/public-health/services/diseases/2019-novel-coronavirus-infection.html\\\" target=\\\"_blank\\\">Table  13-10-0766-01   Detailed confirmed cases of coronavirus disease (COVID-19) (Preliminary data), Public Health Agency of Canada</a>\",\n                    \"description\": \"Detailed confirmed cases of coronavirus disease in individuals as collected and published by Statistics Canada. Each reacord measures the latest hospitalization, ICU, and deceased status of individuals confirmed to have coronavirus on a specific date.\",\n                    \"id\": \"ca_statcan_cases\",\n                    \"isPrivate\": false,\n                    \"lastUpdate\": \"2020-06-06T11:26:29.35Z\",\n                    \"name\": \"Statistics Canada Detailed Confirmed Cases\",\n                    \"provenance\": \"<p>This data product is created through cleaning and simple transformations  applied to the <a href=\\\"https://www150.statcan.gc.ca/n1/tbl/csv/13100766-eng.zip\\\">CSV download of the entire table</a>. This data is pulled daily.</p><strong>Data Curation and Transformation</strong><p>The source CSV file has a structure based on a SDMX cube, in which there are several columns of interest, <em>REF_DATE</em>, <em>Case Identifier number</em>, <em>Case information</em>, and <em>VALUE</em>.The <em>REF_DATE</em> and <em>Case Identifier number</em> are the same for a record, but a single record in the Statistics Canada table is spread out over 13 records in the CSV file, each with a different <em>VALUE</em> for a specific <em>Case information</em>. The source CSV file has been transformed to produce the data in this data product.</p><p>The following data curation and transformation steps have been performed on the source data.</p><ul><li>The source variables <em>REF_DATE</em>, <em>Date case was last updated - month</em>, and <em>Date case was last updated - day</em> have been combined into a single <em>date_stamp</em> ISO 8601 date variable.</li><li>The source variables <em>REF_DATE</em>, <em> Episode date - month</em>, and <em> Episode date - day</em> have been combined into a single <em>episode_start_date</em> ISO 8601 date variable.</li><li>The '..' in the source <em>previous status</em> variables are replaced with empty values.</li></ul><p>For more in depth information about the data curation process or how this data product's variables were mapped from the source file, please visit this data product's <a href=\\\"https://github.com/mtna/covid-19/tree/master/data/ca/statcan/cases\\\" target=\\\"_blank\\\">GitHub repository</a>.</p>\",\n                    \"uri\": \"c1c3d310-bea2-454a-8293-64698db4a009\"\n                },\n                {\n                    \"description\": \"<p>Conducted online from From March 29 to April 3 2020, this survey aims at understanding the impact of the COVID-19.</p><p>This survey is the first in the Canadian Perspectives Survey Series (CPSS), a set of short, online surveys to be used to collect information on the knowledge and behaviours of residents of the 10 Canadian provinces. This information is used by government organizations, such as the Public Health Agency of Canada and Employment and Social Development Canada, and other types of organizations to evaluate the need for health and social services, as well as economic support during and after the pandemic.</p><p>All surveys in the series will be asked of Statistics Canada’s probability panel. The probability panel for the CPSS is a new pilot project initiated in 2019. An important goal of the CPSS is to directly collect data from Canadians in a timely manner in order to inform policy makers and be responsive to emerging data needs. The CPSS is designed to produce data at a national level (excluding the territories).</p>\",\n                    \"id\": \"pums_cpss_01\",\n                    \"isPrivate\": false,\n                    \"lastUpdate\": \"2020-06-06T05:22:43.267Z\",\n                    \"name\": \"Canadian Perspective Survey Series 1: Impacts of COVID-19\",\n                    \"uri\": \"eccf0e15-cb64-4eb1-9e72-1e3b1c3229d3\"\n                },\n                {\n                    \"description\": \"The Labour Force Survey provides estimates of employment and unemployment which are among the most timely and important measures of performance of the Canadian economy.\",\n                    \"id\": \"pums_lfs\",\n                    \"isPrivate\": false,\n                    \"lastUpdate\": \"2020-06-11T19:48:04.421Z\",\n                    \"name\": \"Labour Force Survey (2018-01 to 2020-04)\",\n                    \"uri\": \"fc0299c3-5a5b-4935-bda8-794e717aaa4e\"\n                }\n            ],\n            \"description\": \"COVID-19 related data products covering Canada at the national and subnational levels.\",\n            \"id\": \"ca\",\n            \"isPrivate\": false,\n            \"name\": \"Canada\",\n            \"uri\": \"e7033e0f-e7f8-40cb-896d-8f2491eb858c\"\n        },\n        {\n            \"dataProducts\": [\n                {\n                    \"citation\": \"The COVID Tracking Project. <a href=\\\"https://covidtracking.com/api\\\" target=\\\"_blank\\\">State Historical Data</a>\",\n                    \"description\": \"State level COVID-19 case information by date, collected by the COVID Tracking Project. Each record measures confirmed cases, tests performed, hospitalizations, recoveries, deaths, ventilator usage, and individuals in an ICU for a state on a specific date.\",\n                    \"id\": \"covidtracking_state\",\n                    \"isPrivate\": false,\n                    \"lastUpdate\": \"2020-06-06T11:26:35.7Z\",\n                    \"name\": \"COVID Tracking Project State Data\",\n                    \"note\": \"<strong>Time Series</strong><p>This data product is a time series, as such, the <em>date_stamp</em> should be included in any tabulations performed on it. In addition, tabulations should be created using the sum of a measure rather than the count or percentage of records.</p>\",\n                    \"provenance\": \"<p>This data product is created through cleaning and simple transformations applied to the <a href=\\\"https://covidtracking.com/api/v1/states/daily.csv\\\" target=\\\"_blank\\\">CSV Download</a> provided by the COVID Tracking Project. This data is pulled daily.</p><strong>Data Curation and Transformation</strong><p>The following data curation and transformation steps have been performed on the source data file.</p><ul><li>The source variable <em>date</em> has been reformatted to match the ISO 8601 format (YYYY-MM-DD). This variable has been renamed to  <em>date_stamp</em> in this data product.</li><li>The source file has two variables, <em>hospitalized</em> and <em>hospitalizedCumulative</em>, which duplicate each other for every state. We have dropped the <em>hospitalizedCumulative</em> variable in this data product. The source <em>hospitalized</em> variable has been renamed to <em>cnt_hospitalized</em> in this data product.</li></ul><p>For more in depth information about the data curation process or how this data product's variables were mapped from the source file, please visit this data product's <a href=\\\"https://github.com/mtna/covid-19/tree/master/data/us/covidtracking/state\\\" target=\\\"_blank\\\">GitHub repository</a>.</p>\",\n                    \"uri\": \"7c375d22-5b78-4cd2-a0b7-9b0865062604\"\n                },\n                {\n                    \"citation\": \"Center for Systems Science and Engineering (CSSE) at Johns Hopkins University. <a href=\\\"https://github.com/CSSEGISandData/COVID-19\\\" target=\\\"_blank\\\">COVID-19 Data Repository</a>\",\n                    \"description\": \"Johns Hopkins University U.S. county level COVID-19 data. Each record measures the counts of confirmed, recovered, and deaths for a U.S. county on a specific date.\",\n                    \"id\": \"jhu_county\",\n                    \"isPrivate\": false,\n                    \"lastUpdate\": \"2020-06-06T11:26:42.134Z\",\n                    \"name\": \"Johns Hopkins University CCSE U.S. County Reports\",\n                    \"note\": \"<strong>Time Series</strong><p>This data product is a time series, as such, the <em>date_stamp</em> should be included in any tabulations performed on it. In addition, tabulations should be created using the sum of a measure rather than the count or percentage of records.</p>\",\n                    \"provenance\": \"<p>This data product is created through cleaning and transformations applied to the data provided provided by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University. This data is pulled daily.</p><strong>Data Curation and Transformation</strong><p>The following data curation and transformation steps have been performed on the source data file.</p><ul><li>Some admin2 FIPS codes only have 4 digits (missing their leading 0). These were patched.</li><li>800nn codes: entries are found with an admin2 FIPS code 800+State FIPS code and a lable of \\\"Out of XX\\\" where XX is the state 2-letter code (e.g. Out of CO). These are aggregated into a \\\"Other\\\" category.</li><li>900nn codes: entries are found with an admin2 code 900+State FIPS code and coundty name \\\"Unassigned\\\". These are aggregated into a \\\"Other\\\" category.</li><li>Missing code: A few entries have no admin2 FIPS codes to capture count their regional or specific entities (e.g. West Utah, TriHealth, etc.). These are aggregated into a \\\"Other\\\" category.</li></ul><p>For more in depth information about the data curation process or how this data product's variables were mapped from the source file, please visit this data product's <a href=\\\"https://github.com/mtna/covid-19/tree/master/data/us/jhu-ccse\\\" target=\\\"_blank\\\">GitHub repository</a>.</p>\",\n                    \"uri\": \"5a17b99f-ec80-4008-9859-e6b2cbff47f0\"\n                },\n                {\n                    \"citation\": \"Center for Systems Science and Engineering (CSSE) at Johns Hopkins University. <a href=\\\"https://github.com/CSSEGISandData/COVID-19\\\" target=\\\"_blank\\\">COVID-19 Data Repository</a>\",\n                    \"description\": \"Johns Hopkins University U.S. state level COVID-19 data. Each record measures the counts of confirmed, recovered, and deaths for a U.S. state on a specific date.\",\n                    \"id\": \"jhu_state\",\n                    \"isPrivate\": false,\n                    \"lastUpdate\": \"2020-06-06T11:26:44.994Z\",\n                    \"name\": \"Johns Hopkins University CCSE U.S. State Reports\",\n                    \"note\": \"<strong>Time Series</strong><p>This data product is a time series, as such, the <em>date_stamp</em> should be included in any tabulations performed on it. In addition, tabulations should be created using the sum of a measure rather than the count or percentage of records.</p>\",\n                    \"provenance\": \"This data product is created through cleaning and transformations applied to the data provided provided by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University. This data is pulled daily.<strong>Data Curation and Transformation</strong><p>For in depth information about the data curation process or how this data product's variables were mapped from the source file, please visit this data product's <a href=\\\"https://github.com/mtna/covid-19/tree/master/data/us/jhu-ccse\\\" target=\\\"_blank\\\">GitHub repository</a>.</p>\",\n                    \"uri\": \"a60421c1-137a-4007-8e68-04aca6f513d8\"\n                }\n            ],\n            \"description\": \"This catalog contains COVID-19 data products around the United States of America at the country, state, and county levels.\",\n            \"id\": \"us\",\n            \"isPrivate\": false,\n            \"name\": \"United States\",\n            \"uri\": \"22afa94b-08ff-4e8e-a516-23e625775db5\"\n        },\n        {\n            \"dataProducts\": [\n                {\n                    \"citation\": \"Center for Systems Science and Engineering (CSSE) at Johns Hopkins University. <a href=\\\"https://github.com/CSSEGISandData/COVID-19\\\" target=\\\"_blank\\\">COVID-19 Data Repository</a>\",\n                    \"description\": \"Johns Hopkins University country level COVID-19 data. Each record measures the counts of confirmed, active, recovered, and deaths for a country on a specific date.\",\n                    \"id\": \"jhu_country\",\n                    \"isPrivate\": false,\n                    \"lastUpdate\": \"2020-06-06T11:26:38.975Z\",\n                    \"name\": \"Johns Hopkins University CCSE Country Reports\",\n                    \"note\": \"<strong>Time Series</strong><p>This data product is a time series, as such, the <em>date_stamp</em> should be included in any tabulations performed on it. In addition, tabulations should be created using the sum of a measure rather than the count or percentage of records.</p>\",\n                    \"provenance\": \"<p>This data product is created through cleaning and transformations applied to the data provided provided by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University. This data is pulled daily.</p><strong>Data Curation and Transformation</strong><p>For in depth information about the data curation process or how this data product's variables were mapped from the source file, please visit this data product's <a href=\\\"https://github.com/mtna/covid-19/tree/master/data/us/jhu-ccse\\\" target=\\\"_blank\\\">GitHub repository</a>.</p>\",\n                    \"uri\": \"1f374e32-0946-4603-93f4-de3ed786caaf\"\n                }\n            ],\n            \"description\": \"COVID-19 related data products covering multiple countries.\",\n            \"id\": \"int\",\n            \"isPrivate\": false,\n            \"name\": \"International\",\n            \"uri\": \"eb0f382b-35ee-4f41-ad45-5eb47be3430e\"\n        },\n        {\n            \"dataProducts\": [\n                {\n                    \"citation\": \"Ohio Department of Health (ODH). <a href=\\\"https://coronavirus.ohio.gov/wps/portal/gov/covid-19/dashboards\\\" target=\\\"_blank\\\">Ohio Department of Health COVID-19 Dashboard </a>\",\n                    \"description\": \"The most recent preliminary data reported to the Ohio Department of Health (ODH). Each record measures the count of confirmed cases, hosptializations, and deaths for an age group, sex, and county on a specific date.\",\n                    \"id\": \"oh_doh_cases\",\n                    \"isPrivate\": false,\n                    \"lastUpdate\": \"2020-06-06T11:26:51.318Z\",\n                    \"name\": \"Ohio Department of Health COVID Data\",\n                    \"provenance\": \"<p>This data product is created through cleaning and simple transformations applied to the <a href=\\\"https://coronavirus.ohio.gov/static/COVIDSummaryData.csv\\\" target=\\\"_blank\\\">CSV Download</a> provided by the Ohio Department of Health. This data is pulled daily.</p><strong>Data Curation and Transformation</strong><p>The following data curation and transformation steps have been performed on the source data file.</p><ul><li>The county names are dropped and recoded as their 5 digit FIPS code and their code labels will be a part of the metadata.</li><li>The <em>sex</em> column has been coded.</li><li>The <em>age_group</em> in has been coded with 'Unknown' being coded as 99.</li></ul><p>For more in depth information about the data curation process or how this data product's variables were mapped from the source file, please visit this data product's <a href=\\\"https://github.com/mtna/covid-19/tree/master/data/us-oh/oh-doh\\\" target=\\\"_blank\\\">GitHub repository</a>.</p>\",\n                    \"uri\": \"d585c6f8-a484-4dd0-abd4-122339953cc5\"\n                },\n                {\n                    \"citation\": \"Ohio Department of Health (ODH). <a href=\\\"https://coronavirus.ohio.gov/wps/portal/gov/covid-19/dashboards\\\" target=\\\"_blank\\\">Ohio Department of Health COVID-19 Dashboard </a>\",\n                    \"description\": \"The most recent preliminary data reported to the Ohio Department of Health (ODH) county aggregate counts. Each record measures the count of confirmed cases, hospitalizations, and deaths for a county on a specific date.\",\n                    \"id\": \"oh_doh_cases_aggregate\",\n                    \"isPrivate\": false,\n                    \"lastUpdate\": \"2020-06-06T11:26:54.402Z\",\n                    \"name\": \"Ohio Department of Health Aggregate COVID Data\",\n                    \"note\": \"<strong>Time Series</strong><p>This data product is a time series, as such, the <em>date_stamp</em> should be included in any tabulations performed on it. In addition, tabulations should be created using the sum of a measure rather than the count or percentage of records.</p>\",\n                    \"provenance\": \"<p>This data product is created by computing aggregate counts by date and county based off of the <a href=\\\"https://coronavirus.ohio.gov/static/COVIDSummaryData.csv\\\" target=\\\"_blank\\\">CSV Download</a> provided by the Ohio Department of Health. This data is pulled daily.</p><strong>Data Curation and Transformation</strong><p>The following data curation and transformation steps have been performed on the source data file.</p><ul><li>The county names are dropped and recoded as their 5 digit FIPS code and their code labels will be a part of the metadata.</li><li>The aggregate counts were first computed on each date and county, this provided us with the daily count of confirmed cases, hospitalizations, and deaths regardless of the sex or age group of the individuals. Then a cumulative sum was produced over the county field to get the final cumulative values.</li></ul><p>For more in depth information about the data curation process or how this data product's variables were mapped from the source file, please visit this data product's <a href=\\\"https://github.com/mtna/covid-19/tree/master/data/us-oh/oh-doh\\\" target=\\\"_blank\\\">GitHub repository</a>.</p>\",\n                    \"uri\": \"cd660923-c1f7-4320-9c79-11646a6dc757\"\n                }\n            ],\n            \"description\": \"This catalog contains COVID-19 data products specifically about the state of Ohio.\",\n            \"id\": \"us_oh\",\n            \"isPrivate\": false,\n            \"name\": \"United States: Ohio\",\n            \"uri\": \"2a148f1e-a21d-42b9-892a-2849a243597a\"\n        },\n        {\n            \"dataProducts\": [\n                {\n                    \"citation\": \"New York State Department of Health. <a href=\\\"https://health.data.ny.gov/Health/New-York-State-Statewide-COVID-19-Testing/xdss-u53e/data\\\" target=\\\"_blank\\\">New York State Statewide COVID-19 Testing</a>\",\n                    \"description\": \"Information on the number of tests of individuals for COVID-19 infection performed in New York State.  Each record measures newly confirmed cases, total confirmed cases, new tests performed, and total tests performed for a country in the state of New York on a specific date.\",\n                    \"id\": \"ny_doh_tests\",\n                    \"isPrivate\": false,\n                    \"lastUpdate\": \"2020-06-06T11:26:48.234Z\",\n                    \"name\": \"New York Department of Health Statewide COVID-19 Testing\",\n                    \"note\": \"<strong>Time Series</strong><p>This data product is a time series, as such, the <em>date_stamp</em> should be included in any tabulations performed on it. In addition, tabulations should be created using the sum of a measure rather than the count or percentage of records.</p>\",\n                    \"provenance\": \"<p>This data product is created through cleaning the <a href=\\\"https://health.data.ny.gov/api/views/xdss-u53e/rows.csv?accessType=DOWNLOAD\\\" target=\\\"_blank\\\">CSV Download</a> provided by the State of New York Department of Health. This data is pulled daily.</p><strong>Data Curation and Transformation</strong><p>The following data curation and transformation steps have been performed on the source data file.</p><ul><li>The data uses county names rather than codes, these have been converted to the 5 digit FIPS codes.</li></ul><p>For in depth information about the data curation process or how this data product's variables were mapped from the source file, please visit this data product's <a href=\\\"https://github.com/mtna/covid-19/tree/master/data/us-ny/ny-doh\\\" target=\\\"_blank\\\">GitHub repository</a>.</p>\",\n                    \"uri\": \"ad86db6b-78f7-44bb-a035-1710f59f48ef\"\n                }\n            ],\n            \"description\": \"This catalog contains COVID-19 data products specifically about the state of New York.\",\n            \"id\": \"us_ny\",\n            \"isPrivate\": false,\n            \"name\": \"United States: New York\",\n            \"uri\": \"f62d7596-385e-46a9-a2d2-d01ace1c7bd6\"\n        },\n        {\n            \"dataProducts\": [\n                {\n                    \"citation\": \"Tennessee Department of Health. <a href=\\\"https://www.tn.gov/health/cedep/ncov/data/downloadable-datasets.html\\\" target=\\\"_blank\\\">Tenessee Department of Health: Epidemiology and Surveillance Data</a>\",\n                    \"description\": \"Tennesse state COVID-19 case information by age group. Each record measures the count of confirmed cases, percentage of confirmed cases, and count of deaths by age group on a specific date.\",\n                    \"id\": \"us_tn_doh_age\",\n                    \"isPrivate\": false,\n                    \"lastUpdate\": \"2020-06-17T12:04:54.912Z\",\n                    \"name\": \"Tennesse Department of Health Age Demographics\",\n                    \"note\": \"<strong>Time Series</strong><p>This data product is a time series, as such, the <em>date_stamp</em> should be included in any tabulations performed on it. In addition, tabulations should be created using the sum of a measure rather than the count or percentage of records.</p>\",\n                    \"provenance\": \"<p>This data product is created through cleaning and simple transformations applied to the <a href=\\\"https://www.tn.gov/content/dam/tn/health/documents/cedep/novel-coronavirus/datasets/Public-Dataset-Age.xlsx\\\" target=\\\"_blank\\\">Excel Download</a> provided by the Tennessee Department of Health. This data is pulled daily.</p><strong>Data Curation and Transformation</strong><p>The following data curation and transformation steps have been performed on the source data file.</p><ul><li>The age goup has been coded.</li><li>The percentage of cases and percentage of new cases were multiplied by 100 in order that the values add up to 100 rather than decimals that add up to 1.0.</li></ul><p>For more in depth information about the data curation process or how this data product's variables were mapped from the source file, please visit this data product's <a href=\\\"https://github.com/mtna/covid-19/tree/master/data/us-tn/tn-doh/\\\" target=\\\"_blank\\\">GitHub repository</a>.</p>\",\n                    \"uri\": \"c7928e6a-0e82-4016-aa0b-78567e95a4b6\"\n                },\n                {\n                    \"citation\": \"Tennessee Department of Health. <a href=\\\"https://www.tn.gov/health/cedep/ncov/data/downloadable-datasets.html\\\" target=\\\"_blank\\\">Tenessee Department of Health: Epidemiology and Surveillance Data</a>\",\n                    \"description\": \"Tennessee county level COVID-19 case information. Each record measures the count of confirmed cases, active cases, hospitalizations, recoveries, deaths, and tests by county on a specific date.\",\n                    \"id\": \"us_tn_doh_county\",\n                    \"isPrivate\": false,\n                    \"lastUpdate\": \"2020-06-17T12:01:19.139Z\",\n                    \"name\": \"Tennesse Department of Health County Case Information\",\n                    \"note\": \"<strong>Time Series</strong><p>This data product is a time series, as such, the <em>date_stamp</em> should be included in any tabulations performed on it. In addition, tabulations should be created using the sum of a measure rather than the count or percentage of records.</p>\",\n                    \"provenance\": \"<p>This data product is created through cleaning and simple transformations applied to the <a href=\\\"https://www.tn.gov/content/dam/tn/health/documents/cedep/novel-coronavirus/datasets/Public-Dataset-County-New.XLSX\\\" target=\\\"_blank\\\">Excel Download</a> provided by the Tennessee Department of Health. This data is pulled daily.</p><strong>Data Curation and Transformation</strong><p>The following data curation and transformation steps have been performed on the source data file.</p><ul><li>The county name has been replaced with the 5 digit FIPS county code. The 'Pending' and 'Out of State' values have been removed from this variable. </li><li>A new variable <em>tn_covid_geo</em> has been added. This will be the 5 digit county FIPS code and will include codes for 'Pending' and 'Out of State'.</li></ul><p>For more in depth information about the data curation process or how this data product's variables were mapped from the source file, please visit this data product's <a href=\\\"https://github.com/mtna/covid-19/tree/master/data/us-tn/tn-doh/\\\" target=\\\"_blank\\\">GitHub repository</a>.</p>\",\n                    \"uri\": \"9d876c78-8169-46b1-8721-a56c979109e8\"\n                },\n                {\n                    \"citation\": \"Tennessee Department of Health. <a href=\\\"https://www.tn.gov/health/cedep/ncov/data/downloadable-datasets.html\\\" target=\\\"_blank\\\">Tenessee Department of Health: Epidemiology and Surveillance Data</a>\",\n                    \"description\": \"Tennessee state COVID-19 case information by ethnicity. Each record measures the count of confirmed cases, percentage of confirmed cases, count of deaths, and percentage of deaths by ethnicity on a specific date.\",\n                    \"id\": \"us_tn_doh_ethnicity\",\n                    \"isPrivate\": false,\n                    \"lastUpdate\": \"2020-06-17T12:11:12.061Z\",\n                    \"name\": \"Tennesse Department of Health Ethnic Demographics\",\n                    \"note\": \"<strong>Time Series</strong><p>This data product is a time series, as such, the <em>date_stamp</em> should be included in any tabulations performed on it. In addition, tabulations should be created using the sum of a measure rather than the count or percentage of records.</p>\",\n                    \"provenance\": \"<p>This data product is created through cleaning and simple transformations applied to the <a href=\\\"https://www.tn.gov/content/dam/tn/health/documents/cedep/novel-coronavirus/datasets/Public-Dataset-RaceEthSex.XLSX\\\" target=\\\"_blank\\\">Excel Download</a> provided by the Tennessee Department of Health. This data is pulled daily.</p></p><strong>Data Curation and Transformation</strong><p>The following data curation and transformation steps have been performed on the source data file.</p><ul><li>The file is a subset of the source data which combines ethnicity, race, and sex. This data product contains only the records that apply to ethnicity.</li></ul><p>For more in depth information about the data curation process or how this data product's variables were mapped from the source file, please visit this data product's <a href=\\\"https://github.com/mtna/covid-19/tree/master/data/us-tn/tn-doh/\\\" target=\\\"_blank\\\">GitHub repository</a>.</p>\",\n                    \"uri\": \"b0793669-aa25-44f0-b19a-26a3ef48d2b3\"\n                },\n                {\n                    \"citation\": \"Tennessee Department of Health. <a href=\\\"https://www.tn.gov/health/cedep/ncov/data/downloadable-datasets.html\\\" target=\\\"_blank\\\">Tenessee Department of Health: Epidemiology and Surveillance Data</a>\",\n                    \"description\": \"Tennessee state COVID-19 case information by race. Each record measures the count of confirmed cases, percentage of confirmed cases, count of deaths, and percentage of deaths by race on a specific date.\",\n                    \"id\": \"us_tn_doh_race\",\n                    \"isPrivate\": false,\n                    \"lastUpdate\": \"2020-06-17T12:09:06.394Z\",\n                    \"name\": \"Tennesse Department of Health Race Demographics\",\n                    \"note\": \"<strong>Time Series</strong><p>This data product is a time series, as such, the <em>date_stamp</em> should be included in any tabulations performed on it. In addition, tabulations should be created using the sum of a measure rather than the count or percentage of records.</p>\",\n                    \"provenance\": \"<p>This data product is created through cleaning and simple transformations applied to the <a href=\\\"https://www.tn.gov/content/dam/tn/health/documents/cedep/novel-coronavirus/datasets/Public-Dataset-RaceEthSex.XLSX\\\" target=\\\"_blank\\\">Excel Download</a> provided by the Tennessee Department of Health. This data is pulled daily.</p></p><strong>Data Curation and Transformation</strong><p>The following data curation and transformation steps have been performed on the source data file.</p><ul><li>The file is a subset of the source data which combines ethnicity, race, and sex. This data product contains only the records that apply to race.</li></ul><p>For more in depth information about the data curation process or how this data product's variables were mapped from the source file, please visit this data product's <a href=\\\"https://github.com/mtna/covid-19/tree/master/data/us-tn/tn-doh/\\\" target=\\\"_blank\\\">GitHub repository</a>.</p>\",\n                    \"uri\": \"a82abf40-c667-4a42-81e8-110049ebadd6\"\n                },\n                {\n                    \"citation\": \"Tennessee Department of Health. <a href=\\\"https://www.tn.gov/health/cedep/ncov/data/downloadable-datasets.html\\\" target=\\\"_blank\\\">Tenessee Department of Health Epidemiology and Surveillance Data</a>\",\n                    \"description\": \"Tennessee state COVID-19 case information by sex. Each record measures the count of confirmed cases, percentage of confirmed cases, count of deaths, and percentage of deaths by sex on a specific date.\",\n                    \"id\": \"us_tn_doh_sex\",\n                    \"isPrivate\": false,\n                    \"lastUpdate\": \"2020-06-17T11:51:25.706Z\",\n                    \"name\": \"Tennesse Department of Health Sex Demographics\",\n                    \"note\": \"<strong>Time Series</strong><p>This data product is a time series, as such, the <em>date_stamp</em> should be included in any tabulations performed on it. In addition, tabulations should be created using the sum of a measure rather than the count or percentage of records.</p>\",\n                    \"provenance\": \"<p>This data product is created through cleaning and simple transformations applied to the <a href=\\\"https://www.tn.gov/content/dam/tn/health/documents/cedep/novel-coronavirus/datasets/Public-Dataset-RaceEthSex.XLSX\\\" target=\\\"_blank\\\">Excel Download</a> provided by the Tennessee Department of Health. This data is pulled daily.</p></p><strong>Data Curation and Transformation</strong><p>The following data curation and transformation steps have been performed on the source data file.</p><ul><li>The file is a subset of the source data which combines ethnicity, race, and sex. This data product contains only the records that apply to sex.</li></ul><p>For more in depth information about the data curation process or how this data product's variables were mapped from the source file, please visit this data product's <a href=\\\"https://github.com/mtna/covid-19/tree/master/data/us-tn/tn-doh/\\\" target=\\\"_blank\\\">GitHub repository</a>.</p>\",\n                    \"uri\": \"c0f79590-616f-4a60-a5a9-9533c2657494\"\n                },\n                {\n                    \"citation\": \"Tennessee Department of Health. <a href=\\\"https://www.tn.gov/health/cedep/ncov/data/downloadable-datasets.html\\\" target=\\\"_blank\\\">Tenessee Department of Health: Epidemiology and Surveillance Data</a>\",\n                    \"description\": \"Tennessee state level COVID-19 case information. Each record measures the count of confirmed cases, active cases, hospitalizations, recoveries, deaths, and tests for the entire state of Tennessee on a specific date.\",\n                    \"id\": \"us_tn_doh_state\",\n                    \"isPrivate\": false,\n                    \"lastUpdate\": \"2020-06-17T12:02:08.607Z\",\n                    \"name\": \"Tennesse Department of Health State Case Information\",\n                    \"note\": \"<strong>Time Series</strong><p>This data product is a time series, as such, the <em>date_stamp</em> should be included in any tabulations performed on it. In addition, tabulations should be created using the sum of a measure rather than the count or percentage of records.</p>\",\n                    \"provenance\": \"<p>This data product is created through cleaning and simple transformations applied to the <a href=\\\"https://www.tn.gov/content/dam/tn/health/documents/cedep/novel-coronavirus/datasets/Public-Dataset-Daily-Case-Info.XLSX\\\" target=\\\"_blank\\\">Excel Download</a> provided by the Tennessee Department of Health. This data is pulled daily.</p><p>For information about the data curation process or how this data product's variables were mapped from the source file, please visit this data product's <a href=\\\"https://github.com/mtna/covid-19/tree/master/data/us-tn/tn-doh/\\\" target=\\\"_blank\\\">GitHub repository</a>.</p>\",\n                    \"uri\": \"0de6e05a-4a8b-42f4-825b-b6968251c16a\"\n                }\n            ],\n            \"description\": \"This catalog contains COVID-19 data products specifically about the state of Tennesee.\",\n            \"id\": \"us_tn\",\n            \"isPrivate\": false,\n            \"name\": \"United States: Tennesee\",\n            \"uri\": \"5ae1789b-5810-44b8-8523-d0f6c0a56359\"\n        }\n    ],\n    \"isPrivate\": false,\n    \"lastUpdate\": \"2020-06-06T04:59:43.052Z\",\n    \"uri\": \"RDS\"\n}"
						}
					]
				},
				{
					"name": "Get data product variables",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://covid19.richdataservices.com/rds/api/catalog/int/jhu_country/variables",
							"protocol": "http",
							"host": [
								"covid19",
								"richdataservices",
								"com"
							],
							"path": [
								"rds",
								"api",
								"catalog",
								"int",
								"jhu_country",
								"variables"
							]
						},
						"description": "Lists metadata for all of the variables in the specified data product."
					},
					"response": [
						{
							"name": "Get data product variables",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://covid19.richdataservices.com/rds/api/catalog/int/jhu_country/variables",
									"protocol": "http",
									"host": [
										"covid19",
										"richdataservices",
										"com"
									],
									"path": [
										"rds",
										"api",
										"catalog",
										"int",
										"jhu_country",
										"variables"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Jun 2020 13:48:00 GMT"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"dataType\": \"DATE\",\n        \"description\": \"The date that the cases were reported.\",\n        \"id\": \"date_stamp\",\n        \"index\": 1,\n        \"isDimension\": true,\n        \"isMeasure\": false,\n        \"isRequired\": false,\n        \"isWeight\": false,\n        \"label\": \"Report Date\",\n        \"name\": \"date_stamp\",\n        \"storageType\": \"DATE\",\n        \"uri\": \"7e2f8ec5-95a0-4f2d-aa9f-d80732e7deaf\"\n    },\n    {\n        \"classificationId\": \"iso3166_1\",\n        \"classificationUri\": \"c892f350-f49f-4ba9-aafe-c8c3654ad30d\",\n        \"dataType\": \"TEXT\",\n        \"description\": \"The two letter country code (ISO 3166-1 alpha-2). The ISO 3166 standard is published by the International Organization for Standardization and defines a standardized set of codes for country names.\",\n        \"id\": \"iso3166_1\",\n        \"index\": 2,\n        \"isDimension\": true,\n        \"isMeasure\": false,\n        \"isRequired\": false,\n        \"isWeight\": false,\n        \"label\": \"Country Code (alpha-2)\",\n        \"name\": \"iso3166_1\",\n        \"storageType\": \"STRING\",\n        \"uri\": \"c90bdb9c-dc56-4f69-ad21-2c0ce37bd693\"\n    },\n    {\n        \"dataType\": \"NUMERIC\",\n        \"description\": \"The cumulative count of confirmed cases for this country leading up to and including this date.\",\n        \"id\": \"cnt_confirmed\",\n        \"index\": 3,\n        \"isDimension\": false,\n        \"isMeasure\": true,\n        \"isRequired\": false,\n        \"isWeight\": false,\n        \"label\": \"Confirmed Count\",\n        \"name\": \"cnt_confirmed\",\n        \"storageType\": \"INT32\",\n        \"uri\": \"f4d2700d-5203-45a3-8d6d-d98c34a62f25\"\n    },\n    {\n        \"dataType\": \"NUMERIC\",\n        \"description\": \"The cumulative count of deaths for this country leading up to and including this date.\",\n        \"id\": \"cnt_death\",\n        \"index\": 4,\n        \"isDimension\": false,\n        \"isMeasure\": true,\n        \"isRequired\": false,\n        \"isWeight\": false,\n        \"label\": \"Deaths Count\",\n        \"name\": \"cnt_death\",\n        \"storageType\": \"INT32\",\n        \"uri\": \"f90f24c1-8876-438c-a891-3d032c145eeb\"\n    },\n    {\n        \"dataType\": \"NUMERIC\",\n        \"description\": \"The cumulative count of recovered cases for this country leading up to and including this date.\",\n        \"id\": \"cnt_recovered\",\n        \"index\": 5,\n        \"isDimension\": false,\n        \"isMeasure\": true,\n        \"isRequired\": false,\n        \"isWeight\": false,\n        \"label\": \"Recovered Count\",\n        \"name\": \"cnt_recovered\",\n        \"storageType\": \"INT32\",\n        \"uri\": \"fca816b4-7f4c-4daa-9134-787cb131349b\"\n    },\n    {\n        \"dataType\": \"NUMERIC\",\n        \"description\": \"The cumulative count of active cases for this country leading up to and including this date.\",\n        \"id\": \"cnt_active\",\n        \"index\": 6,\n        \"isDimension\": false,\n        \"isMeasure\": true,\n        \"isRequired\": false,\n        \"isWeight\": false,\n        \"label\": \"Active Count\",\n        \"name\": \"cnt_active\",\n        \"storageType\": \"INT32\",\n        \"uri\": \"7758940c-786b-4591-ae6e-185b3119f804\"\n    },\n    {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The year of the record stamp (ISO 8601 YYYY).\",\n        \"id\": \"year_stamp\",\n        \"index\": 7,\n        \"isDimension\": false,\n        \"isMeasure\": false,\n        \"isRequired\": false,\n        \"isWeight\": false,\n        \"label\": \"Year\",\n        \"name\": \"year_stamp\",\n        \"storageType\": \"STRING\",\n        \"uri\": \"7fd995da-16d6-4c1d-ac11-fac7dfee24a8\"\n    },\n    {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The month of the record stamp (ISO 8601 MM).\",\n        \"id\": \"month_stamp\",\n        \"index\": 8,\n        \"isDimension\": false,\n        \"isMeasure\": false,\n        \"isRequired\": false,\n        \"isWeight\": false,\n        \"label\": \"Month\",\n        \"name\": \"month_stamp\",\n        \"storageType\": \"STRING\",\n        \"uri\": \"0add8561-27a8-4ad0-ac59-0f66eeb8afd3\"\n    },\n    {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The record date day of the month (DD).\",\n        \"id\": \"day_stamp\",\n        \"index\": 9,\n        \"isDimension\": false,\n        \"isMeasure\": false,\n        \"isRequired\": false,\n        \"isWeight\": false,\n        \"label\": \"Day\",\n        \"name\": \"day_stamp\",\n        \"storageType\": \"STRING\",\n        \"uri\": \"43e40859-8ffc-440e-9163-a2acecfef5f0\"\n    },\n    {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The calendar quarter of the date stamp  (ISO 8601 YYYY-Qq).\",\n        \"id\": \"quarter_stamp\",\n        \"index\": 10,\n        \"isDimension\": false,\n        \"isMeasure\": false,\n        \"isRequired\": false,\n        \"isWeight\": false,\n        \"label\": \"Quarter\",\n        \"name\": \"quarter_stamp\",\n        \"storageType\": \"STRING\",\n        \"uri\": \"71fa38f4-ce09-4b03-85c1-6efa2cab2583\"\n    },\n    {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The year+month of the record date stamp (ISO 8601 YYYY-MM).\",\n        \"id\": \"yearmonth_stamp\",\n        \"index\": 11,\n        \"isDimension\": false,\n        \"isMeasure\": false,\n        \"isRequired\": false,\n        \"isWeight\": false,\n        \"label\": \"Year-Month\",\n        \"name\": \"yearmonth_stamp\",\n        \"storageType\": \"STRING\",\n        \"uri\": \"9304320e-39cb-45d4-8be3-f5546cfe463d\"\n    },\n    {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The week of the year (ISO 8601 YYYY-Www).\",\n        \"id\": \"week_stamp\",\n        \"index\": 12,\n        \"isDimension\": false,\n        \"isMeasure\": false,\n        \"isRequired\": false,\n        \"isWeight\": false,\n        \"label\": \"Year-Week\",\n        \"name\": \"week_stamp\",\n        \"storageType\": \"STRING\",\n        \"uri\": \"61ee7236-7227-4c3d-bfaf-6bf6a0146b67\"\n    },\n    {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The day of the week (ISO 8601 YYYY-Www-n).\",\n        \"id\": \"dow_stamp\",\n        \"index\": 13,\n        \"isDimension\": false,\n        \"isMeasure\": false,\n        \"isRequired\": false,\n        \"isWeight\": false,\n        \"label\": \"Day of Week\",\n        \"name\": \"dow_stamp\",\n        \"storageType\": \"STRING\",\n        \"uri\": \"64745877-5bb9-4a66-80cf-846c2d34e640\"\n    },\n    {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The day of the year (ISO 8601 YYYY-DDD).\",\n        \"id\": \"doy_stamp\",\n        \"index\": 14,\n        \"isDimension\": false,\n        \"isMeasure\": false,\n        \"isRequired\": false,\n        \"isWeight\": false,\n        \"label\": \"Day of Year\",\n        \"name\": \"doy_stamp\",\n        \"storageType\": \"STRING\",\n        \"uri\": \"57ec56bc-b104-4999-9af7-edef7acf3b2a\"\n    }\n]"
						}
					]
				},
				{
					"name": "Get more information about a variable",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://covid19.richdataservices.com/rds/api/catalog/int/jhu_country/variable/iso3166_1",
							"protocol": "http",
							"host": [
								"covid19",
								"richdataservices",
								"com"
							],
							"path": [
								"rds",
								"api",
								"catalog",
								"int",
								"jhu_country",
								"variable",
								"iso3166_1"
							]
						},
						"description": "Returns a variable with more detail than what is provided by the summary object. If the variable has a classification, its URI should be available on the variable which can be used to retrieve the classification."
					},
					"response": [
						{
							"name": "Get more information about a variable",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://covid19.richdataservices.com/rds/api/catalog/int/jhu_country/variable/iso3166_1",
									"protocol": "http",
									"host": [
										"covid19",
										"richdataservices",
										"com"
									],
									"path": [
										"rds",
										"api",
										"catalog",
										"int",
										"jhu_country",
										"variable",
										"iso3166_1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Jun 2020 13:55:07 GMT"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"classificationUri\": \"c892f350-f49f-4ba9-aafe-c8c3654ad30d\",\n    \"dataType\": \"TEXT\",\n    \"description\": \"The two letter country code (ISO 3166-1 alpha-2). The ISO 3166 standard is published by the International Organization for Standardization and defines a standardized set of codes for country names.\",\n    \"fixedStorageWidth\": 2,\n    \"format\": \"<a href=\\\"https://www.iso.org/glossary-for-iso-3166.html\\\" target=\\\"_blank\\\">ISO 3166-1 alpha-2</a>\",\n    \"id\": \"iso3166_1\",\n    \"index\": 2,\n    \"isDimension\": true,\n    \"isMeasure\": false,\n    \"label\": \"Country Code (alpha-2)\",\n    \"name\": \"iso3166_1\",\n    \"reference\": false,\n    \"revisionNumber\": 0,\n    \"storageType\": \"STRING\",\n    \"uri\": \"c90bdb9c-dc56-4f69-ad21-2c0ce37bd693\"\n}"
						}
					]
				},
				{
					"name": "Get data product classifications",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://covid19.richdataservices.com/rds/api/catalog/int/jhu_country/classifications",
							"protocol": "http",
							"host": [
								"covid19",
								"richdataservices",
								"com"
							],
							"path": [
								"rds",
								"api",
								"catalog",
								"int",
								"jhu_country",
								"classifications"
							]
						},
						"description": "Lists metadata for all of the classifications found in the specified data product."
					},
					"response": [
						{
							"name": "Get data product classifications",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://covid19.richdataservices.com/rds/api/catalog/int/jhu_country/classifications",
									"protocol": "http",
									"host": [
										"covid19",
										"richdataservices",
										"com"
									],
									"path": [
										"rds",
										"api",
										"catalog",
										"int",
										"jhu_country",
										"classifications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Jun 2020 13:48:50 GMT"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"codeCount\": 498,\n        \"id\": \"iso3166_1\",\n        \"name\": \"iso3166_1\",\n        \"reference\": false,\n        \"revisionNumber\": 0,\n        \"uri\": \"c892f350-f49f-4ba9-aafe-c8c3654ad30d\"\n    }\n]"
						}
					]
				},
				{
					"name": "Get data product metadata",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://covid19.richdataservices.com/rds/api/catalog/int/jhu_country/metadata/json",
							"protocol": "http",
							"host": [
								"covid19",
								"richdataservices",
								"com"
							],
							"path": [
								"rds",
								"api",
								"catalog",
								"int",
								"jhu_country",
								"metadata",
								"json"
							]
						},
						"description": "Once a suitable data product has been found, users can get an overview of the data product metadata by calling /metadata/{format}. This will return a record layout with its variables along with any classifications that are referenced by the variables. Available formats are `json` and `excel`."
					},
					"response": [
						{
							"name": "Get data product metadata",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://covid19.richdataservices.com/rds/api/catalog/int/jhu_country/metadata/json",
									"protocol": "http",
									"host": [
										"covid19",
										"richdataservices",
										"com"
									],
									"path": [
										"rds",
										"api",
										"catalog",
										"int",
										"jhu_country",
										"metadata",
										"json"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 17 Jun 2020 20:03:52 GMT"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"classifications\": [\n        {\n            \"codes\": [\n                {\n                    \"codeValue\": \"AF\",\n                    \"isPrivate\": false,\n                    \"name\": \"Afghanistan\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"c5e0c967-fbd6-4eec-af99-cfd4478a3c26\"\n                },\n                {\n                    \"codeValue\": \"AX\",\n                    \"isPrivate\": false,\n                    \"name\": \"Åland Islands\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"8dd05bff-5726-461d-88b6-2eafeda4f011\"\n                },\n                {\n                    \"codeValue\": \"AL\",\n                    \"isPrivate\": false,\n                    \"name\": \"Albania\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"b3739d88-5a1e-4ca7-9731-5a69b8c26ec6\"\n                },\n                {\n                    \"codeValue\": \"DZ\",\n                    \"isPrivate\": false,\n                    \"name\": \"Algeria\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"7191b734-88c8-4f3b-a7c1-19206d18ad5d\"\n                },\n                {\n                    \"codeValue\": \"AS\",\n                    \"isPrivate\": false,\n                    \"name\": \"American Samoa\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"2cab1bb4-42c8-4c03-84de-92a484019339\"\n                },\n                {\n                    \"codeValue\": \"AD\",\n                    \"isPrivate\": false,\n                    \"name\": \"Andorra\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"8e9c3760-55af-4ecd-8c2b-72802b72276e\"\n                },\n                {\n                    \"codeValue\": \"AO\",\n                    \"isPrivate\": false,\n                    \"name\": \"Angola\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"109033af-19c3-4df1-879b-5d97f07004db\"\n                },\n                {\n                    \"codeValue\": \"AI\",\n                    \"isPrivate\": false,\n                    \"name\": \"Anguilla\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"def44b77-f61d-4bcf-8033-5633242cc935\"\n                },\n                {\n                    \"codeValue\": \"AQ\",\n                    \"isPrivate\": false,\n                    \"name\": \"Antarctica\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"f35d7764-c6b8-4a8a-a27d-ecba6485ca96\"\n                },\n                {\n                    \"codeValue\": \"AG\",\n                    \"isPrivate\": false,\n                    \"name\": \"Antigua and Barbuda\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"3a9490a4-66eb-46ce-a35a-6ca1afada637\"\n                },\n                {\n                    \"codeValue\": \"AR\",\n                    \"isPrivate\": false,\n                    \"name\": \"Argentina\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"afdd3d4b-09dd-405a-85d3-4b1e5a793168\"\n                },\n                {\n                    \"codeValue\": \"AM\",\n                    \"isPrivate\": false,\n                    \"name\": \"Armenia\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"4a25f964-cee6-4df8-b201-13229b00f11b\"\n                },\n                {\n                    \"codeValue\": \"AW\",\n                    \"isPrivate\": false,\n                    \"name\": \"Aruba\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"2ef74df9-f413-48cb-a2c3-fabb2337fcfc\"\n                },\n                {\n                    \"codeValue\": \"AU\",\n                    \"isPrivate\": false,\n                    \"name\": \"Australia\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"34019a3b-4244-4bc2-a4ba-bdc4b7fd5f50\"\n                },\n                {\n                    \"codeValue\": \"AT\",\n                    \"isPrivate\": false,\n                    \"name\": \"Austria\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"49c9e295-5830-429c-9b84-fb37be2ab598\"\n                },\n                {\n                    \"codeValue\": \"AZ\",\n                    \"isPrivate\": false,\n                    \"name\": \"Azerbaijan\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"bae862c8-66f6-4d62-bffb-288b93848dd3\"\n                },\n                {\n                    \"codeValue\": \"BS\",\n                    \"isPrivate\": false,\n                    \"name\": \"Bahamas\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"28780e60-c550-4081-9f7f-cd43a4937073\"\n                },\n                {\n                    \"codeValue\": \"BH\",\n                    \"isPrivate\": false,\n                    \"name\": \"Bahrain\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"9d7c3f5f-f336-419a-9928-44507d9517e3\"\n                },\n                {\n                    \"codeValue\": \"BD\",\n                    \"isPrivate\": false,\n                    \"name\": \"Bangladesh\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"d07086df-a5d4-4381-bcdb-5982b33bee16\"\n                },\n                {\n                    \"codeValue\": \"BB\",\n                    \"isPrivate\": false,\n                    \"name\": \"Barbados\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"ee91f545-fc82-426d-b8b1-35cfbc838a37\"\n                },\n                {\n                    \"codeValue\": \"BY\",\n                    \"isPrivate\": false,\n                    \"name\": \"Belarus\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"355db154-86f3-4dd4-bff3-6d47379db9dc\"\n                },\n                {\n                    \"codeValue\": \"BE\",\n                    \"isPrivate\": false,\n                    \"name\": \"Belgium\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"e29acecb-77cc-4879-9d7a-db0b913c3ad4\"\n                },\n                {\n                    \"codeValue\": \"BZ\",\n                    \"isPrivate\": false,\n                    \"name\": \"Belize\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"17fcba81-209d-4883-aab7-8cc05ce6fe4f\"\n                },\n                {\n                    \"codeValue\": \"BJ\",\n                    \"isPrivate\": false,\n                    \"name\": \"Benin\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"5013aed4-6283-444d-af51-6c9594c5b5e3\"\n                },\n                {\n                    \"codeValue\": \"BM\",\n                    \"isPrivate\": false,\n                    \"name\": \"Bermuda\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"00c29b9e-7ea7-4786-9fe8-9b855d060ff1\"\n                },\n                {\n                    \"codeValue\": \"BT\",\n                    \"isPrivate\": false,\n                    \"name\": \"Bhutan\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"9fe56aa5-97cb-453e-9f89-a86e8fcf81da\"\n                },\n                {\n                    \"codeValue\": \"BO\",\n                    \"isPrivate\": false,\n                    \"name\": \"Bolivia, Plurinational State of\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"d3221261-5b55-46ce-872e-929cb2e2843b\"\n                },\n                {\n                    \"codeValue\": \"BQ\",\n                    \"isPrivate\": false,\n                    \"name\": \"Bonaire, Sint Eustatius and Saba\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"902cc769-457a-45e5-8bb6-7833de5e5735\"\n                },\n                {\n                    \"codeValue\": \"BA\",\n                    \"isPrivate\": false,\n                    \"name\": \"Bosnia and Herzegovina\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"758a6e38-caea-4a49-a2ed-949d353d8f96\"\n                },\n                {\n                    \"codeValue\": \"BW\",\n                    \"isPrivate\": false,\n                    \"name\": \"Botswana\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"69071f7c-b897-40a9-bd40-6b8cd31f3dd0\"\n                },\n                {\n                    \"codeValue\": \"BV\",\n                    \"isPrivate\": false,\n                    \"name\": \"Bouvet Island\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"e4e9837a-12a8-425d-acfb-12bdfd094ce4\"\n                },\n                {\n                    \"codeValue\": \"BR\",\n                    \"isPrivate\": false,\n                    \"name\": \"Brazil\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"923ddeeb-da66-42b5-a802-1794dc4130f0\"\n                },\n                {\n                    \"codeValue\": \"IO\",\n                    \"isPrivate\": false,\n                    \"name\": \"British Indian Ocean Territory\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"9f21c8c7-5d3c-4e11-800d-f61852b8ac75\"\n                },\n                {\n                    \"codeValue\": \"BN\",\n                    \"isPrivate\": false,\n                    \"name\": \"Brunei Darussalam\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"8c06bb99-d75d-47a2-bac8-2079fb13a349\"\n                },\n                {\n                    \"codeValue\": \"BG\",\n                    \"isPrivate\": false,\n                    \"name\": \"Bulgaria\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"288e1f08-211f-4233-8d35-283a46af1845\"\n                },\n                {\n                    \"codeValue\": \"BF\",\n                    \"isPrivate\": false,\n                    \"name\": \"Burkina Faso\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"89542bbc-0f3e-4dd8-ab0b-fd4e7772dfda\"\n                },\n                {\n                    \"codeValue\": \"BI\",\n                    \"isPrivate\": false,\n                    \"name\": \"Burundi\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"af479097-f023-4f47-ad58-a2678bbb72e4\"\n                },\n                {\n                    \"codeValue\": \"CV\",\n                    \"isPrivate\": false,\n                    \"name\": \"Cabo Verde\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"06ded506-ab9e-4dcd-98e8-a4f7cbbd9854\"\n                },\n                {\n                    \"codeValue\": \"KH\",\n                    \"isPrivate\": false,\n                    \"name\": \"Cambodia\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"0bacc3e6-5b21-4272-ad0c-2d272fc46678\"\n                },\n                {\n                    \"codeValue\": \"CM\",\n                    \"isPrivate\": false,\n                    \"name\": \"Cameroon\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"61632fae-edfd-4a75-a659-d36202e9f152\"\n                },\n                {\n                    \"codeValue\": \"CA\",\n                    \"isPrivate\": false,\n                    \"name\": \"Canada\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"de5942ed-e43f-4d19-b9f0-a21374ccd629\"\n                },\n                {\n                    \"codeValue\": \"KY\",\n                    \"isPrivate\": false,\n                    \"name\": \"Cayman Islands\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"a1b3cc29-92ff-4d67-ac3b-47fd6d83e14e\"\n                },\n                {\n                    \"codeValue\": \"CF\",\n                    \"isPrivate\": false,\n                    \"name\": \"Central African Republic\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"c36ec330-df32-4d65-aeae-1686b662d0e7\"\n                },\n                {\n                    \"codeValue\": \"TD\",\n                    \"isPrivate\": false,\n                    \"name\": \"Chad\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"099c485c-39d3-486a-97c7-148af1b80f47\"\n                },\n                {\n                    \"codeValue\": \"CL\",\n                    \"isPrivate\": false,\n                    \"name\": \"Chile\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"b8eae6f9-6b78-4513-80ac-3180191e2fae\"\n                },\n                {\n                    \"codeValue\": \"CN\",\n                    \"isPrivate\": false,\n                    \"name\": \"China\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"903b8703-9343-4d05-b139-cfee7110cf0f\"\n                },\n                {\n                    \"codeValue\": \"CX\",\n                    \"isPrivate\": false,\n                    \"name\": \"Christmas Island\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"0032e0ff-d63a-4939-8013-a44b2e83f9bc\"\n                },\n                {\n                    \"codeValue\": \"CC\",\n                    \"isPrivate\": false,\n                    \"name\": \"Cocos (Keeling) Islands\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"ff314399-c497-4433-9a94-cd5851ddc744\"\n                },\n                {\n                    \"codeValue\": \"CO\",\n                    \"isPrivate\": false,\n                    \"name\": \"Colombia\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"0c0f1654-7982-4e52-934f-e64e55dab9ea\"\n                },\n                {\n                    \"codeValue\": \"KM\",\n                    \"isPrivate\": false,\n                    \"name\": \"Comoros\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"0cb597a5-83fd-468a-b909-fa3be2c2f582\"\n                },\n                {\n                    \"codeValue\": \"CG\",\n                    \"isPrivate\": false,\n                    \"name\": \"Congo\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"ffb1d340-0ab7-4f49-8457-9577ddc9dc9e\"\n                },\n                {\n                    \"codeValue\": \"CD\",\n                    \"isPrivate\": false,\n                    \"name\": \"Congo, the Democratic Republic of the\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"5b8ed57e-30b1-4396-a0cb-e30a53cc34ed\"\n                },\n                {\n                    \"codeValue\": \"CK\",\n                    \"isPrivate\": false,\n                    \"name\": \"Cook Islands\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"a92f9558-2b50-4eec-a258-d061e179c1c4\"\n                },\n                {\n                    \"codeValue\": \"CR\",\n                    \"isPrivate\": false,\n                    \"name\": \"Costa Rica\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"f5d69a5a-ef2c-4cc2-b3f0-77c4f992c640\"\n                },\n                {\n                    \"codeValue\": \"CI\",\n                    \"isPrivate\": false,\n                    \"name\": \"Côte d'Ivoire\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"090bd6e2-f8ac-4263-89a5-520999adff4c\"\n                },\n                {\n                    \"codeValue\": \"HR\",\n                    \"isPrivate\": false,\n                    \"name\": \"Croatia\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"9c8231dc-a52e-4c63-ad0b-f6741b2d910b\"\n                },\n                {\n                    \"codeValue\": \"CU\",\n                    \"isPrivate\": false,\n                    \"name\": \"Cuba\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"851aa2c1-b444-470f-8a46-740eb162abc0\"\n                },\n                {\n                    \"codeValue\": \"CW\",\n                    \"isPrivate\": false,\n                    \"name\": \"Curaçao\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"fa347b71-b4fa-45c3-9f1f-2222156dad9b\"\n                },\n                {\n                    \"codeValue\": \"CY\",\n                    \"isPrivate\": false,\n                    \"name\": \"Cyprus\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"c79f58e5-e0c3-4dc4-934c-bb25791ddacf\"\n                },\n                {\n                    \"codeValue\": \"CZ\",\n                    \"isPrivate\": false,\n                    \"name\": \"Czechia\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"c986addf-040b-48af-ba3f-a1cb44299382\"\n                },\n                {\n                    \"codeValue\": \"DK\",\n                    \"isPrivate\": false,\n                    \"name\": \"Denmark\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"e89b8836-dbfa-4235-8cb0-81d811fc556a\"\n                },\n                {\n                    \"codeValue\": \"DJ\",\n                    \"isPrivate\": false,\n                    \"name\": \"Djibouti\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"a0660fe0-88aa-49b9-8380-fb4cbe69c751\"\n                },\n                {\n                    \"codeValue\": \"DM\",\n                    \"isPrivate\": false,\n                    \"name\": \"Dominica\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"27d47437-0aa5-460f-84c6-fab6ef3b8838\"\n                },\n                {\n                    \"codeValue\": \"DO\",\n                    \"isPrivate\": false,\n                    \"name\": \"Dominican Republic\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"bde086db-e713-48f1-afd0-30d58e2d321b\"\n                },\n                {\n                    \"codeValue\": \"EC\",\n                    \"isPrivate\": false,\n                    \"name\": \"Ecuador\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"2e033f3d-440a-4b0a-9008-c2f20020ab83\"\n                },\n                {\n                    \"codeValue\": \"EG\",\n                    \"isPrivate\": false,\n                    \"name\": \"Egypt\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"b2589390-ba50-43b9-aa2a-91f562f803f5\"\n                },\n                {\n                    \"codeValue\": \"SV\",\n                    \"isPrivate\": false,\n                    \"name\": \"El Salvador\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"f28b8dd0-675d-428d-8864-99f3a0f85cbb\"\n                },\n                {\n                    \"codeValue\": \"GQ\",\n                    \"isPrivate\": false,\n                    \"name\": \"Equatorial Guinea\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"7bb4a56c-89ef-42dc-950f-3283cbc16bbe\"\n                },\n                {\n                    \"codeValue\": \"ER\",\n                    \"isPrivate\": false,\n                    \"name\": \"Eritrea\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"9a73d072-9af6-4193-8bcd-9630ee9164a0\"\n                },\n                {\n                    \"codeValue\": \"EE\",\n                    \"isPrivate\": false,\n                    \"name\": \"Estonia\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"feb42d9b-9076-43ab-b916-c9f94f031ef4\"\n                },\n                {\n                    \"codeValue\": \"ET\",\n                    \"isPrivate\": false,\n                    \"name\": \"Ethiopia\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"f1b2efc2-40ec-4dd2-8e52-ba2e457a25b7\"\n                },\n                {\n                    \"codeValue\": \"FK\",\n                    \"isPrivate\": false,\n                    \"name\": \"Falkland Islands (Malvinas)\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"8ef57b26-07b6-45ee-887c-4219218d8076\"\n                },\n                {\n                    \"codeValue\": \"FO\",\n                    \"isPrivate\": false,\n                    \"name\": \"Faroe Islands\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"ebb23876-4a14-4881-abbf-23858accb39f\"\n                },\n                {\n                    \"codeValue\": \"FJ\",\n                    \"isPrivate\": false,\n                    \"name\": \"Fiji\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"851a6858-0a51-42bc-a9ce-0286c4c2fad2\"\n                },\n                {\n                    \"codeValue\": \"FI\",\n                    \"isPrivate\": false,\n                    \"name\": \"Finland\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"e8e8bdf9-2085-492a-8770-baa54b86127c\"\n                },\n                {\n                    \"codeValue\": \"FR\",\n                    \"isPrivate\": false,\n                    \"name\": \"France\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"a2cad63b-aa21-4e80-9a10-dfafdc6ebeaa\"\n                },\n                {\n                    \"codeValue\": \"GF\",\n                    \"isPrivate\": false,\n                    \"name\": \"French Guiana\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"b84e1f65-e671-4b3c-824e-23c645114320\"\n                },\n                {\n                    \"codeValue\": \"PF\",\n                    \"isPrivate\": false,\n                    \"name\": \"French Polynesia\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"f49eb62e-9283-4645-932a-3e5e37a0f0c4\"\n                },\n                {\n                    \"codeValue\": \"TF\",\n                    \"isPrivate\": false,\n                    \"name\": \"French Southern Territories\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"9982c51d-17db-4911-aaa7-df5c031729b4\"\n                },\n                {\n                    \"codeValue\": \"GA\",\n                    \"isPrivate\": false,\n                    \"name\": \"Gabon\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"693230d0-3a71-4ffe-b47a-c8d191976b8e\"\n                },\n                {\n                    \"codeValue\": \"GM\",\n                    \"isPrivate\": false,\n                    \"name\": \"Gambia\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"371a14c3-0056-4fd2-bae8-8058fb2aea69\"\n                },\n                {\n                    \"codeValue\": \"GE\",\n                    \"isPrivate\": false,\n                    \"name\": \"Georgia\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"afcd7ab8-7e52-413c-8542-68291d0104e5\"\n                },\n                {\n                    \"codeValue\": \"DE\",\n                    \"isPrivate\": false,\n                    \"name\": \"Germany\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"8a70d782-560c-47a7-ad89-bb27d1a8c7b0\"\n                },\n                {\n                    \"codeValue\": \"GH\",\n                    \"isPrivate\": false,\n                    \"name\": \"Ghana\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"867dd6ad-fe16-4895-8228-40cbca738269\"\n                },\n                {\n                    \"codeValue\": \"GI\",\n                    \"isPrivate\": false,\n                    \"name\": \"Gibraltar\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"dd127520-ed1e-45ac-b481-710fbbc31313\"\n                },\n                {\n                    \"codeValue\": \"GR\",\n                    \"isPrivate\": false,\n                    \"name\": \"Greece\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"34befee1-d816-4307-9d89-9a8c2f0d0ce6\"\n                },\n                {\n                    \"codeValue\": \"GL\",\n                    \"isPrivate\": false,\n                    \"name\": \"Greenland\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"5c3a97b6-3c12-41bc-920f-ee9d344d6139\"\n                },\n                {\n                    \"codeValue\": \"GD\",\n                    \"isPrivate\": false,\n                    \"name\": \"Grenada\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"a1ca82c2-cc0d-4124-be5b-7628a61f3653\"\n                },\n                {\n                    \"codeValue\": \"GP\",\n                    \"isPrivate\": false,\n                    \"name\": \"Guadeloupe\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"dabf4e6a-90e7-48db-a37a-b8ef2a9a24b8\"\n                },\n                {\n                    \"codeValue\": \"GU\",\n                    \"isPrivate\": false,\n                    \"name\": \"Guam\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"61567aff-961d-45f3-8101-317a74a211ea\"\n                },\n                {\n                    \"codeValue\": \"GT\",\n                    \"isPrivate\": false,\n                    \"name\": \"Guatemala\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"acb2dc14-a5a0-430a-81a3-07699019f8e5\"\n                },\n                {\n                    \"codeValue\": \"GG\",\n                    \"isPrivate\": false,\n                    \"name\": \"Guernsey\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"2a3a1e28-13c7-494d-82ca-607fefaddf92\"\n                },\n                {\n                    \"codeValue\": \"GN\",\n                    \"isPrivate\": false,\n                    \"name\": \"Guinea\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"fceb25ab-3694-4bc6-b48b-3ff5d7a09e21\"\n                },\n                {\n                    \"codeValue\": \"GW\",\n                    \"isPrivate\": false,\n                    \"name\": \"Guinea-Bissau\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"12fa204e-2011-4e7e-a7ed-2e80ec2c9735\"\n                },\n                {\n                    \"codeValue\": \"GY\",\n                    \"isPrivate\": false,\n                    \"name\": \"Guyana\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"03366549-6902-4992-b335-f690c78b87dc\"\n                },\n                {\n                    \"codeValue\": \"HT\",\n                    \"isPrivate\": false,\n                    \"name\": \"Haiti\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"7f420383-b41e-45b8-b27f-9de56e40d1ab\"\n                },\n                {\n                    \"codeValue\": \"HM\",\n                    \"isPrivate\": false,\n                    \"name\": \"Heard Island and McDonald Islands\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"3ffc8e14-4703-4b2d-8b13-a09d7193c282\"\n                },\n                {\n                    \"codeValue\": \"VA\",\n                    \"isPrivate\": false,\n                    \"name\": \"Holy See\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"40f55168-63f1-4870-a99b-502f0494fbd7\"\n                },\n                {\n                    \"codeValue\": \"HN\",\n                    \"isPrivate\": false,\n                    \"name\": \"Honduras\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"5192857c-5c32-42b8-a6f7-4fc2e26f3d1f\"\n                },\n                {\n                    \"codeValue\": \"HK\",\n                    \"isPrivate\": false,\n                    \"name\": \"Hong Kong\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"8a1ac719-01f1-43dc-b06d-5c2482f844b6\"\n                },\n                {\n                    \"codeValue\": \"HU\",\n                    \"isPrivate\": false,\n                    \"name\": \"Hungary\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"19e352e6-ce34-4e4c-a2c8-34e102274830\"\n                },\n                {\n                    \"codeValue\": \"IS\",\n                    \"isPrivate\": false,\n                    \"name\": \"Iceland\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"25edeed7-3e79-4994-95a0-e73f95afc0e9\"\n                },\n                {\n                    \"codeValue\": \"IN\",\n                    \"isPrivate\": false,\n                    \"name\": \"India\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"08f6bc9e-4176-49bf-b74c-a7fe038c9aaa\"\n                },\n                {\n                    \"codeValue\": \"ID\",\n                    \"isPrivate\": false,\n                    \"name\": \"Indonesia\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"dcb9ae23-9386-4f24-829c-311d7d351175\"\n                },\n                {\n                    \"codeValue\": \"IR\",\n                    \"isPrivate\": false,\n                    \"name\": \"Iran, Islamic Republic of\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"4f38f693-3ff8-4401-83cb-c66400dcad13\"\n                },\n                {\n                    \"codeValue\": \"IQ\",\n                    \"isPrivate\": false,\n                    \"name\": \"Iraq\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"78f6bbb0-0fe0-4cf2-aa87-1d0dda2913e0\"\n                },\n                {\n                    \"codeValue\": \"IE\",\n                    \"isPrivate\": false,\n                    \"name\": \"Ireland\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"4ea69f01-5818-4234-acbc-3127766fb303\"\n                },\n                {\n                    \"codeValue\": \"IM\",\n                    \"isPrivate\": false,\n                    \"name\": \"Isle of Man\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"f4db5b24-9ac0-4675-825b-3a8ba6efa8c6\"\n                },\n                {\n                    \"codeValue\": \"IL\",\n                    \"isPrivate\": false,\n                    \"name\": \"Israel\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"5e86ccf2-0711-4045-bc54-e1d502dd349d\"\n                },\n                {\n                    \"codeValue\": \"IT\",\n                    \"isPrivate\": false,\n                    \"name\": \"Italy\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"bc1dd5e3-06cd-499a-ad44-c9e3a81248c6\"\n                },\n                {\n                    \"codeValue\": \"JM\",\n                    \"isPrivate\": false,\n                    \"name\": \"Jamaica\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"f912fceb-9514-4c7c-9bee-34c54832dbf5\"\n                },\n                {\n                    \"codeValue\": \"JP\",\n                    \"isPrivate\": false,\n                    \"name\": \"Japan\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"56d89d63-f6d7-44ab-b5cc-6b17d7696396\"\n                },\n                {\n                    \"codeValue\": \"JE\",\n                    \"isPrivate\": false,\n                    \"name\": \"Jersey\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"9982220c-a0a2-44fb-b756-7cbe30834b82\"\n                },\n                {\n                    \"codeValue\": \"JO\",\n                    \"isPrivate\": false,\n                    \"name\": \"Jordan\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"73a859c1-db1a-48d4-838a-8b4147899d08\"\n                },\n                {\n                    \"codeValue\": \"KZ\",\n                    \"isPrivate\": false,\n                    \"name\": \"Kazakhstan\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"9cddf051-9d66-4628-96b6-977ac3dbcf17\"\n                },\n                {\n                    \"codeValue\": \"KE\",\n                    \"isPrivate\": false,\n                    \"name\": \"Kenya\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"3c2ecd56-6efc-4014-8ea2-3e749a458cf5\"\n                },\n                {\n                    \"codeValue\": \"KI\",\n                    \"isPrivate\": false,\n                    \"name\": \"Kiribati\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"cba1d859-cc35-4cf9-b13f-364c82d9625e\"\n                },\n                {\n                    \"codeValue\": \"KP\",\n                    \"isPrivate\": false,\n                    \"name\": \"Korea, Democratic People's Republic of\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"0c73eb73-c065-4836-93f1-de6ccdfd7bcf\"\n                },\n                {\n                    \"codeValue\": \"KR\",\n                    \"isPrivate\": false,\n                    \"name\": \"Korea, Republic of\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"55884cd4-0d15-4279-a02c-a08c91c35b58\"\n                },\n                {\n                    \"codeValue\": \"KW\",\n                    \"isPrivate\": false,\n                    \"name\": \"Kuwait\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"b15079fe-d051-4ef3-b2fb-6e69e9fdb461\"\n                },\n                {\n                    \"codeValue\": \"KG\",\n                    \"isPrivate\": false,\n                    \"name\": \"Kyrgyzstan\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"895f7b89-9f7e-42b3-840d-1379af22811d\"\n                },\n                {\n                    \"codeValue\": \"LA\",\n                    \"isPrivate\": false,\n                    \"name\": \"Lao People's Democratic Republic\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"1443fb4e-35ad-4082-9b9a-0cf419abb56c\"\n                },\n                {\n                    \"codeValue\": \"LV\",\n                    \"isPrivate\": false,\n                    \"name\": \"Latvia\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"19e8cafc-b7d2-4dfb-84cd-48cd3a8e742f\"\n                },\n                {\n                    \"codeValue\": \"LB\",\n                    \"isPrivate\": false,\n                    \"name\": \"Lebanon\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"20f156f5-f066-49d2-93de-b4c95a2e61ac\"\n                },\n                {\n                    \"codeValue\": \"LS\",\n                    \"isPrivate\": false,\n                    \"name\": \"Lesotho\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"083cebae-2472-4481-8804-28083c28fdd9\"\n                },\n                {\n                    \"codeValue\": \"LR\",\n                    \"isPrivate\": false,\n                    \"name\": \"Liberia\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"e1e9f9b7-c91e-414e-9538-068e007fa2fc\"\n                },\n                {\n                    \"codeValue\": \"LY\",\n                    \"isPrivate\": false,\n                    \"name\": \"Libya\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"cc9ddd31-4dbf-45c0-a939-34f39e61a427\"\n                },\n                {\n                    \"codeValue\": \"LI\",\n                    \"isPrivate\": false,\n                    \"name\": \"Liechtenstein\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"c9a618cf-3212-4734-824e-4c729b02cb28\"\n                },\n                {\n                    \"codeValue\": \"LT\",\n                    \"isPrivate\": false,\n                    \"name\": \"Lithuania\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"c05491c6-2299-40ef-85ba-39af3aa298d1\"\n                },\n                {\n                    \"codeValue\": \"LU\",\n                    \"isPrivate\": false,\n                    \"name\": \"Luxembourg\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"46c8f8a8-93a3-40a0-b07e-666779acc7bd\"\n                },\n                {\n                    \"codeValue\": \"MO\",\n                    \"isPrivate\": false,\n                    \"name\": \"Macao\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"4168bf3e-44f4-4274-afe8-a65bf694107e\"\n                },\n                {\n                    \"codeValue\": \"MK\",\n                    \"isPrivate\": false,\n                    \"name\": \"North Macedonia\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"c5e4cbd9-abbf-41d2-b95c-cfa3e1b2f70f\"\n                },\n                {\n                    \"codeValue\": \"MG\",\n                    \"isPrivate\": false,\n                    \"name\": \"Madagascar\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"35e3fa02-2a4a-4140-9c51-2d11b346a462\"\n                },\n                {\n                    \"codeValue\": \"MW\",\n                    \"isPrivate\": false,\n                    \"name\": \"Malawi\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"26d33171-d09f-4dd9-bbda-2d9e52ccd658\"\n                },\n                {\n                    \"codeValue\": \"MY\",\n                    \"isPrivate\": false,\n                    \"name\": \"Malaysia\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"6e999658-850f-402c-abfb-76ad01029f21\"\n                },\n                {\n                    \"codeValue\": \"MV\",\n                    \"isPrivate\": false,\n                    \"name\": \"Maldives\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"33fe9ed9-5e92-4e77-8fce-8db8f7a4f086\"\n                },\n                {\n                    \"codeValue\": \"ML\",\n                    \"isPrivate\": false,\n                    \"name\": \"Mali\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"6e64c534-ce1b-45cb-9710-3102cc13a859\"\n                },\n                {\n                    \"codeValue\": \"MT\",\n                    \"isPrivate\": false,\n                    \"name\": \"Malta\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"3d4afff1-eb65-45ac-bc63-6c9c190616c5\"\n                },\n                {\n                    \"codeValue\": \"MH\",\n                    \"isPrivate\": false,\n                    \"name\": \"Marshall Islands\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"8211687c-f402-4b5f-a8b7-8c01f48123af\"\n                },\n                {\n                    \"codeValue\": \"MQ\",\n                    \"isPrivate\": false,\n                    \"name\": \"Martinique\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"c80626d3-aab2-4c96-bafb-6c45d2c90659\"\n                },\n                {\n                    \"codeValue\": \"MR\",\n                    \"isPrivate\": false,\n                    \"name\": \"Mauritania\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"40bb1b14-d74a-48e2-96eb-7ecbdeded3fa\"\n                },\n                {\n                    \"codeValue\": \"MU\",\n                    \"isPrivate\": false,\n                    \"name\": \"Mauritius\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"8dfdb235-5783-460d-9fb3-71c0a0e2d895\"\n                },\n                {\n                    \"codeValue\": \"YT\",\n                    \"isPrivate\": false,\n                    \"name\": \"Mayotte\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"121e67d2-b1fc-4054-b3d8-955d38575187\"\n                },\n                {\n                    \"codeValue\": \"MX\",\n                    \"isPrivate\": false,\n                    \"name\": \"Mexico\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"455a6438-9418-44be-ae90-f9e160e8cdd1\"\n                },\n                {\n                    \"codeValue\": \"FM\",\n                    \"isPrivate\": false,\n                    \"name\": \"Micronesia, Federated States of\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"2fd26cad-7ebb-491d-8f8d-b03898924d5b\"\n                },\n                {\n                    \"codeValue\": \"MD\",\n                    \"isPrivate\": false,\n                    \"name\": \"Moldova, Republic of\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"e1003d2c-560b-4279-a03c-bc632260e02c\"\n                },\n                {\n                    \"codeValue\": \"MC\",\n                    \"isPrivate\": false,\n                    \"name\": \"Monaco\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"df8b7740-b259-400c-a4bb-ae8cf87031d7\"\n                },\n                {\n                    \"codeValue\": \"MN\",\n                    \"isPrivate\": false,\n                    \"name\": \"Mongolia\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"06dcc72b-64db-4341-bc52-ab1f68a72a43\"\n                },\n                {\n                    \"codeValue\": \"ME\",\n                    \"isPrivate\": false,\n                    \"name\": \"Montenegro\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"ef091ab2-ba12-4f30-9953-5cf2039cb250\"\n                },\n                {\n                    \"codeValue\": \"MS\",\n                    \"isPrivate\": false,\n                    \"name\": \"Montserrat\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"460de596-4dc3-4186-9feb-52f275f05dea\"\n                },\n                {\n                    \"codeValue\": \"MA\",\n                    \"isPrivate\": false,\n                    \"name\": \"Morocco\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"ea4c58d3-d0d9-4787-a3ab-30839d7addbc\"\n                },\n                {\n                    \"codeValue\": \"MZ\",\n                    \"isPrivate\": false,\n                    \"name\": \"Mozambique\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"2dde61f6-33c0-4f4e-9968-71f83b89cf1c\"\n                },\n                {\n                    \"codeValue\": \"MM\",\n                    \"isPrivate\": false,\n                    \"name\": \"Myanmar\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"e55a0ab3-02fb-46f4-aaf4-ef2d093658eb\"\n                },\n                {\n                    \"codeValue\": \"NA\",\n                    \"isPrivate\": false,\n                    \"name\": \"Namibia\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"a064ee65-6d03-46f8-9045-e6e360332dcf\"\n                },\n                {\n                    \"codeValue\": \"NR\",\n                    \"isPrivate\": false,\n                    \"name\": \"Nauru\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"984890d8-e7cd-4926-be4f-ffcaaae62057\"\n                },\n                {\n                    \"codeValue\": \"NP\",\n                    \"isPrivate\": false,\n                    \"name\": \"Nepal\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"0b68b712-7e4c-4975-820d-120c00bfffbe\"\n                },\n                {\n                    \"codeValue\": \"NL\",\n                    \"isPrivate\": false,\n                    \"name\": \"Netherlands\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"9b0ecc91-7529-470b-b5d5-fbfc17c3880a\"\n                },\n                {\n                    \"codeValue\": \"NC\",\n                    \"isPrivate\": false,\n                    \"name\": \"New Caledonia\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"c6b55791-663b-4d81-8b7f-02446491b14f\"\n                },\n                {\n                    \"codeValue\": \"NZ\",\n                    \"isPrivate\": false,\n                    \"name\": \"New Zealand\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"50b46b48-a84a-49b9-a279-501c124f3700\"\n                },\n                {\n                    \"codeValue\": \"NI\",\n                    \"isPrivate\": false,\n                    \"name\": \"Nicaragua\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"53d99e4c-2cbf-4265-9e9d-7c5895ce3e6c\"\n                },\n                {\n                    \"codeValue\": \"NE\",\n                    \"isPrivate\": false,\n                    \"name\": \"Niger\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"e3421b1c-0cd0-4be0-970a-c9cb0dcf4eb6\"\n                },\n                {\n                    \"codeValue\": \"NG\",\n                    \"isPrivate\": false,\n                    \"name\": \"Nigeria\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"8505173d-37d7-46e8-b6e1-14805246c123\"\n                },\n                {\n                    \"codeValue\": \"NU\",\n                    \"isPrivate\": false,\n                    \"name\": \"Niue\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"37aee6d5-6739-4141-a6d8-25c5f2bdc3b0\"\n                },\n                {\n                    \"codeValue\": \"NF\",\n                    \"isPrivate\": false,\n                    \"name\": \"Norfolk Island\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"7edd235f-cda7-488b-b116-cb4ea85ed0ea\"\n                },\n                {\n                    \"codeValue\": \"MP\",\n                    \"isPrivate\": false,\n                    \"name\": \"Northern Mariana Islands\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"5be16ac8-8089-41f4-8404-43439ee3a763\"\n                },\n                {\n                    \"codeValue\": \"NO\",\n                    \"isPrivate\": false,\n                    \"name\": \"Norway\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"1b6dcc76-46fa-488b-b706-ed13433210d9\"\n                },\n                {\n                    \"codeValue\": \"OM\",\n                    \"isPrivate\": false,\n                    \"name\": \"Oman\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"d93070d6-c88d-461d-a369-d32c4a133dbc\"\n                },\n                {\n                    \"codeValue\": \"PK\",\n                    \"isPrivate\": false,\n                    \"name\": \"Pakistan\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"c7243c4a-6d43-4f48-b345-a2c37d768507\"\n                },\n                {\n                    \"codeValue\": \"PW\",\n                    \"isPrivate\": false,\n                    \"name\": \"Palau\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"26267ed8-e8a2-4659-8cb9-d871538760a0\"\n                },\n                {\n                    \"codeValue\": \"PS\",\n                    \"isPrivate\": false,\n                    \"name\": \"Palestine, State of\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"e28f384a-d0a7-4c02-97be-542b66820537\"\n                },\n                {\n                    \"codeValue\": \"PA\",\n                    \"isPrivate\": false,\n                    \"name\": \"Panama\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"dd91871d-e481-4c5e-a147-44e2e3aed7ab\"\n                },\n                {\n                    \"codeValue\": \"PG\",\n                    \"isPrivate\": false,\n                    \"name\": \"Papua New Guinea\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"852f1fac-9c1e-444a-bb09-b36a1bd8ec48\"\n                },\n                {\n                    \"codeValue\": \"PY\",\n                    \"isPrivate\": false,\n                    \"name\": \"Paraguay\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"85f63892-c010-4951-8e62-6b77a39c8211\"\n                },\n                {\n                    \"codeValue\": \"PE\",\n                    \"isPrivate\": false,\n                    \"name\": \"Peru\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"63be8d28-e929-46ae-bffd-8ef85329d8ac\"\n                },\n                {\n                    \"codeValue\": \"PH\",\n                    \"isPrivate\": false,\n                    \"name\": \"Philippines\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"e3cbec23-52af-47b9-bcee-f8efb269e19a\"\n                },\n                {\n                    \"codeValue\": \"PN\",\n                    \"isPrivate\": false,\n                    \"name\": \"Pitcairn\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"c69ff069-902d-4fd3-91eb-f4c8c843a514\"\n                },\n                {\n                    \"codeValue\": \"PL\",\n                    \"isPrivate\": false,\n                    \"name\": \"Poland\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"5600ab63-6b7e-46e6-b3e1-f4a9f7e8a98c\"\n                },\n                {\n                    \"codeValue\": \"PT\",\n                    \"isPrivate\": false,\n                    \"name\": \"Portugal\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"ab8b7487-50fd-4476-9944-0c835e0e774e\"\n                },\n                {\n                    \"codeValue\": \"PR\",\n                    \"isPrivate\": false,\n                    \"name\": \"Puerto Rico\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"5c950911-e136-4279-9b7e-f8aff26be842\"\n                },\n                {\n                    \"codeValue\": \"QA\",\n                    \"isPrivate\": false,\n                    \"name\": \"Qatar\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"f3bf2602-35dd-4d9a-a12d-65e50720f188\"\n                },\n                {\n                    \"codeValue\": \"RE\",\n                    \"isPrivate\": false,\n                    \"name\": \"Réunion\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"02f53db8-d88e-47aa-8478-e0751a6fa2a2\"\n                },\n                {\n                    \"codeValue\": \"RO\",\n                    \"isPrivate\": false,\n                    \"name\": \"Romania\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"fdff238b-6329-441f-b080-4a2aebcba370\"\n                },\n                {\n                    \"codeValue\": \"RU\",\n                    \"isPrivate\": false,\n                    \"name\": \"Russian Federation\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"12387e3c-9ab7-46c1-ae10-eeb624eb88f9\"\n                },\n                {\n                    \"codeValue\": \"RW\",\n                    \"isPrivate\": false,\n                    \"name\": \"Rwanda\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"c9fb96f6-f864-4f12-ae44-2702aa222c88\"\n                },\n                {\n                    \"codeValue\": \"BL\",\n                    \"isPrivate\": false,\n                    \"name\": \"Saint Barthélemy\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"ac08e59f-4e55-400f-8531-806cd4a8bdf3\"\n                },\n                {\n                    \"codeValue\": \"SH\",\n                    \"isPrivate\": false,\n                    \"name\": \"Saint Helena, Ascension and Tristan da Cunha\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"93817437-9a98-4969-9612-b12b4c0ba30a\"\n                },\n                {\n                    \"codeValue\": \"KN\",\n                    \"isPrivate\": false,\n                    \"name\": \"Saint Kitts and Nevis\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"132e7275-b858-49ef-9c7b-e4eb91a52a5e\"\n                },\n                {\n                    \"codeValue\": \"LC\",\n                    \"isPrivate\": false,\n                    \"name\": \"Saint Lucia\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"1e6160b3-122f-42a0-91a4-a6f3013206f5\"\n                },\n                {\n                    \"codeValue\": \"MF\",\n                    \"isPrivate\": false,\n                    \"name\": \"Saint Martin (French part)\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"eb3969bc-9754-401f-a332-fa5f03698f11\"\n                },\n                {\n                    \"codeValue\": \"PM\",\n                    \"isPrivate\": false,\n                    \"name\": \"Saint Pierre and Miquelon\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"9a404db2-fb99-4cb0-8119-2bf39a8a8452\"\n                },\n                {\n                    \"codeValue\": \"VC\",\n                    \"isPrivate\": false,\n                    \"name\": \"Saint Vincent and the Grenadines\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"cd07fd97-1a62-4afc-84a1-daf814b1b19f\"\n                },\n                {\n                    \"codeValue\": \"WS\",\n                    \"isPrivate\": false,\n                    \"name\": \"Samoa\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"da2e6e32-233f-435a-a615-87440cee1253\"\n                },\n                {\n                    \"codeValue\": \"SM\",\n                    \"isPrivate\": false,\n                    \"name\": \"San Marino\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"7aaa285a-7231-4889-b9c1-041cc97fc51d\"\n                },\n                {\n                    \"codeValue\": \"ST\",\n                    \"isPrivate\": false,\n                    \"name\": \"Sao Tome and Principe\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"2778a1ba-15c4-485d-ac02-aa573cda5f83\"\n                },\n                {\n                    \"codeValue\": \"SA\",\n                    \"isPrivate\": false,\n                    \"name\": \"Saudi Arabia\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"a556830f-3787-48d3-942d-43137cc9d6d3\"\n                },\n                {\n                    \"codeValue\": \"SN\",\n                    \"isPrivate\": false,\n                    \"name\": \"Senegal\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"89be2a40-7081-4233-8f95-5c52d2505604\"\n                },\n                {\n                    \"codeValue\": \"RS\",\n                    \"isPrivate\": false,\n                    \"name\": \"Serbia\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"506b4424-e357-45a4-91f5-fde1b4814bc5\"\n                },\n                {\n                    \"codeValue\": \"SC\",\n                    \"isPrivate\": false,\n                    \"name\": \"Seychelles\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"8e41db7e-41b2-4e53-b930-e9fe0d04909d\"\n                },\n                {\n                    \"codeValue\": \"SL\",\n                    \"isPrivate\": false,\n                    \"name\": \"Sierra Leone\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"c226ecee-03d7-4ad4-954d-748c70b4192b\"\n                },\n                {\n                    \"codeValue\": \"SG\",\n                    \"isPrivate\": false,\n                    \"name\": \"Singapore\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"2b636678-2488-4760-9f7a-5ddea386ef77\"\n                },\n                {\n                    \"codeValue\": \"SX\",\n                    \"isPrivate\": false,\n                    \"name\": \"Sint Maarten (Dutch part)\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"0ec0b6c3-6c24-4610-8ff3-af212029f946\"\n                },\n                {\n                    \"codeValue\": \"SK\",\n                    \"isPrivate\": false,\n                    \"name\": \"Slovakia\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"4e506a30-d29f-420b-a970-a959b0a513f2\"\n                },\n                {\n                    \"codeValue\": \"SI\",\n                    \"isPrivate\": false,\n                    \"name\": \"Slovenia\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"1035cb29-b2f0-462f-b6bd-12295b6eaca8\"\n                },\n                {\n                    \"codeValue\": \"SB\",\n                    \"isPrivate\": false,\n                    \"name\": \"Solomon Islands\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"3f2f8dbd-5843-4df5-86b5-2f13df7ab587\"\n                },\n                {\n                    \"codeValue\": \"SO\",\n                    \"isPrivate\": false,\n                    \"name\": \"Somalia\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"b160358a-e845-4213-b07c-397a4debef52\"\n                },\n                {\n                    \"codeValue\": \"ZA\",\n                    \"isPrivate\": false,\n                    \"name\": \"South Africa\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"2d166e43-4809-4327-b434-96f99b8f78a7\"\n                },\n                {\n                    \"codeValue\": \"GS\",\n                    \"isPrivate\": false,\n                    \"name\": \"South Georgia and the South Sandwich Islands\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"085f349b-6fe1-4fba-88cc-02c5004e3ff5\"\n                },\n                {\n                    \"codeValue\": \"SS\",\n                    \"isPrivate\": false,\n                    \"name\": \"South Sudan\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"d7cff394-2aff-4a0f-a444-53d051b89d01\"\n                },\n                {\n                    \"codeValue\": \"ES\",\n                    \"isPrivate\": false,\n                    \"name\": \"Spain\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"6db248b6-58bb-4c6b-917b-b9d1c02dd0db\"\n                },\n                {\n                    \"codeValue\": \"LK\",\n                    \"isPrivate\": false,\n                    \"name\": \"Sri Lanka\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"1824cfcd-9fed-4133-a456-2140efa4fb77\"\n                },\n                {\n                    \"codeValue\": \"SD\",\n                    \"isPrivate\": false,\n                    \"name\": \"Sudan\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"324323fe-704e-46c0-b33f-a2e409b902ea\"\n                },\n                {\n                    \"codeValue\": \"SR\",\n                    \"isPrivate\": false,\n                    \"name\": \"Suriname\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"acafeec3-e3fd-4487-8d54-ebae96aff910\"\n                },\n                {\n                    \"codeValue\": \"SJ\",\n                    \"isPrivate\": false,\n                    \"name\": \"Svalbard and Jan Mayen\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"1431f5af-ce20-4a7d-a619-5b428d9b79c3\"\n                },\n                {\n                    \"codeValue\": \"SZ\",\n                    \"isPrivate\": false,\n                    \"name\": \"Eswatini\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"8dcbb634-0421-41f0-b862-37a898752770\"\n                },\n                {\n                    \"codeValue\": \"SE\",\n                    \"isPrivate\": false,\n                    \"name\": \"Sweden\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"e0746a75-a17b-4097-9828-9dd1a8016875\"\n                },\n                {\n                    \"codeValue\": \"CH\",\n                    \"isPrivate\": false,\n                    \"name\": \"Switzerland\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"2b4c6ea0-b582-44ab-9db2-e4c94590cf9b\"\n                },\n                {\n                    \"codeValue\": \"SY\",\n                    \"isPrivate\": false,\n                    \"name\": \"Syrian Arab Republic\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"5d513425-e10b-49a7-8f81-ecfacc064cd7\"\n                },\n                {\n                    \"codeValue\": \"TW\",\n                    \"isPrivate\": false,\n                    \"name\": \"Taiwan, Province of China\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"c1e3e360-5149-450f-aa9d-bf5541ea060d\"\n                },\n                {\n                    \"codeValue\": \"TJ\",\n                    \"isPrivate\": false,\n                    \"name\": \"Tajikistan\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"ee655520-13bb-42eb-b4db-6e187899f667\"\n                },\n                {\n                    \"codeValue\": \"TZ\",\n                    \"isPrivate\": false,\n                    \"name\": \"Tanzania, United Republic of\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"820022a1-917a-419e-be36-171aa8c69bbe\"\n                },\n                {\n                    \"codeValue\": \"TH\",\n                    \"isPrivate\": false,\n                    \"name\": \"Thailand\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"4d12859a-9ce5-4c3d-95bb-f4c5d4aacef9\"\n                },\n                {\n                    \"codeValue\": \"TL\",\n                    \"isPrivate\": false,\n                    \"name\": \"Timor-Leste\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"f05b6744-1938-4869-98da-d7558af2180f\"\n                },\n                {\n                    \"codeValue\": \"TG\",\n                    \"isPrivate\": false,\n                    \"name\": \"Togo\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"09f2171f-0c75-4599-8b70-4587b1e2fcfe\"\n                },\n                {\n                    \"codeValue\": \"TK\",\n                    \"isPrivate\": false,\n                    \"name\": \"Tokelau\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"a22f2980-ba2b-4e6c-be09-a39dcb84990b\"\n                },\n                {\n                    \"codeValue\": \"TO\",\n                    \"isPrivate\": false,\n                    \"name\": \"Tonga\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"3a105404-5118-4585-a333-8227766de886\"\n                },\n                {\n                    \"codeValue\": \"TT\",\n                    \"isPrivate\": false,\n                    \"name\": \"Trinidad and Tobago\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"662944ef-548b-439d-a09d-f1f8763725f7\"\n                },\n                {\n                    \"codeValue\": \"TN\",\n                    \"isPrivate\": false,\n                    \"name\": \"Tunisia\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"922af68a-827d-4692-ba1f-77466ae03841\"\n                },\n                {\n                    \"codeValue\": \"TR\",\n                    \"isPrivate\": false,\n                    \"name\": \"Turkey\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"377f2ae3-fa58-4036-91ec-e395d5770437\"\n                },\n                {\n                    \"codeValue\": \"TM\",\n                    \"isPrivate\": false,\n                    \"name\": \"Turkmenistan\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"1e16f29f-9790-4c24-839e-3ad29bee7473\"\n                },\n                {\n                    \"codeValue\": \"TC\",\n                    \"isPrivate\": false,\n                    \"name\": \"Turks and Caicos Islands\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"a864ca33-38a5-4918-8405-cf719d401b13\"\n                },\n                {\n                    \"codeValue\": \"TV\",\n                    \"isPrivate\": false,\n                    \"name\": \"Tuvalu\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"1de191f4-0038-4b1b-a770-2f67df9cdc6d\"\n                },\n                {\n                    \"codeValue\": \"UG\",\n                    \"isPrivate\": false,\n                    \"name\": \"Uganda\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"4eead3a2-6faf-4f1a-bc7c-d0508b4c74df\"\n                },\n                {\n                    \"codeValue\": \"UA\",\n                    \"isPrivate\": false,\n                    \"name\": \"Ukraine\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"fa0a812e-2bc7-45ff-9534-d8a93c381f6a\"\n                },\n                {\n                    \"codeValue\": \"AE\",\n                    \"isPrivate\": false,\n                    \"name\": \"United Arab Emirates\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"3c418287-9234-4719-99b4-08f99628ae97\"\n                },\n                {\n                    \"codeValue\": \"GB\",\n                    \"isPrivate\": false,\n                    \"name\": \"United Kingdom\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"cb93b8e2-3a09-48c8-a19f-a5a728c847df\"\n                },\n                {\n                    \"codeValue\": \"UM\",\n                    \"isPrivate\": false,\n                    \"name\": \"United States Minor Outlying Islands\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"fab67ecd-d038-4e58-b4bd-e5d14fec7f7a\"\n                },\n                {\n                    \"codeValue\": \"US\",\n                    \"isPrivate\": false,\n                    \"name\": \"United States of America\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"190cfa9a-f805-49cf-b453-c9ffa3b56be8\"\n                },\n                {\n                    \"codeValue\": \"UY\",\n                    \"isPrivate\": false,\n                    \"name\": \"Uruguay\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"9f64d792-10eb-49ec-9556-0ee2ace313b6\"\n                },\n                {\n                    \"codeValue\": \"UZ\",\n                    \"isPrivate\": false,\n                    \"name\": \"Uzbekistan\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"746ee94c-91c0-4038-aa21-c6b6eb20d7ff\"\n                },\n                {\n                    \"codeValue\": \"VU\",\n                    \"isPrivate\": false,\n                    \"name\": \"Vanuatu\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"5e346a6a-9b85-4fb5-8649-84592954c0d4\"\n                },\n                {\n                    \"codeValue\": \"VE\",\n                    \"isPrivate\": false,\n                    \"name\": \"Venezuela, Bolivarian Republic of\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"f6f96451-cf60-42e8-a23f-1602002ab56c\"\n                },\n                {\n                    \"codeValue\": \"VN\",\n                    \"isPrivate\": false,\n                    \"name\": \"Viet Nam\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"f375ca50-dc9b-4895-8e54-d1834a16295b\"\n                },\n                {\n                    \"codeValue\": \"VG\",\n                    \"isPrivate\": false,\n                    \"name\": \"Virgin Islands, British\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"6d75a4ec-f9e9-4cb1-ad29-522e6dbb76a9\"\n                },\n                {\n                    \"codeValue\": \"VI\",\n                    \"isPrivate\": false,\n                    \"name\": \"Virgin Islands, U.S.\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"bc2e523e-9759-4a7d-9673-1ba6f7cd3d9a\"\n                },\n                {\n                    \"codeValue\": \"WF\",\n                    \"isPrivate\": false,\n                    \"name\": \"Wallis and Futuna\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"5be2aeab-3ac9-43e6-be21-e9a49a77a836\"\n                },\n                {\n                    \"codeValue\": \"EH\",\n                    \"isPrivate\": false,\n                    \"name\": \"Western Sahara\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"f83a8750-ec3e-4624-8865-20290610c96d\"\n                },\n                {\n                    \"codeValue\": \"YE\",\n                    \"isPrivate\": false,\n                    \"name\": \"Yemen\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"191ba951-27ed-4959-b31f-6754ad9fe7bc\"\n                },\n                {\n                    \"codeValue\": \"ZM\",\n                    \"isPrivate\": false,\n                    \"name\": \"Zambia\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"7b6fa1a4-d804-4b96-b50c-aee98689c718\"\n                },\n                {\n                    \"codeValue\": \"ZW\",\n                    \"isPrivate\": false,\n                    \"name\": \"Zimbabwe\",\n                    \"reference\": false,\n                    \"revisionNumber\": 0,\n                    \"uri\": \"164d2cd6-9897-4076-b72b-9e230dd74aeb\"\n                }\n            ],\n            \"id\": \"iso3166_1\",\n            \"isPrivate\": false,\n            \"reference\": false,\n            \"revisionNumber\": 0,\n            \"uri\": \"c892f350-f49f-4ba9-aafe-c8c3654ad30d\"\n        }\n    ],\n    \"recordLayout\": {\n        \"isPrivate\": false,\n        \"reference\": false,\n        \"revisionNumber\": 0,\n        \"variables\": [\n            {\n                \"dataType\": \"DATE\",\n                \"description\": \"The date that the cases were reported.\",\n                \"fixedStorageWidth\": 80,\n                \"id\": \"date_stamp\",\n                \"label\": \"Report Date\",\n                \"name\": \"date_stamp\",\n                \"reference\": false,\n                \"revisionNumber\": 0,\n                \"storageType\": \"DATE\",\n                \"uri\": \"7e2f8ec5-95a0-4f2d-aa9f-d80732e7deaf\"\n            },\n            {\n                \"classificationUri\": \"c892f350-f49f-4ba9-aafe-c8c3654ad30d\",\n                \"dataType\": \"TEXT\",\n                \"description\": \"The two letter country code (ISO 3166-1 alpha-2). The ISO 3166 standard is published by the International Organization for Standardization and defines a standardized set of codes for country names.\",\n                \"id\": \"iso3166_1\",\n                \"label\": \"Country Code (alpha-2)\",\n                \"name\": \"iso3166_1\",\n                \"reference\": false,\n                \"revisionNumber\": 0,\n                \"storageType\": \"STRING\",\n                \"uri\": \"c90bdb9c-dc56-4f69-ad21-2c0ce37bd693\"\n            },\n            {\n                \"dataType\": \"NUMERIC\",\n                \"description\": \"The cumulative count of confirmed cases for this country leading up to and including this date.\",\n                \"fixedStorageWidth\": 80,\n                \"id\": \"cnt_confirmed\",\n                \"label\": \"Confirmed Count\",\n                \"name\": \"cnt_confirmed\",\n                \"reference\": false,\n                \"revisionNumber\": 0,\n                \"storageType\": \"INT32\",\n                \"uri\": \"f4d2700d-5203-45a3-8d6d-d98c34a62f25\"\n            },\n            {\n                \"dataType\": \"NUMERIC\",\n                \"description\": \"The cumulative count of deaths for this country leading up to and including this date.\",\n                \"fixedStorageWidth\": 80,\n                \"id\": \"cnt_death\",\n                \"label\": \"Deaths Count\",\n                \"name\": \"cnt_death\",\n                \"reference\": false,\n                \"revisionNumber\": 0,\n                \"storageType\": \"INT32\",\n                \"uri\": \"f90f24c1-8876-438c-a891-3d032c145eeb\"\n            },\n            {\n                \"dataType\": \"NUMERIC\",\n                \"description\": \"The cumulative count of recovered cases for this country leading up to and including this date.\",\n                \"fixedStorageWidth\": 80,\n                \"id\": \"cnt_recovered\",\n                \"label\": \"Recovered Count\",\n                \"name\": \"cnt_recovered\",\n                \"reference\": false,\n                \"revisionNumber\": 0,\n                \"storageType\": \"INT32\",\n                \"uri\": \"fca816b4-7f4c-4daa-9134-787cb131349b\"\n            },\n            {\n                \"dataType\": \"NUMERIC\",\n                \"description\": \"The cumulative count of active cases for this country leading up to and including this date.\",\n                \"id\": \"cnt_active\",\n                \"label\": \"Active Count\",\n                \"name\": \"cnt_active\",\n                \"reference\": false,\n                \"revisionNumber\": 0,\n                \"storageType\": \"INT32\",\n                \"uri\": \"7758940c-786b-4591-ae6e-185b3119f804\"\n            },\n            {\n                \"dataType\": \"TEXT\",\n                \"description\": \"The year of the record stamp (ISO 8601 YYYY).\",\n                \"id\": \"year_stamp\",\n                \"label\": \"Year\",\n                \"name\": \"year_stamp\",\n                \"reference\": false,\n                \"revisionNumber\": 0,\n                \"storageType\": \"STRING\",\n                \"uri\": \"7fd995da-16d6-4c1d-ac11-fac7dfee24a8\"\n            },\n            {\n                \"dataType\": \"TEXT\",\n                \"description\": \"The month of the record stamp (ISO 8601 MM).\",\n                \"id\": \"month_stamp\",\n                \"label\": \"Month\",\n                \"name\": \"month_stamp\",\n                \"reference\": false,\n                \"revisionNumber\": 0,\n                \"storageType\": \"STRING\",\n                \"uri\": \"0add8561-27a8-4ad0-ac59-0f66eeb8afd3\"\n            },\n            {\n                \"dataType\": \"TEXT\",\n                \"description\": \"The record date day of the month (DD).\",\n                \"id\": \"day_stamp\",\n                \"label\": \"Day\",\n                \"name\": \"day_stamp\",\n                \"reference\": false,\n                \"revisionNumber\": 0,\n                \"storageType\": \"STRING\",\n                \"uri\": \"43e40859-8ffc-440e-9163-a2acecfef5f0\"\n            },\n            {\n                \"dataType\": \"TEXT\",\n                \"description\": \"The calendar quarter of the date stamp  (ISO 8601 YYYY-Qq).\",\n                \"id\": \"quarter_stamp\",\n                \"label\": \"Quarter\",\n                \"name\": \"quarter_stamp\",\n                \"reference\": false,\n                \"revisionNumber\": 0,\n                \"storageType\": \"STRING\",\n                \"uri\": \"71fa38f4-ce09-4b03-85c1-6efa2cab2583\"\n            },\n            {\n                \"dataType\": \"TEXT\",\n                \"description\": \"The year+month of the record date stamp (ISO 8601 YYYY-MM).\",\n                \"id\": \"yearmonth_stamp\",\n                \"label\": \"Year-Month\",\n                \"name\": \"yearmonth_stamp\",\n                \"reference\": false,\n                \"revisionNumber\": 0,\n                \"storageType\": \"STRING\",\n                \"uri\": \"9304320e-39cb-45d4-8be3-f5546cfe463d\"\n            },\n            {\n                \"dataType\": \"TEXT\",\n                \"description\": \"The week of the year (ISO 8601 YYYY-Www).\",\n                \"id\": \"week_stamp\",\n                \"label\": \"Year-Week\",\n                \"name\": \"week_stamp\",\n                \"reference\": false,\n                \"revisionNumber\": 0,\n                \"storageType\": \"STRING\",\n                \"uri\": \"61ee7236-7227-4c3d-bfaf-6bf6a0146b67\"\n            },\n            {\n                \"dataType\": \"TEXT\",\n                \"description\": \"The day of the week (ISO 8601 YYYY-Www-n).\",\n                \"id\": \"dow_stamp\",\n                \"label\": \"Day of Week\",\n                \"name\": \"dow_stamp\",\n                \"reference\": false,\n                \"revisionNumber\": 0,\n                \"storageType\": \"STRING\",\n                \"uri\": \"64745877-5bb9-4a66-80cf-846c2d34e640\"\n            },\n            {\n                \"dataType\": \"TEXT\",\n                \"description\": \"The day of the year (ISO 8601 YYYY-DDD).\",\n                \"id\": \"doy_stamp\",\n                \"label\": \"Day of Year\",\n                \"name\": \"doy_stamp\",\n                \"reference\": false,\n                \"revisionNumber\": 0,\n                \"storageType\": \"STRING\",\n                \"uri\": \"57ec56bc-b104-4999-9af7-edef7acf3b2a\"\n            }\n        ]\n    }\n}"
						}
					]
				}
			],
			"description": "The COVID-19 Rich Data Services catalog has multiple data products ranging from global to county-level data to get a comprehensive view of the emerging data. We have done the work of cleaning, standardizing, and adding metadata to these data sources to make them easy to use and understand. Data is updated daily from sources like [Johns Hopkins' CSSE COVID-19 repository](https://github.com/CSSEGISandData/COVID-19), the [COVID Tracking Project](https://covidtracking.com/), as well as individual states' health department websites. To read more about the data sources and processes used to prepare each of these datasets, visit our [GitHub repository](https://github.com/mtna/covid-19).\n\n### Terms to know:\n* A **data product** refers to an individual dataset.\n* A **catalog** is a grouping of related data products. For example, the Tennesee catalog contains multiple data products corresponding to different datasets released by the Tennesee Department of Health.\n\nIf you haven't already, we encourage you to visit our interactive [RDS Explorer](https://covid19.richdataservices.com/rds-explorer/data-product-selection?utm_source=postman&utm_medium=postmanlabs&utm_campaign=covid_19_apis) to browse through the available COVID-19 data sources and get a sense of the filters, sorting, and metadata options available to build the dataset that is the best fit for your needs. If you are looking to tabulate data, the [Tabulation Engine](https://covid19.richdataservices.com/rds-tabengine/?utm_source=postman&utm_medium=postmanlabs&utm_campaign=covid_19_apis) will help you to configure the setup you need. Both of these tools allow you to generate an API call to pull the data in the setup you have configured.\n  ",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d800f9ee-e497-429a-b2ae-2bae1aeb09f5",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "6792d2fc-606a-4aca-92a3-c610261739c9",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Querying Data",
			"item": [
				{
					"name": "Select Queries",
					"item": [
						{
							"name": "Visualize COVID-19 cases over time in the U.S.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9b22c8cb-178a-402e-82b5-ee6ef9e28abb",
										"exec": [
											"let template = `",
											"    <script src=\"https://www.amcharts.com/lib/4/core.js\"></script>",
											"    <script src=\"https://www.amcharts.com/lib/4/charts.js\"></script>",
											"    <div id=\"line-chart\"></div>",
											"    <script>",
											"        pm.getData( function (error, data) {",
											"            am4core.ready(function() {",
											"                var chart = am4core.create(\"line-chart\", am4charts.XYChart);",
											"                chart.data = data.response.dataProvider;",
											"                chart.dateFormatter.dateFormat = 'yyyy-MM-dd';",
											"                chart.fontSize = '1em';",
											"                chart.maskBullets = false;",
											"                chart.paddingBottom = 0;",
											"                chart.paddingLeft = 0;",
											"                chart.paddingRight = 50;",
											"                chart.paddingTop = 0;",
											"                chart.zoomOutButton.disabled = true;",
											"",
											"                // Configure cursor",
											"                chart.cursor = new am4charts.XYCursor();",
											"                chart.cursor.maxTooltipDistance = 0;",
											"                chart.cursor.behavior = 'none';",
											"                chart.cursor.lineY.disabled = true;",
											"                chart.cursor.xAxis = dateAxis;",
											"",
											"                // Set up the chart legend",
											"                chart.legend = new am4charts.Legend();",
											"                chart.legend.parent = chart.plotContainer;",
											"                chart.legend.labels.template.fill = am4core.color('#000');",
											"                chart.legend.markers.template.height = 16;",
											"                chart.legend.contentAlign = 'left';",
											"                chart.legend.fontSize = '1em';",
											"                chart.legend.itemContainers.template.valign = 'middle';",
											"",
											"                // Create axes",
											"                var dateAxis = chart.xAxes.push(new am4charts.DateAxis());",
											"                dateAxis.renderer.minGridDistance = 60;",
											"",
											"                var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());",
											"                valueAxis.renderer.opposite = true;",
											"                valueAxis.renderer.grid.template.stroke = am4core.color('#000000');",
											"                valueAxis.renderer.grid.template.strokeOpacity = 0.25;",
											"                valueAxis.renderer.minGridDistance = 30;",
											"                valueAxis.renderer.maxLabelPosition = 0.98;",
											"                valueAxis.renderer.baseGrid.disabled = true;",
											"                valueAxis.renderer.inside = false;",
											"                valueAxis.renderer.labels.template.verticalCenter = 'bottom';",
											"                valueAxis.renderer.labels.template.fill = am4core.color('#000');",
											"                valueAxis.renderer.labels.template.padding(2, 2, 2, 2);",
											"",
											"                // Create series",
											"                var series1 = chart.series.push(new am4charts.LineSeries());",
											"                series1.name = 'Total Confirmed Cases';",
											"                series1.dataFields.valueY = \"cnt_confirmed\";",
											"                series1.dataFields.dateX = \"date_stamp\";",
											"                series1.stroke = am4core.color('#d21a1a');",
											"                series1.fill = am4core.color('#d21a1a');",
											"                series1.strokeWidth = 3",
											"                series1.tooltipText = 'Total Confirmed Cases: {valueY}';",
											"",
											"                // Create series",
											"                var series2 = chart.series.push(new am4charts.LineSeries());",
											"                series2.name = 'Total Deaths';",
											"                series2.dataFields.valueY = \"cnt_death\";",
											"                series2.dataFields.dateX = \"date_stamp\";",
											"                series2.stroke = am4core.color('#1c5fe5');",
											"                series2.fill = am4core.color('#1c5fe5');",
											"                series2.strokeWidth = 3;",
											"                series2.tooltipText = 'Total Deaths: {valueY}';",
											"",
											"                // Create series",
											"                var series3 = chart.series.push(new am4charts.LineSeries());",
											"                series3.name = 'Total Recovered';",
											"                series3.dataFields.valueY = \"cnt_recovered\";",
											"                series3.dataFields.dateX = \"date_stamp\";",
											"                series3.stroke = am4core.color('#45d21a');",
											"                series3.fill = am4core.color('#45d21a');",
											"                series3.strokeWidth = 3",
											"                series3.tooltipText = 'Total Recovered: {valueY}';",
											"",
											"                chart.cursor = new am4charts.XYCursor();",
											"                chart.cursor.xAxis = dateAxis;",
											"            });",
											"        });",
											"    </script>",
											"`;",
											"",
											"// Set visualizer",
											"pm.visualizer.set(template, {",
											"    // Pass the response body parsed as JSON as `data`",
											"    response: pm.response.json()",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://covid19.richdataservices.com/rds/api/query/int/jhu_country/select?cols=date_stamp,cnt_confirmed,cnt_death,cnt_recovered&where=(iso3166_1=US)&format=amcharts&limit=5000",
									"protocol": "https",
									"host": [
										"covid19",
										"richdataservices",
										"com"
									],
									"path": [
										"rds",
										"api",
										"query",
										"int",
										"jhu_country",
										"select"
									],
									"query": [
										{
											"key": "cols",
											"value": "date_stamp,cnt_confirmed,cnt_death,cnt_recovered",
											"description": "We want to see cases on a timeline, so lets make date the dimension, and plot counts of confirmed, deaths, and recovered cases."
										},
										{
											"key": "where",
											"value": "(iso3166_1=US)",
											"description": "Let's limit it to just the US. Want to see another country? Change this to the country code of your choice. \n\n We can see the codes for the `iso3166_1` classification by sending the following request. Note that you will need to use the code's`codeValue` property and not the`name` property when querying. `http://covid19.richdataservices.com/rds/api/catalog/int/jhu_country/classification/iso3166_1/codes`"
										},
										{
											"key": "format",
											"value": "amcharts",
											"description": "Our desired charting library, used to return the data in a way that is directly consumable by amCharts. Leaving this off will return the data record by record. "
										},
										{
											"key": "limit",
											"value": "5000",
											"description": "Limit results to 5000"
										}
									]
								},
								"description": "Let's say we are interested in examining COVID-19 cases over time. By using the Johns Hopkins country-level dataset's (`jhu_country`) confirmed (`cnt_confirmed`), recovered (`cnt_recovered`), and death count (`cnt_death`) variables, and specifying that we are only interested in US case data, we can easily query data that is directly consumable by our charting library (amCharts, in this case). After sending the request, you can head over to the Visualize tab to see the graph below.   \n\nOf course, you can also leave off the `format` parameter to have the data returned record by record. An example of this is available in the Example Response section. Try out this query and apply your own filters in the [RDS Explorer](https://covid19.richdataservices.com/rds-explorer/explore/int/jhu_country/data?collimit=25&coloffset=0&count=true&offset=0&limit=25&where=(iso3166_1%3DUS)&cols=date_stamp,iso3166_1,cnt_confirmed,cnt_death,cnt_recovered?utm_source=postman&utm_medium=postmanlabs&utm_campaign=covid_19_apis).\n\n<img src=\"https://mtna.s3.amazonaws.com/rds/images/Postman/confirmedDeathRecoveredLineChart.png\" alt=\"confirmedDeathRecoveredLineChart\" width=\"800\"/>"
							},
							"response": [
								{
									"name": "Visualize COVID-19 cases over time (amCharts)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/rds/api/query/{{catalogId}}/{{dataProductId}}/select?cols=date_stamp,cnt_confirmed,cnt_death,cnt_recovered&where=(iso3166_1=US)&format=amcharts&limit=5000",
											"host": [
												"{{host}}"
											],
											"path": [
												"rds",
												"api",
												"query",
												"{{catalogId}}",
												"{{dataProductId}}",
												"select"
											],
											"query": [
												{
													"key": "cols",
													"value": "date_stamp,cnt_confirmed,cnt_death,cnt_recovered",
													"description": "We want to see cases on a timeline, so lets make date the dimension, and plot counts of confirmed, deaths, and recovered cases.\n"
												},
												{
													"key": "where",
													"value": "(iso3166_1=US)",
													"description": "Let's limit it to just the US. Want to see another country, change this to the country code of your choice"
												},
												{
													"key": "format",
													"value": "amcharts",
													"description": "Our desired charting library. Other available formats are `PLOTLY_BAR`, `PLOTLY_BOXPLOT`, `PLOTLY_BUBBLE`, `PLOTLY_HIST`, `PLOTLY_PIE`, `GCHARTS`"
												},
												{
													"key": "limit",
													"value": "5000",
													"description": "Limit results to 5000"
												},
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 17 Jun 2020 19:11:32 GMT"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"dataProvider\": [\n        {\n            \"date_stamp\": \"2020-01-22\",\n            \"cnt_confirmed\": 1,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 0\n        },\n        {\n            \"date_stamp\": \"2020-01-23\",\n            \"cnt_confirmed\": 1,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 0\n        },\n        {\n            \"date_stamp\": \"2020-01-24\",\n            \"cnt_confirmed\": 2,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 0\n        },\n        {\n            \"date_stamp\": \"2020-01-25\",\n            \"cnt_confirmed\": 2,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 0\n        },\n        {\n            \"date_stamp\": \"2020-01-26\",\n            \"cnt_confirmed\": 5,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 0\n        },\n        {\n            \"date_stamp\": \"2020-01-27\",\n            \"cnt_confirmed\": 5,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 0\n        },\n        {\n            \"date_stamp\": \"2020-01-28\",\n            \"cnt_confirmed\": 5,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 0\n        },\n        {\n            \"date_stamp\": \"2020-01-29\",\n            \"cnt_confirmed\": 5,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 0\n        },\n        {\n            \"date_stamp\": \"2020-01-30\",\n            \"cnt_confirmed\": 5,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 0\n        },\n        {\n            \"date_stamp\": \"2020-01-31\",\n            \"cnt_confirmed\": 6,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 0\n        },\n        {\n            \"date_stamp\": \"2020-02-01\",\n            \"cnt_confirmed\": 8,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 0\n        },\n        {\n            \"date_stamp\": \"2020-02-02\",\n            \"cnt_confirmed\": 8,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 0\n        },\n        {\n            \"date_stamp\": \"2020-02-03\",\n            \"cnt_confirmed\": 11,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 0\n        },\n        {\n            \"date_stamp\": \"2020-02-04\",\n            \"cnt_confirmed\": 11,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 0\n        },\n        {\n            \"date_stamp\": \"2020-02-05\",\n            \"cnt_confirmed\": 12,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 0\n        },\n        {\n            \"date_stamp\": \"2020-02-06\",\n            \"cnt_confirmed\": 12,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 0\n        },\n        {\n            \"date_stamp\": \"2020-02-07\",\n            \"cnt_confirmed\": 12,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 0\n        },\n        {\n            \"date_stamp\": \"2020-02-08\",\n            \"cnt_confirmed\": 12,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 0\n        },\n        {\n            \"date_stamp\": \"2020-02-09\",\n            \"cnt_confirmed\": 12,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 3\n        },\n        {\n            \"date_stamp\": \"2020-02-10\",\n            \"cnt_confirmed\": 12,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 3\n        },\n        {\n            \"date_stamp\": \"2020-02-11\",\n            \"cnt_confirmed\": 13,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 3\n        },\n        {\n            \"date_stamp\": \"2020-02-12\",\n            \"cnt_confirmed\": 13,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 3\n        },\n        {\n            \"date_stamp\": \"2020-02-13\",\n            \"cnt_confirmed\": 15,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 3\n        },\n        {\n            \"date_stamp\": \"2020-02-14\",\n            \"cnt_confirmed\": 15,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 3\n        },\n        {\n            \"date_stamp\": \"2020-02-15\",\n            \"cnt_confirmed\": 15,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 3\n        },\n        {\n            \"date_stamp\": \"2020-02-16\",\n            \"cnt_confirmed\": 15,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 3\n        },\n        {\n            \"date_stamp\": \"2020-02-17\",\n            \"cnt_confirmed\": 15,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 3\n        },\n        {\n            \"date_stamp\": \"2020-02-18\",\n            \"cnt_confirmed\": 15,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 3\n        },\n        {\n            \"date_stamp\": \"2020-02-19\",\n            \"cnt_confirmed\": 15,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 3\n        },\n        {\n            \"date_stamp\": \"2020-02-20\",\n            \"cnt_confirmed\": 15,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 3\n        },\n        {\n            \"date_stamp\": \"2020-02-21\",\n            \"cnt_confirmed\": 35,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 5\n        },\n        {\n            \"date_stamp\": \"2020-02-22\",\n            \"cnt_confirmed\": 35,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 5\n        },\n        {\n            \"date_stamp\": \"2020-02-23\",\n            \"cnt_confirmed\": 35,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 5\n        },\n        {\n            \"date_stamp\": \"2020-02-24\",\n            \"cnt_confirmed\": 53,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 5\n        },\n        {\n            \"date_stamp\": \"2020-02-25\",\n            \"cnt_confirmed\": 53,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 6\n        },\n        {\n            \"date_stamp\": \"2020-02-26\",\n            \"cnt_confirmed\": 59,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 6\n        },\n        {\n            \"date_stamp\": \"2020-02-27\",\n            \"cnt_confirmed\": 60,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 6\n        },\n        {\n            \"date_stamp\": \"2020-02-28\",\n            \"cnt_confirmed\": 62,\n            \"cnt_death\": 0,\n            \"cnt_recovered\": 7\n        },\n        {\n            \"date_stamp\": \"2020-02-29\",\n            \"cnt_confirmed\": 70,\n            \"cnt_death\": 1,\n            \"cnt_recovered\": 7\n        },\n        {\n            \"date_stamp\": \"2020-03-01\",\n            \"cnt_confirmed\": 76,\n            \"cnt_death\": 1,\n            \"cnt_recovered\": 7\n        },\n        {\n            \"date_stamp\": \"2020-03-02\",\n            \"cnt_confirmed\": 101,\n            \"cnt_death\": 6,\n            \"cnt_recovered\": 7\n        },\n        {\n            \"date_stamp\": \"2020-03-03\",\n            \"cnt_confirmed\": 122,\n            \"cnt_death\": 7,\n            \"cnt_recovered\": 8\n        },\n        {\n            \"date_stamp\": \"2020-03-04\",\n            \"cnt_confirmed\": 153,\n            \"cnt_death\": 11,\n            \"cnt_recovered\": 8\n        },\n        {\n            \"date_stamp\": \"2020-03-05\",\n            \"cnt_confirmed\": 221,\n            \"cnt_death\": 12,\n            \"cnt_recovered\": 8\n        },\n        {\n            \"date_stamp\": \"2020-03-06\",\n            \"cnt_confirmed\": 278,\n            \"cnt_death\": 14,\n            \"cnt_recovered\": 8\n        },\n        {\n            \"date_stamp\": \"2020-03-07\",\n            \"cnt_confirmed\": 417,\n            \"cnt_death\": 17,\n            \"cnt_recovered\": 8\n        },\n        {\n            \"date_stamp\": \"2020-03-08\",\n            \"cnt_confirmed\": 537,\n            \"cnt_death\": 21,\n            \"cnt_recovered\": 8\n        },\n        {\n            \"date_stamp\": \"2020-03-09\",\n            \"cnt_confirmed\": 605,\n            \"cnt_death\": 22,\n            \"cnt_recovered\": 8\n        },\n        {\n            \"date_stamp\": \"2020-03-10\",\n            \"cnt_confirmed\": 959,\n            \"cnt_death\": 28,\n            \"cnt_recovered\": 8\n        },\n        {\n            \"date_stamp\": \"2020-03-11\",\n            \"cnt_confirmed\": 1281,\n            \"cnt_death\": 36,\n            \"cnt_recovered\": 8\n        },\n        {\n            \"date_stamp\": \"2020-03-12\",\n            \"cnt_confirmed\": 1663,\n            \"cnt_death\": 40,\n            \"cnt_recovered\": 12\n        },\n        {\n            \"date_stamp\": \"2020-03-13\",\n            \"cnt_confirmed\": 2179,\n            \"cnt_death\": 47,\n            \"cnt_recovered\": 12\n        },\n        {\n            \"date_stamp\": \"2020-03-14\",\n            \"cnt_confirmed\": 2726,\n            \"cnt_death\": 54,\n            \"cnt_recovered\": 12\n        },\n        {\n            \"date_stamp\": \"2020-03-15\",\n            \"cnt_confirmed\": 3499,\n            \"cnt_death\": 63,\n            \"cnt_recovered\": 12\n        },\n        {\n            \"date_stamp\": \"2020-03-16\",\n            \"cnt_confirmed\": 4632,\n            \"cnt_death\": 85,\n            \"cnt_recovered\": 17\n        },\n        {\n            \"date_stamp\": \"2020-03-17\",\n            \"cnt_confirmed\": 6421,\n            \"cnt_death\": 108,\n            \"cnt_recovered\": 17\n        },\n        {\n            \"date_stamp\": \"2020-03-18\",\n            \"cnt_confirmed\": 7786,\n            \"cnt_death\": 118,\n            \"cnt_recovered\": 106\n        },\n        {\n            \"date_stamp\": \"2020-03-19\",\n            \"cnt_confirmed\": 13680,\n            \"cnt_death\": 200,\n            \"cnt_recovered\": 108\n        },\n        {\n            \"date_stamp\": \"2020-03-20\",\n            \"cnt_confirmed\": 19101,\n            \"cnt_death\": 244,\n            \"cnt_recovered\": 147\n        },\n        {\n            \"date_stamp\": \"2020-03-21\",\n            \"cnt_confirmed\": 25514,\n            \"cnt_death\": 307,\n            \"cnt_recovered\": 171\n        },\n        {\n            \"date_stamp\": \"2020-03-22\",\n            \"cnt_confirmed\": 33848,\n            \"cnt_death\": 427,\n            \"cnt_recovered\": 0\n        },\n        {\n            \"date_stamp\": \"2020-03-23\",\n            \"cnt_confirmed\": 43663,\n            \"cnt_death\": 552,\n            \"cnt_recovered\": 0\n        },\n        {\n            \"date_stamp\": \"2020-03-24\",\n            \"cnt_confirmed\": 53736,\n            \"cnt_death\": 706,\n            \"cnt_recovered\": 348\n        },\n        {\n            \"date_stamp\": \"2020-03-25\",\n            \"cnt_confirmed\": 65778,\n            \"cnt_death\": 942,\n            \"cnt_recovered\": 361\n        },\n        {\n            \"date_stamp\": \"2020-03-26\",\n            \"cnt_confirmed\": 83836,\n            \"cnt_death\": 1209,\n            \"cnt_recovered\": 681\n        },\n        {\n            \"date_stamp\": \"2020-03-27\",\n            \"cnt_confirmed\": 101657,\n            \"cnt_death\": 1581,\n            \"cnt_recovered\": 869\n        },\n        {\n            \"date_stamp\": \"2020-03-28\",\n            \"cnt_confirmed\": 121465,\n            \"cnt_death\": 2026,\n            \"cnt_recovered\": 1072\n        },\n        {\n            \"date_stamp\": \"2020-03-29\",\n            \"cnt_confirmed\": 140909,\n            \"cnt_death\": 2467,\n            \"cnt_recovered\": 2665\n        },\n        {\n            \"date_stamp\": \"2020-03-30\",\n            \"cnt_confirmed\": 161831,\n            \"cnt_death\": 2978,\n            \"cnt_recovered\": 5644\n        },\n        {\n            \"date_stamp\": \"2020-03-31\",\n            \"cnt_confirmed\": 188172,\n            \"cnt_death\": 3873,\n            \"cnt_recovered\": 7024\n        },\n        {\n            \"date_stamp\": \"2020-04-01\",\n            \"cnt_confirmed\": 213372,\n            \"cnt_death\": 4757,\n            \"cnt_recovered\": 8474\n        },\n        {\n            \"date_stamp\": \"2020-04-02\",\n            \"cnt_confirmed\": 243599,\n            \"cnt_death\": 5926,\n            \"cnt_recovered\": 9001\n        },\n        {\n            \"date_stamp\": \"2020-04-03\",\n            \"cnt_confirmed\": 275586,\n            \"cnt_death\": 7087,\n            \"cnt_recovered\": 9707\n        },\n        {\n            \"date_stamp\": \"2020-04-04\",\n            \"cnt_confirmed\": 308853,\n            \"cnt_death\": 8407,\n            \"cnt_recovered\": 14652\n        },\n        {\n            \"date_stamp\": \"2020-04-05\",\n            \"cnt_confirmed\": 337072,\n            \"cnt_death\": 9619,\n            \"cnt_recovered\": 17448\n        },\n        {\n            \"date_stamp\": \"2020-04-06\",\n            \"cnt_confirmed\": 366667,\n            \"cnt_death\": 10783,\n            \"cnt_recovered\": 19581\n        },\n        {\n            \"date_stamp\": \"2020-04-07\",\n            \"cnt_confirmed\": 396223,\n            \"cnt_death\": 12722,\n            \"cnt_recovered\": 21763\n        },\n        {\n            \"date_stamp\": \"2020-04-08\",\n            \"cnt_confirmed\": 429052,\n            \"cnt_death\": 14695,\n            \"cnt_recovered\": 23559\n        },\n        {\n            \"date_stamp\": \"2020-04-09\",\n            \"cnt_confirmed\": 461437,\n            \"cnt_death\": 16478,\n            \"cnt_recovered\": 25410\n        },\n        {\n            \"date_stamp\": \"2020-04-10\",\n            \"cnt_confirmed\": 496535,\n            \"cnt_death\": 18586,\n            \"cnt_recovered\": 28790\n        },\n        {\n            \"date_stamp\": \"2020-04-11\",\n            \"cnt_confirmed\": 526396,\n            \"cnt_death\": 20462,\n            \"cnt_recovered\": 31270\n        },\n        {\n            \"date_stamp\": \"2020-04-12\",\n            \"cnt_confirmed\": 555313,\n            \"cnt_death\": 22019,\n            \"cnt_recovered\": 32988\n        },\n        {\n            \"date_stamp\": \"2020-04-13\",\n            \"cnt_confirmed\": 580619,\n            \"cnt_death\": 23528,\n            \"cnt_recovered\": 43482\n        },\n        {\n            \"date_stamp\": \"2020-04-14\",\n            \"cnt_confirmed\": 607670,\n            \"cnt_death\": 25831,\n            \"cnt_recovered\": 47763\n        },\n        {\n            \"date_stamp\": \"2020-04-15\",\n            \"cnt_confirmed\": 636350,\n            \"cnt_death\": 28325,\n            \"cnt_recovered\": 52096\n        },\n        {\n            \"date_stamp\": \"2020-04-16\",\n            \"cnt_confirmed\": 667801,\n            \"cnt_death\": 32916,\n            \"cnt_recovered\": 54703\n        },\n        {\n            \"date_stamp\": \"2020-04-17\",\n            \"cnt_confirmed\": 699706,\n            \"cnt_death\": 36773,\n            \"cnt_recovered\": 58545\n        },\n        {\n            \"date_stamp\": \"2020-04-18\",\n            \"cnt_confirmed\": 732197,\n            \"cnt_death\": 38664,\n            \"cnt_recovered\": 64840\n        },\n        {\n            \"date_stamp\": \"2020-04-19\",\n            \"cnt_confirmed\": 759086,\n            \"cnt_death\": 40661,\n            \"cnt_recovered\": 70337\n        },\n        {\n            \"date_stamp\": \"2020-04-20\",\n            \"cnt_confirmed\": 784326,\n            \"cnt_death\": 42094,\n            \"cnt_recovered\": 72329\n        },\n        {\n            \"date_stamp\": \"2020-04-21\",\n            \"cnt_confirmed\": 812036,\n            \"cnt_death\": 44444,\n            \"cnt_recovered\": 75204\n        },\n        {\n            \"date_stamp\": \"2020-04-22\",\n            \"cnt_confirmed\": 839675,\n            \"cnt_death\": 46583,\n            \"cnt_recovered\": 77366\n        },\n        {\n            \"date_stamp\": \"2020-04-23\",\n            \"cnt_confirmed\": 869170,\n            \"cnt_death\": 49954,\n            \"cnt_recovered\": 80203\n        },\n        {\n            \"date_stamp\": \"2020-04-24\",\n            \"cnt_confirmed\": 905333,\n            \"cnt_death\": 51949,\n            \"cnt_recovered\": 99079\n        },\n        {\n            \"date_stamp\": \"2020-04-25\",\n            \"cnt_confirmed\": 938154,\n            \"cnt_death\": 53755,\n            \"cnt_recovered\": 100372\n        },\n        {\n            \"date_stamp\": \"2020-04-26\",\n            \"cnt_confirmed\": 965783,\n            \"cnt_death\": 54881,\n            \"cnt_recovered\": 106988\n        },\n        {\n            \"date_stamp\": \"2020-04-27\",\n            \"cnt_confirmed\": 988197,\n            \"cnt_death\": 56259,\n            \"cnt_recovered\": 111424\n        },\n        {\n            \"date_stamp\": \"2020-04-28\",\n            \"cnt_confirmed\": 1012582,\n            \"cnt_death\": 58355,\n            \"cnt_recovered\": 115936\n        },\n        {\n            \"date_stamp\": \"2020-04-29\",\n            \"cnt_confirmed\": 1039909,\n            \"cnt_death\": 60967,\n            \"cnt_recovered\": 120720\n        },\n        {\n            \"date_stamp\": \"2020-04-30\",\n            \"cnt_confirmed\": 1069424,\n            \"cnt_death\": 62996,\n            \"cnt_recovered\": 153947\n        },\n        {\n            \"date_stamp\": \"2020-05-01\",\n            \"cnt_confirmed\": 1103461,\n            \"cnt_death\": 64943,\n            \"cnt_recovered\": 164015\n        },\n        {\n            \"date_stamp\": \"2020-05-02\",\n            \"cnt_confirmed\": 1132539,\n            \"cnt_death\": 66369,\n            \"cnt_recovered\": 175382\n        },\n        {\n            \"date_stamp\": \"2020-05-03\",\n            \"cnt_confirmed\": 1158040,\n            \"cnt_death\": 67682,\n            \"cnt_recovered\": 180152\n        },\n        {\n            \"date_stamp\": \"2020-05-04\",\n            \"cnt_confirmed\": 1180375,\n            \"cnt_death\": 68922,\n            \"cnt_recovered\": 187180\n        },\n        {\n            \"date_stamp\": \"2020-05-05\",\n            \"cnt_confirmed\": 1204351,\n            \"cnt_death\": 71064,\n            \"cnt_recovered\": 189791\n        },\n        {\n            \"date_stamp\": \"2020-05-06\",\n            \"cnt_confirmed\": 1228603,\n            \"cnt_death\": 73431,\n            \"cnt_recovered\": 189910\n        },\n        {\n            \"date_stamp\": \"2020-05-07\",\n            \"cnt_confirmed\": 1257023,\n            \"cnt_death\": 75662,\n            \"cnt_recovered\": 195036\n        },\n        {\n            \"date_stamp\": \"2020-05-08\",\n            \"cnt_confirmed\": 1283929,\n            \"cnt_death\": 77180,\n            \"cnt_recovered\": 198993\n        },\n        {\n            \"date_stamp\": \"2020-05-09\",\n            \"cnt_confirmed\": 1309550,\n            \"cnt_death\": 78795,\n            \"cnt_recovered\": 212534\n        },\n        {\n            \"date_stamp\": \"2020-05-10\",\n            \"cnt_confirmed\": 1329260,\n            \"cnt_death\": 79526,\n            \"cnt_recovered\": 216169\n        },\n        {\n            \"date_stamp\": \"2020-05-11\",\n            \"cnt_confirmed\": 1347881,\n            \"cnt_death\": 80682,\n            \"cnt_recovered\": 232733\n        },\n        {\n            \"date_stamp\": \"2020-05-12\",\n            \"cnt_confirmed\": 1369574,\n            \"cnt_death\": 82376,\n            \"cnt_recovered\": 230287\n        },\n        {\n            \"date_stamp\": \"2020-05-13\",\n            \"cnt_confirmed\": 1390406,\n            \"cnt_death\": 84119,\n            \"cnt_recovered\": 243430\n        },\n        {\n            \"date_stamp\": \"2020-05-14\",\n            \"cnt_confirmed\": 1417774,\n            \"cnt_death\": 85898,\n            \"cnt_recovered\": 246414\n        },\n        {\n            \"date_stamp\": \"2020-05-15\",\n            \"cnt_confirmed\": 1442824,\n            \"cnt_death\": 87530,\n            \"cnt_recovered\": 250747\n        },\n        {\n            \"date_stamp\": \"2020-05-16\",\n            \"cnt_confirmed\": 1467820,\n            \"cnt_death\": 88754,\n            \"cnt_recovered\": 268376\n        },\n        {\n            \"date_stamp\": \"2020-05-17\",\n            \"cnt_confirmed\": 1486757,\n            \"cnt_death\": 89562,\n            \"cnt_recovered\": 272265\n        },\n        {\n            \"date_stamp\": \"2020-05-18\",\n            \"cnt_confirmed\": 1508308,\n            \"cnt_death\": 90347,\n            \"cnt_recovered\": 283178\n        },\n        {\n            \"date_stamp\": \"2020-05-19\",\n            \"cnt_confirmed\": 1528568,\n            \"cnt_death\": 91921,\n            \"cnt_recovered\": 289392\n        },\n        {\n            \"date_stamp\": \"2020-05-20\",\n            \"cnt_confirmed\": 1551853,\n            \"cnt_death\": 93439,\n            \"cnt_recovered\": 294312\n        },\n        {\n            \"date_stamp\": \"2020-05-21\",\n            \"cnt_confirmed\": 1577147,\n            \"cnt_death\": 94702,\n            \"cnt_recovered\": 298418\n        },\n        {\n            \"date_stamp\": \"2020-05-22\",\n            \"cnt_confirmed\": 1600937,\n            \"cnt_death\": 95979,\n            \"cnt_recovered\": 350135\n        },\n        {\n            \"date_stamp\": \"2020-05-23\",\n            \"cnt_confirmed\": 1622612,\n            \"cnt_death\": 97087,\n            \"cnt_recovered\": 361239\n        },\n        {\n            \"date_stamp\": \"2020-05-24\",\n            \"cnt_confirmed\": 1643246,\n            \"cnt_death\": 97720,\n            \"cnt_recovered\": 366736\n        },\n        {\n            \"date_stamp\": \"2020-05-25\",\n            \"cnt_confirmed\": 1662302,\n            \"cnt_death\": 98220,\n            \"cnt_recovered\": 379157\n        },\n        {\n            \"date_stamp\": \"2020-05-26\",\n            \"cnt_confirmed\": 1680913,\n            \"cnt_death\": 98913,\n            \"cnt_recovered\": 384902\n        },\n        {\n            \"date_stamp\": \"2020-05-27\",\n            \"cnt_confirmed\": 1699176,\n            \"cnt_death\": 100418,\n            \"cnt_recovered\": 391508\n        },\n        {\n            \"date_stamp\": \"2020-05-28\",\n            \"cnt_confirmed\": 1721753,\n            \"cnt_death\": 101616,\n            \"cnt_recovered\": 399991\n        },\n        {\n            \"date_stamp\": \"2020-05-29\",\n            \"cnt_confirmed\": 1746019,\n            \"cnt_death\": 102809,\n            \"cnt_recovered\": 406446\n        },\n        {\n            \"date_stamp\": \"2020-05-30\",\n            \"cnt_confirmed\": 1770165,\n            \"cnt_death\": 103776,\n            \"cnt_recovered\": 416461\n        },\n        {\n            \"date_stamp\": \"2020-05-31\",\n            \"cnt_confirmed\": 1790172,\n            \"cnt_death\": 104381,\n            \"cnt_recovered\": 444758\n        },\n        {\n            \"date_stamp\": \"2020-06-01\",\n            \"cnt_confirmed\": 1811360,\n            \"cnt_death\": 105165,\n            \"cnt_recovered\": 458231\n        },\n        {\n            \"date_stamp\": \"2020-06-02\",\n            \"cnt_confirmed\": 1831821,\n            \"cnt_death\": 106180,\n            \"cnt_recovered\": 463868\n        },\n        {\n            \"date_stamp\": \"2020-06-03\",\n            \"cnt_confirmed\": 1851520,\n            \"cnt_death\": 107175,\n            \"cnt_recovered\": 479258\n        },\n        {\n            \"date_stamp\": \"2020-06-04\",\n            \"cnt_confirmed\": 1872660,\n            \"cnt_death\": 108211,\n            \"cnt_recovered\": 485002\n        },\n        {\n            \"date_stamp\": \"2020-06-05\",\n            \"cnt_confirmed\": 1897380,\n            \"cnt_death\": 109132,\n            \"cnt_recovered\": 491706\n        },\n        {\n            \"date_stamp\": \"2020-06-06\",\n            \"cnt_confirmed\": 1920061,\n            \"cnt_death\": 109802,\n            \"cnt_recovered\": 500849\n        },\n        {\n            \"date_stamp\": \"2020-06-07\",\n            \"cnt_confirmed\": 1942363,\n            \"cnt_death\": 110514,\n            \"cnt_recovered\": 506367\n        },\n        {\n            \"date_stamp\": \"2020-06-08\",\n            \"cnt_confirmed\": 1960897,\n            \"cnt_death\": 110990,\n            \"cnt_recovered\": 518522\n        },\n        {\n            \"date_stamp\": \"2020-06-09\",\n            \"cnt_confirmed\": 1979411,\n            \"cnt_death\": 111989,\n            \"cnt_recovered\": 524855\n        },\n        {\n            \"date_stamp\": \"2020-06-10\",\n            \"cnt_confirmed\": 2000464,\n            \"cnt_death\": 112924,\n            \"cnt_recovered\": 533504\n        }\n    ]\n}"
								},
								{
									"name": "COVID-19 cases over time in the U.S. (MTNA Simple Dataset format)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/rds/api/query/{{catalogId}}/{{dataProductId}}/select?cols=date_stamp,cnt_confirmed,cnt_death,cnt_recovered&where=(iso3166_1=US)&limit=5000&metadata =true",
											"host": [
												"{{host}}"
											],
											"path": [
												"rds",
												"api",
												"query",
												"{{catalogId}}",
												"{{dataProductId}}",
												"select"
											],
											"query": [
												{
													"key": "cols",
													"value": "date_stamp,cnt_confirmed,cnt_death,cnt_recovered",
													"description": "We want to see cases on a timeline, so lets make date the dimension, and plot counts of confirmed, deaths, and recovered cases.\n"
												},
												{
													"key": "where",
													"value": "(iso3166_1=US)",
													"description": "Let's limit it to just the US. Want to see another country, change this to the country code of your choice"
												},
												{
													"key": "format",
													"value": "amcharts",
													"description": "Our desired charting library. Other available formats are  `PLOTLY_BAR`, `PLOTLY_BOXPLOT`, `PLOTLY_BUBBLE`, `PLOTLY_HIST`, `PLOTLY_PIE`, `GCHARTS`",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "5000",
													"description": "Limit results to 5000"
												},
												{
													"key": "metadata ",
													"value": "true",
													"description": "This tells RDS to return information about each of the variables in the records to give more context to the data."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 18 Jun 2020 20:18:37 GMT"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"info\": {\n        \"cached\": false,\n        \"columnCount\": 4,\n        \"columnOffset\": 0,\n        \"end\": \"2020-06-18T13:59:03.229Z\",\n        \"includeMetadata\": false,\n        \"moreColumns\": false,\n        \"moreRows\": false,\n        \"notes\": [\n            \"The total requested number of cells exceeded the maximum cells allowed in a single call [10000]. To address this the record limit was automatically adjusted to 2500.\"\n        ],\n        \"postQueryTime\": 0,\n        \"preQueryTime\": 161,\n        \"queryTime\": 21,\n        \"rowLimit\": 2500,\n        \"rowOffset\": 0,\n        \"start\": \"2020-06-18T13:59:03.047Z\",\n        \"totalProcessingTime\": 182\n    },\n    \"records\": [\n        [\n            \"2020-01-22\",\n            1,\n            0,\n            0\n        ],\n        [\n            \"2020-01-23\",\n            1,\n            0,\n            0\n        ],\n        [\n            \"2020-01-24\",\n            2,\n            0,\n            0\n        ],\n        [\n            \"2020-01-25\",\n            2,\n            0,\n            0\n        ],\n        [\n            \"2020-01-26\",\n            5,\n            0,\n            0\n        ],\n        [\n            \"2020-01-27\",\n            5,\n            0,\n            0\n        ],\n        [\n            \"2020-01-28\",\n            5,\n            0,\n            0\n        ],\n        [\n            \"2020-01-29\",\n            5,\n            0,\n            0\n        ],\n        [\n            \"2020-01-30\",\n            5,\n            0,\n            0\n        ],\n        [\n            \"2020-01-31\",\n            6,\n            0,\n            0\n        ],\n        [\n            \"2020-02-01\",\n            8,\n            0,\n            0\n        ],\n        [\n            \"2020-02-02\",\n            8,\n            0,\n            0\n        ],\n        [\n            \"2020-02-03\",\n            11,\n            0,\n            0\n        ],\n        [\n            \"2020-02-04\",\n            11,\n            0,\n            0\n        ],\n        [\n            \"2020-02-05\",\n            12,\n            0,\n            0\n        ],\n        [\n            \"2020-02-06\",\n            12,\n            0,\n            0\n        ],\n        [\n            \"2020-02-07\",\n            12,\n            0,\n            0\n        ],\n        [\n            \"2020-02-08\",\n            12,\n            0,\n            0\n        ],\n        [\n            \"2020-02-09\",\n            12,\n            0,\n            3\n        ],\n        [\n            \"2020-02-10\",\n            12,\n            0,\n            3\n        ],\n        [\n            \"2020-02-11\",\n            13,\n            0,\n            3\n        ],\n        [\n            \"2020-02-12\",\n            13,\n            0,\n            3\n        ],\n        [\n            \"2020-02-13\",\n            15,\n            0,\n            3\n        ],\n        [\n            \"2020-02-14\",\n            15,\n            0,\n            3\n        ],\n        [\n            \"2020-02-15\",\n            15,\n            0,\n            3\n        ],\n        [\n            \"2020-02-16\",\n            15,\n            0,\n            3\n        ],\n        [\n            \"2020-02-17\",\n            15,\n            0,\n            3\n        ],\n        [\n            \"2020-02-18\",\n            15,\n            0,\n            3\n        ],\n        [\n            \"2020-02-19\",\n            15,\n            0,\n            3\n        ],\n        [\n            \"2020-02-20\",\n            15,\n            0,\n            3\n        ],\n        [\n            \"2020-02-21\",\n            35,\n            0,\n            5\n        ],\n        [\n            \"2020-02-22\",\n            35,\n            0,\n            5\n        ],\n        [\n            \"2020-02-23\",\n            35,\n            0,\n            5\n        ],\n        [\n            \"2020-02-24\",\n            53,\n            0,\n            5\n        ],\n        [\n            \"2020-02-25\",\n            53,\n            0,\n            6\n        ],\n        [\n            \"2020-02-26\",\n            59,\n            0,\n            6\n        ],\n        [\n            \"2020-02-27\",\n            60,\n            0,\n            6\n        ],\n        [\n            \"2020-02-28\",\n            62,\n            0,\n            7\n        ],\n        [\n            \"2020-02-29\",\n            70,\n            1,\n            7\n        ],\n        [\n            \"2020-03-01\",\n            76,\n            1,\n            7\n        ],\n        [\n            \"2020-03-02\",\n            101,\n            6,\n            7\n        ],\n        [\n            \"2020-03-03\",\n            122,\n            7,\n            8\n        ],\n        [\n            \"2020-03-04\",\n            153,\n            11,\n            8\n        ],\n        [\n            \"2020-03-05\",\n            221,\n            12,\n            8\n        ],\n        [\n            \"2020-03-06\",\n            278,\n            14,\n            8\n        ],\n        [\n            \"2020-03-07\",\n            417,\n            17,\n            8\n        ],\n        [\n            \"2020-03-08\",\n            537,\n            21,\n            8\n        ],\n        [\n            \"2020-03-09\",\n            605,\n            22,\n            8\n        ],\n        [\n            \"2020-03-10\",\n            959,\n            28,\n            8\n        ],\n        [\n            \"2020-03-11\",\n            1281,\n            36,\n            8\n        ],\n        [\n            \"2020-03-12\",\n            1663,\n            40,\n            12\n        ],\n        [\n            \"2020-03-13\",\n            2179,\n            47,\n            12\n        ],\n        [\n            \"2020-03-14\",\n            2726,\n            54,\n            12\n        ],\n        [\n            \"2020-03-15\",\n            3499,\n            63,\n            12\n        ],\n        [\n            \"2020-03-16\",\n            4632,\n            85,\n            17\n        ],\n        [\n            \"2020-03-17\",\n            6421,\n            108,\n            17\n        ],\n        [\n            \"2020-03-18\",\n            7786,\n            118,\n            106\n        ],\n        [\n            \"2020-03-19\",\n            13680,\n            200,\n            108\n        ],\n        [\n            \"2020-03-20\",\n            19101,\n            244,\n            147\n        ],\n        [\n            \"2020-03-21\",\n            25514,\n            307,\n            171\n        ],\n        [\n            \"2020-03-22\",\n            33848,\n            427,\n            0\n        ],\n        [\n            \"2020-03-23\",\n            43663,\n            552,\n            0\n        ],\n        [\n            \"2020-03-24\",\n            53736,\n            706,\n            348\n        ],\n        [\n            \"2020-03-25\",\n            65778,\n            942,\n            361\n        ],\n        [\n            \"2020-03-26\",\n            83836,\n            1209,\n            681\n        ],\n        [\n            \"2020-03-27\",\n            101657,\n            1581,\n            869\n        ],\n        [\n            \"2020-03-28\",\n            121465,\n            2026,\n            1072\n        ],\n        [\n            \"2020-03-29\",\n            140909,\n            2467,\n            2665\n        ],\n        [\n            \"2020-03-30\",\n            161831,\n            2978,\n            5644\n        ],\n        [\n            \"2020-03-31\",\n            188172,\n            3873,\n            7024\n        ],\n        [\n            \"2020-04-01\",\n            213372,\n            4757,\n            8474\n        ],\n        [\n            \"2020-04-02\",\n            243599,\n            5926,\n            9001\n        ],\n        [\n            \"2020-04-03\",\n            275586,\n            7087,\n            9707\n        ],\n        [\n            \"2020-04-04\",\n            308853,\n            8407,\n            14652\n        ],\n        [\n            \"2020-04-05\",\n            337072,\n            9619,\n            17448\n        ],\n        [\n            \"2020-04-06\",\n            366667,\n            10783,\n            19581\n        ],\n        [\n            \"2020-04-07\",\n            396223,\n            12722,\n            21763\n        ],\n        [\n            \"2020-04-08\",\n            429052,\n            14695,\n            23559\n        ],\n        [\n            \"2020-04-09\",\n            461437,\n            16478,\n            25410\n        ],\n        [\n            \"2020-04-10\",\n            496535,\n            18586,\n            28790\n        ],\n        [\n            \"2020-04-11\",\n            526396,\n            20462,\n            31270\n        ],\n        [\n            \"2020-04-12\",\n            555313,\n            22019,\n            32988\n        ],\n        [\n            \"2020-04-13\",\n            580619,\n            23528,\n            43482\n        ],\n        [\n            \"2020-04-14\",\n            607670,\n            25831,\n            47763\n        ],\n        [\n            \"2020-04-15\",\n            636350,\n            28325,\n            52096\n        ],\n        [\n            \"2020-04-16\",\n            667801,\n            32916,\n            54703\n        ],\n        [\n            \"2020-04-17\",\n            699706,\n            36773,\n            58545\n        ],\n        [\n            \"2020-04-18\",\n            732197,\n            38664,\n            64840\n        ],\n        [\n            \"2020-04-19\",\n            759086,\n            40661,\n            70337\n        ],\n        [\n            \"2020-04-20\",\n            784326,\n            42094,\n            72329\n        ],\n        [\n            \"2020-04-21\",\n            812036,\n            44444,\n            75204\n        ],\n        [\n            \"2020-04-22\",\n            839675,\n            46583,\n            77366\n        ],\n        [\n            \"2020-04-23\",\n            869170,\n            49954,\n            80203\n        ],\n        [\n            \"2020-04-24\",\n            905333,\n            51949,\n            99079\n        ],\n        [\n            \"2020-04-25\",\n            938154,\n            53755,\n            100372\n        ],\n        [\n            \"2020-04-26\",\n            965783,\n            54881,\n            106988\n        ],\n        [\n            \"2020-04-27\",\n            988197,\n            56259,\n            111424\n        ],\n        [\n            \"2020-04-28\",\n            1012582,\n            58355,\n            115936\n        ],\n        [\n            \"2020-04-29\",\n            1039909,\n            60967,\n            120720\n        ],\n        [\n            \"2020-04-30\",\n            1069424,\n            62996,\n            153947\n        ],\n        [\n            \"2020-05-01\",\n            1103461,\n            64943,\n            164015\n        ],\n        [\n            \"2020-05-02\",\n            1132539,\n            66369,\n            175382\n        ],\n        [\n            \"2020-05-03\",\n            1158040,\n            67682,\n            180152\n        ],\n        [\n            \"2020-05-04\",\n            1180375,\n            68922,\n            187180\n        ],\n        [\n            \"2020-05-05\",\n            1204351,\n            71064,\n            189791\n        ],\n        [\n            \"2020-05-06\",\n            1228603,\n            73431,\n            189910\n        ],\n        [\n            \"2020-05-07\",\n            1257023,\n            75662,\n            195036\n        ],\n        [\n            \"2020-05-08\",\n            1283929,\n            77180,\n            198993\n        ],\n        [\n            \"2020-05-09\",\n            1309550,\n            78795,\n            212534\n        ],\n        [\n            \"2020-05-10\",\n            1329260,\n            79526,\n            216169\n        ],\n        [\n            \"2020-05-11\",\n            1347881,\n            80682,\n            232733\n        ],\n        [\n            \"2020-05-12\",\n            1369574,\n            82376,\n            230287\n        ],\n        [\n            \"2020-05-13\",\n            1390406,\n            84119,\n            243430\n        ],\n        [\n            \"2020-05-14\",\n            1417774,\n            85898,\n            246414\n        ],\n        [\n            \"2020-05-15\",\n            1442824,\n            87530,\n            250747\n        ],\n        [\n            \"2020-05-16\",\n            1467820,\n            88754,\n            268376\n        ],\n        [\n            \"2020-05-17\",\n            1486757,\n            89562,\n            272265\n        ],\n        [\n            \"2020-05-18\",\n            1508308,\n            90347,\n            283178\n        ],\n        [\n            \"2020-05-19\",\n            1528568,\n            91921,\n            289392\n        ],\n        [\n            \"2020-05-20\",\n            1551853,\n            93439,\n            294312\n        ],\n        [\n            \"2020-05-21\",\n            1577147,\n            94702,\n            298418\n        ],\n        [\n            \"2020-05-22\",\n            1600937,\n            95979,\n            350135\n        ],\n        [\n            \"2020-05-23\",\n            1622612,\n            97087,\n            361239\n        ],\n        [\n            \"2020-05-24\",\n            1643246,\n            97720,\n            366736\n        ],\n        [\n            \"2020-05-25\",\n            1662302,\n            98220,\n            379157\n        ],\n        [\n            \"2020-05-26\",\n            1680913,\n            98913,\n            384902\n        ],\n        [\n            \"2020-05-27\",\n            1699176,\n            100418,\n            391508\n        ],\n        [\n            \"2020-05-28\",\n            1721753,\n            101616,\n            399991\n        ],\n        [\n            \"2020-05-29\",\n            1746019,\n            102809,\n            406446\n        ],\n        [\n            \"2020-05-30\",\n            1770165,\n            103776,\n            416461\n        ],\n        [\n            \"2020-05-31\",\n            1790172,\n            104381,\n            444758\n        ],\n        [\n            \"2020-06-01\",\n            1811360,\n            105165,\n            458231\n        ],\n        [\n            \"2020-06-02\",\n            1831821,\n            106180,\n            463868\n        ],\n        [\n            \"2020-06-03\",\n            1851520,\n            107175,\n            479258\n        ],\n        [\n            \"2020-06-04\",\n            1872660,\n            108211,\n            485002\n        ],\n        [\n            \"2020-06-05\",\n            1897380,\n            109132,\n            491706\n        ],\n        [\n            \"2020-06-06\",\n            1920061,\n            109802,\n            500849\n        ],\n        [\n            \"2020-06-07\",\n            1942363,\n            110514,\n            506367\n        ],\n        [\n            \"2020-06-08\",\n            1960897,\n            110990,\n            518522\n        ],\n        [\n            \"2020-06-09\",\n            1979411,\n            111989,\n            524855\n        ],\n        [\n            \"2020-06-10\",\n            2000464,\n            112924,\n            533504\n        ]\n    ],\n    \"totals\": []\n}"
								}
							]
						},
						{
							"name": "Visualize positive and total COVID-19 tests per state",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d2e67764-fd4e-4b6c-9ef9-d3641998d2f0",
										"exec": [
											"let template = `",
											"    <script src=\"https://www.amcharts.com/lib/4/core.js\"></script>",
											"    <script src=\"https://www.amcharts.com/lib/4/charts.js\"></script>",
											"    <div id=\"line-chart\"></div>",
											"    <script>",
											"        pm.getData( function (error, data) {",
											"            am4core.ready(function() {",
											"                var chart = am4core.create(\"line-chart\", am4charts.XYChart);",
											"                chart.data = data.response.dataProvider;",
											"                chart.fontSize = '1em';",
											"                chart.maskBullets = false;",
											"                chart.paddingBottom = 0;",
											"                chart.paddingLeft = 0;",
											"                chart.paddingRight = 50;",
											"                chart.paddingTop = 0;",
											"                chart.zoomOutButton.disabled = true;",
											"",
											"                // Create axes",
											"                var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());",
											"                categoryAxis.dataFields.category = \"us_state_postal\";",
											"                categoryAxis.title.text = \"State\";",
											"",
											"                var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());",
											"                valueAxis.renderer.opposite = true;",
											"                valueAxis.renderer.grid.template.stroke = am4core.color('#000000');",
											"                valueAxis.renderer.grid.template.strokeOpacity = 0.25;",
											"                valueAxis.renderer.minGridDistance = 30;",
											"                valueAxis.renderer.maxLabelPosition = 0.98;",
											"                valueAxis.renderer.baseGrid.disabled = true;",
											"                valueAxis.renderer.inside = false;",
											"                valueAxis.renderer.labels.template.verticalCenter = 'bottom';",
											"                valueAxis.renderer.labels.template.fill = am4core.color('#000');",
											"                valueAxis.renderer.labels.template.padding(2, 2, 2, 2);",
											"",
											"                // create a bar series for the cnt_tested_pos values",
											"                var series = chart.series.push(new am4charts.ColumnSeries3D());",
											"                series.dataFields.valueY = \"cnt_tested_pos\";",
											"                series.dataFields.categoryX = \"us_state_postal\";",
											"                series.name = \"Positive Tests\";",
											"                series.tooltipText = \"{name}: [bold]{valueY}[/]\";",
											"",
											"                //create a bar series for the cnt_tested values",
											"                var series2 = chart.series.push(new am4charts.ColumnSeries3D());",
											"                series2.dataFields.valueY = \"cnt_tested\";",
											"                series2.dataFields.categoryX = \"us_state_postal\";",
											"                series2.name = \"Total Tests\";",
											"                series2.tooltipText = \"{name}: [bold]{valueY}[/]\";",
											"",
											"                //enable the tooltip",
											"                series.tooltip.pointerOrientation = \"vertical\";",
											"",
											"                //add a legend",
											"                chart.legend = new am4charts.Legend();",
											"",
											"                chart.cursor = new am4charts.XYCursor();",
											"            });",
											"        });",
											"    </script>",
											"`;",
											"",
											"pm.visualizer.set(template, {",
											"    response: pm.response.json()",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://covid19.richdataservices.com/rds/api/query/us/covidtracking_state/select?where=(us_state_postal=NY OR us_state_postal=CA OR us_state_postal=TX) AND (date_stamp=2020-06-17)&cols=us_state_postal,cnt_tested_pos,cnt_tested&format=amcharts",
									"protocol": "https",
									"host": [
										"covid19",
										"richdataservices",
										"com"
									],
									"path": [
										"rds",
										"api",
										"query",
										"us",
										"covidtracking_state",
										"select"
									],
									"query": [
										{
											"key": "where",
											"value": "(us_state_postal=NY OR us_state_postal=CA OR us_state_postal=TX) AND (date_stamp=2020-06-17)",
											"description": "We can input any U.S. states we want to compare using the `us_state_postal code`, and will limit the results to one day in time using the `date_stamp` variable. \n\nWe can see the codes for the us_state_postal classification by sending the following request. Note that you will need to use the code's `codeValue` property and not the`name` property when querying. `http://covid19.richdataservices.com/rds/api/catalog/us/covidtracking_state/classification/us_state_postal/codes`"
										},
										{
											"key": "cols",
											"value": "us_state_postal,cnt_tested_pos,cnt_tested",
											"description": "We are interested in the total number of tests (`cnt_tested`) and total number of positive tests (`cnt_tested_pos`) for each state (`us_state_postal`)."
										},
										{
											"key": "format",
											"value": "amcharts",
											"description": "Our desired charting library, used to create the visualization you see in the visualization tab."
										}
									]
								},
								"description": "The COVID Tracking Project API pulls data from different state and national sources. Here, we are comparing the total number of positive COVID-19 tests to the total number of total COVID-19 tests performed. The visualization below is available in the \"Visualize\" tab if you're running the collection in the Postman app. We have also provided an example response in the default MTNA Simple Dataset format, if you are interested in using the data for other purposes.  \n\n\n<img src=\"https://mtna.s3.amazonaws.com/rds/images/Postman/stateComparisonBarChart.png\" alt=\"barChart\" width=\"800\"/>"
							},
							"response": [
								{
									"name": "Positive vs total tests per state (MTNA Simple Dataset format)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://covid19.richdataservices.com/rds/api/query/us/covidtracking_state/select?where=(us_state_postal=NY OR us_state_postal=CA OR us_state_postal=TX) AND (date_stamp=2020-06-17)&cols=us_state_postal,cnt_tested_pos,cnt_tested&metadata=true",
											"protocol": "https",
											"host": [
												"covid19",
												"richdataservices",
												"com"
											],
											"path": [
												"rds",
												"api",
												"query",
												"us",
												"covidtracking_state",
												"select"
											],
											"query": [
												{
													"key": "where",
													"value": "(us_state_postal=NY OR us_state_postal=CA OR us_state_postal=TX) AND (date_stamp=2020-06-17)",
													"description": "We can input any U.S. states we want to compare using the us_state_postal code, and will limit the results to one day in time using the date_stamp variable. "
												},
												{
													"key": "cols",
													"value": "us_state_postal,cnt_tested_pos,cnt_tested",
													"description": "We are interested in the total number of tests (cnt_tested) and total number of positive tests (cnt_tested_pos) for each state (us_state_postal)."
												},
												{
													"key": "format",
													"value": "amcharts",
													"description": "Our desired charting library, used to create the visualization you see in the visualization tab.",
													"disabled": true
												},
												{
													"key": "metadata",
													"value": "true",
													"description": "This tells RDS to return information about each of the variables in the records to give more context to the data."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 18 Jun 2020 20:16:29 GMT"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"info\": {\n        \"cached\": false,\n        \"columnCount\": 3,\n        \"columnOffset\": 0,\n        \"end\": \"2020-06-18T20:16:29.305Z\",\n        \"includeMetadata\": true,\n        \"moreColumns\": false,\n        \"moreRows\": false,\n        \"notes\": [],\n        \"postQueryTime\": 0,\n        \"preQueryTime\": 239,\n        \"queryTime\": 48,\n        \"rowLimit\": 20,\n        \"rowOffset\": 0,\n        \"start\": \"2020-06-18T20:16:29.018Z\",\n        \"totalProcessingTime\": 287\n    },\n    \"records\": [\n        [\n            \"CA\",\n            157015,\n            2997988\n        ],\n        [\n            \"NY\",\n            385142,\n            3111119\n        ],\n        [\n            \"TX\",\n            96335,\n            1369638\n        ]\n    ],\n    \"totals\": [],\n    \"variables\": [\n        {\n            \"classificationUri\": \"2baf96af-3b02-4339-904c-6410daa7530f\",\n            \"dataType\": \"TEXT\",\n            \"description\": \"The <a href=\\\"https://en.wikipedia.org/wiki/List_of_U.S._state_abbreviations\\\"  target=\\\"_blank\\\">U.S. State 2-letter postal code</a> of the state this record represents.\",\n            \"fixedStorageWidth\": 2,\n            \"format\": \"\",\n            \"id\": \"us_state_postal\",\n            \"index\": 4,\n            \"isDimension\": true,\n            \"isMeasure\": false,\n            \"label\": \"U.S. State Postal Code\",\n            \"name\": \"us_state_postal\",\n            \"reference\": false,\n            \"revisionNumber\": 0,\n            \"storageType\": \"VARCHAR\",\n            \"uri\": \"066c95d9-f5a3-4d56-8e4b-42c0f4b1e050\"\n        },\n        {\n            \"dataType\": \"NUMERIC\",\n            \"decimals\": 0,\n            \"description\": \"Total cumulative positive test results for this state leading up to and including this date.\",\n            \"fixedStorageWidth\": 32,\n            \"format\": \"\",\n            \"id\": \"cnt_tested_pos\",\n            \"index\": 6,\n            \"isMeasure\": true,\n            \"label\": \"Tested Positive Count\",\n            \"name\": \"cnt_tested_pos\",\n            \"reference\": false,\n            \"revisionNumber\": 0,\n            \"storageType\": \"INT\",\n            \"uri\": \"a8f1bf07-6962-419c-b0f7-ab200f19258d\"\n        },\n        {\n            \"dataType\": \"NUMERIC\",\n            \"decimals\": 0,\n            \"description\": \"Calculated value (cnt_tested_pos + cnt_tested_neg) of total test results.\",\n            \"fixedStorageWidth\": 32,\n            \"format\": \"\",\n            \"id\": \"cnt_tested\",\n            \"index\": 21,\n            \"isMeasure\": true,\n            \"label\": \"Tested Count\",\n            \"name\": \"cnt_tested\",\n            \"reference\": false,\n            \"revisionNumber\": 0,\n            \"storageType\": \"INT\",\n            \"uri\": \"ed9ed73f-6625-48b7-a0ba-10517ce60370\"\n        }\n    ]\n}"
								},
								{
									"name": "Positive vs total tests per state (amCharts format)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://covid19.richdataservices.com/rds/api/query/us/covidtracking_state/select?where=(us_state_postal=NY OR us_state_postal=CA OR us_state_postal=TX) AND (date_stamp=2020-06-17)&cols=us_state_postal,cnt_tested_pos,cnt_tested&format=amcharts",
											"protocol": "https",
											"host": [
												"covid19",
												"richdataservices",
												"com"
											],
											"path": [
												"rds",
												"api",
												"query",
												"us",
												"covidtracking_state",
												"select"
											],
											"query": [
												{
													"key": "where",
													"value": "(us_state_postal=NY OR us_state_postal=CA OR us_state_postal=TX) AND (date_stamp=2020-06-17)",
													"description": "We can input any U.S. states we want to compare using the us_state_postal code, and will limit the results to one day in time using the date_stamp variable. "
												},
												{
													"key": "cols",
													"value": "us_state_postal,cnt_tested_pos,cnt_tested",
													"description": "We are interested in the total number of tests (cnt_tested) and total number of positive tests (cnt_tested_pos) for each state (us_state_postal)."
												},
												{
													"key": "format",
													"value": "amcharts",
													"description": "Our desired charting library, used to create the visualization you see in the visualization tab."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 18 Jun 2020 20:17:12 GMT"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"dataProvider\": [\n        {\n            \"us_state_postal\": \"CA\",\n            \"cnt_tested_pos\": 157015,\n            \"cnt_tested\": 2997988\n        },\n        {\n            \"us_state_postal\": \"NY\",\n            \"cnt_tested_pos\": 385142,\n            \"cnt_tested\": 3111119\n        },\n        {\n            \"us_state_postal\": \"TX\",\n            \"cnt_tested_pos\": 96335,\n            \"cnt_tested\": 1369638\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Ohio COVID cases for males 50+",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://covid19.richdataservices.com/rds/api/query/us_oh/oh_doh_cases/select?count=true&where=(sex=1) AND (age_group=50 OR age_group=60 OR age_group=70 OR age_group=80)&metadata=true",
									"protocol": "https",
									"host": [
										"covid19",
										"richdataservices",
										"com"
									],
									"path": [
										"rds",
										"api",
										"query",
										"us_oh",
										"oh_doh_cases",
										"select"
									],
									"query": [
										{
											"key": "count",
											"value": "true",
											"description": "Receive a count of the records. This will be displayed as `rowCount` in the returned \"info\" object"
										},
										{
											"key": "where",
											"value": "(sex=1) AND (age_group=50 OR age_group=60 OR age_group=70 OR age_group=80)",
											"description": "Using the AND and OR operators, we are telling RDS that we want records where the sex is male and the age falls into one of our specified age groups.  \n\nWe can see the codes for thes age group classification by sending the following request. Note that you will need to use the code's`codeValue` property and not the`name` property when querying. `http://covid19.richdataservices.com/rds/api/catalog/us_oh/oh_doh_cases/classification/age_group/codes`"
										},
										{
											"key": "metadata",
											"value": "true",
											"description": "This tells RDS to return information about each of the variables in the records to give more context to the data."
										}
									]
								},
								"description": "This request demonstrates how RDS can automatically generate a count of all of the records that meet our criteria. In this data set from the Ohio Department of Health, we are able to zero in on a specific demographic of cases: individuals who are male and age 50 or older. Try out this query in the [RDS Explorer](https://covid19.richdataservices.com/rds-explorer/explore/us_oh/oh_doh_cases/data?collimit=25&coloffset=0&count=true&offset=0&limit=25&where=(sex%3D1)%20AND%20(age_group%3D50%20OR%20age_group%3D60%20OR%20age_group%3D70%20OR%20age_group%3D80)?utm_source=postman&utm_medium=postmanlabs&utm_campaign=covid_19_apis)."
							},
							"response": [
								{
									"name": "Ohio COVID cases for males 50+",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://covid19.richdataservices.com/rds/api/query/us_oh/oh_doh_cases/select?count=true&where=(sex=1) AND (age_group=50 OR age_group=60 OR age_group=70 OR age_group=80)&metadata=true",
											"protocol": "https",
											"host": [
												"covid19",
												"richdataservices",
												"com"
											],
											"path": [
												"rds",
												"api",
												"query",
												"us_oh",
												"oh_doh_cases",
												"select"
											],
											"query": [
												{
													"key": "count",
													"value": "true",
													"description": "Receive a count of the records. This will be displayed as `rowCount` in the returned \"info\" object"
												},
												{
													"key": "where",
													"value": "(sex=1) AND (age_group=50 OR age_group=60 OR age_group=70 OR age_group=80)",
													"description": "Using the AND and OR operators, we are telling RDS that we want records where the sex is male and the age falls into one of our specified age groups. We can see the codes for these classifications by calling `http://covid19.richdataservices.com/rds/api/catalog/us_oh/oh_doh_cases/classification/age_group/codes`"
												},
												{
													"key": "metadata",
													"value": "true",
													"description": "This tells RDS to return information about each of the variables in the records to give more context to the data."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 18 Jun 2020 15:39:06 GMT"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"info\": {\n        \"cached\": false,\n        \"columnCount\": 8,\n        \"columnOffset\": 0,\n        \"end\": \"2020-06-18T15:39:06.511Z\",\n        \"includeMetadata\": true,\n        \"moreColumns\": false,\n        \"moreRows\": true,\n        \"notes\": [],\n        \"postQueryTime\": 8,\n        \"preQueryTime\": 58,\n        \"queryTime\": 78,\n        \"rowCount\": 6695,\n        \"rowLimit\": 20,\n        \"rowOffset\": 0,\n        \"start\": \"2020-06-18T15:39:06.367Z\",\n        \"totalProcessingTime\": 144\n    },\n    \"records\": [\n        [\n            \"2020-01-10\",\n            \"39113\",\n            \"1\",\n            \"60\",\n            1,\n            0,\n            0,\n            null\n        ],\n        [\n            \"2020-01-15\",\n            \"39025\",\n            \"1\",\n            \"70\",\n            1,\n            0,\n            0,\n            null\n        ],\n        [\n            \"2020-01-20\",\n            \"39153\",\n            \"1\",\n            \"50\",\n            1,\n            0,\n            0,\n            null\n        ],\n        [\n            \"2020-01-26\",\n            \"39109\",\n            \"1\",\n            \"60\",\n            1,\n            0,\n            0,\n            null\n        ],\n        [\n            \"2020-01-26\",\n            \"39091\",\n            \"1\",\n            \"50\",\n            1,\n            0,\n            0,\n            null\n        ],\n        [\n            \"2020-01-27\",\n            \"39165\",\n            \"1\",\n            \"50\",\n            1,\n            0,\n            0,\n            null\n        ],\n        [\n            \"2020-01-31\",\n            \"39099\",\n            \"1\",\n            \"60\",\n            1,\n            0,\n            0,\n            null\n        ],\n        [\n            \"2020-02-01\",\n            \"39153\",\n            \"1\",\n            \"60\",\n            1,\n            0,\n            0,\n            null\n        ],\n        [\n            \"2020-02-01\",\n            \"39103\",\n            \"1\",\n            \"70\",\n            1,\n            0,\n            0,\n            null\n        ],\n        [\n            \"2020-02-01\",\n            \"39021\",\n            \"1\",\n            \"60\",\n            1,\n            0,\n            0,\n            null\n        ],\n        [\n            \"2020-02-04\",\n            \"39113\",\n            \"1\",\n            \"60\",\n            1,\n            0,\n            0,\n            null\n        ],\n        [\n            \"2020-02-08\",\n            \"39159\",\n            \"1\",\n            \"50\",\n            1,\n            0,\n            0,\n            null\n        ],\n        [\n            \"2020-02-10\",\n            \"39003\",\n            \"1\",\n            \"60\",\n            1,\n            0,\n            0,\n            null\n        ],\n        [\n            \"2020-02-10\",\n            \"39043\",\n            \"1\",\n            \"80\",\n            1,\n            0,\n            0,\n            null\n        ],\n        [\n            \"2020-02-12\",\n            \"39043\",\n            \"1\",\n            \"60\",\n            1,\n            0,\n            0,\n            null\n        ],\n        [\n            \"2020-02-12\",\n            \"39113\",\n            \"1\",\n            \"60\",\n            1,\n            0,\n            1,\n            null\n        ],\n        [\n            \"2020-02-15\",\n            \"39035\",\n            \"1\",\n            \"60\",\n            1,\n            0,\n            1,\n            null\n        ],\n        [\n            \"2020-02-15\",\n            \"39113\",\n            \"1\",\n            \"60\",\n            1,\n            0,\n            0,\n            null\n        ],\n        [\n            \"2020-02-16\",\n            \"39103\",\n            \"1\",\n            \"50\",\n            1,\n            0,\n            0,\n            null\n        ],\n        [\n            \"2020-02-19\",\n            \"39095\",\n            \"1\",\n            \"50\",\n            1,\n            0,\n            0,\n            null\n        ]\n    ],\n    \"totals\": [],\n    \"variables\": [\n        {\n            \"dataType\": \"DATE\",\n            \"description\": \"Date the counts were reported.\",\n            \"fixedStorageWidth\": 0,\n            \"format\": \"YYYY-MM-DD (<a href=\\\"https://en.wikipedia.org/wiki/ISO_8601\\\" target=\\\"_blank\\\">ISO 8601</a>)\",\n            \"id\": \"date_stamp\",\n            \"index\": 1,\n            \"isDimension\": true,\n            \"isMeasure\": false,\n            \"label\": \"Date Reported\",\n            \"name\": \"date_stamp\",\n            \"reference\": false,\n            \"revisionNumber\": 0,\n            \"storageType\": \"DATE\",\n            \"uri\": \"842073b8-e59f-4003-8249-2f574e7323ae\"\n        },\n        {\n            \"classificationUri\": \"4eafde7a-d65e-4e42-9a0f-fcccd138fbec\",\n            \"dataType\": \"TEXT\",\n            \"description\": \"U.S. FIPS 6-4 county code (5-digit).\",\n            \"fixedStorageWidth\": 5,\n            \"format\": \"FIPS 6-4 County Code\",\n            \"id\": \"us_county_fips\",\n            \"index\": 2,\n            \"isDimension\": true,\n            \"isMeasure\": false,\n            \"label\": \"County Code (5-digit)\",\n            \"name\": \"us_county_fips\",\n            \"reference\": false,\n            \"revisionNumber\": 0,\n            \"storageType\": \"VARCHAR\",\n            \"uri\": \"644d3213-730b-46be-99ab-4d1b3a010a58\"\n        },\n        {\n            \"classificationUri\": \"14adaf0e-2139-41c3-9f8b-6e518ec788a6\",\n            \"dataType\": \"TEXT\",\n            \"description\": \"Sex of the individuals.\",\n            \"fixedStorageWidth\": 1,\n            \"format\": \"\",\n            \"id\": \"sex\",\n            \"index\": 3,\n            \"isDimension\": true,\n            \"isMeasure\": false,\n            \"label\": \"Sex\",\n            \"name\": \"sex\",\n            \"reference\": false,\n            \"revisionNumber\": 0,\n            \"storageType\": \"VARCHAR\",\n            \"uri\": \"0d5f2754-63ca-44fd-9c3c-4285e3c99e01\"\n        },\n        {\n            \"classificationUri\": \"f3bf04e8-db73-4559-9e37-0c6b719a02ab\",\n            \"dataType\": \"TEXT\",\n            \"description\": \"Age group that these individuals are a part of.\",\n            \"fixedStorageWidth\": 3,\n            \"format\": \"\",\n            \"id\": \"age_group\",\n            \"index\": 4,\n            \"isDimension\": true,\n            \"isMeasure\": false,\n            \"label\": \"Age Group\",\n            \"name\": \"age_group\",\n            \"reference\": false,\n            \"revisionNumber\": 0,\n            \"storageType\": \"VARCHAR\",\n            \"uri\": \"b46614ee-d0c8-4023-a77b-f4b208d5e781\"\n        },\n        {\n            \"dataType\": \"NUMERIC\",\n            \"decimals\": 0,\n            \"description\": \"Total number of confirmed cases for this age group, sex, and county on this specific date.\",\n            \"fixedStorageWidth\": 32,\n            \"format\": \"\",\n            \"id\": \"cnt_confirmed\",\n            \"index\": 5,\n            \"isMeasure\": true,\n            \"label\": \"Confirmed Count\",\n            \"name\": \"cnt_confirmed\",\n            \"reference\": false,\n            \"revisionNumber\": 0,\n            \"storageType\": \"INT\",\n            \"uri\": \"9736abaa-26b7-4653-b683-5d3d59044701\"\n        },\n        {\n            \"dataType\": \"NUMERIC\",\n            \"decimals\": 0,\n            \"description\": \"Total number of hospitalizations for this age group, sex, and county on this specific date.\",\n            \"fixedStorageWidth\": 32,\n            \"format\": \"\",\n            \"id\": \"cnt_hospitalized\",\n            \"index\": 6,\n            \"isMeasure\": true,\n            \"label\": \"Hospitalized Count\",\n            \"name\": \"cnt_hospitalized\",\n            \"reference\": false,\n            \"revisionNumber\": 0,\n            \"storageType\": \"INT\",\n            \"uri\": \"b205fbfb-5b9a-4821-87f3-80d80f741646\"\n        },\n        {\n            \"dataType\": \"NUMERIC\",\n            \"decimals\": 0,\n            \"description\": \"The total number of deaths for this age group, sex, and county on this specific date.\",\n            \"fixedStorageWidth\": 32,\n            \"format\": \"\",\n            \"id\": \"cnt_death\",\n            \"index\": 7,\n            \"isMeasure\": true,\n            \"label\": \"Deaths Count\",\n            \"name\": \"cnt_death\",\n            \"reference\": false,\n            \"revisionNumber\": 0,\n            \"storageType\": \"INT\",\n            \"uri\": \"d0fc2a3c-4f45-4833-9b02-829c4bd53261\"\n        },\n        {\n            \"dataType\": \"DATE\",\n            \"description\": \"Date of the death of the individuals represented by this record.\",\n            \"fixedStorageWidth\": 0,\n            \"format\": \"YYYY-MM-DD (<a href=\\\"https://en.wikipedia.org/wiki/ISO_8601\\\" target=\\\"_blank\\\">ISO 8601</a>)\",\n            \"id\": \"date_stamp_death\",\n            \"index\": 8,\n            \"isDimension\": true,\n            \"isMeasure\": false,\n            \"label\": \"Date of Death\",\n            \"name\": \"date_stamp_death\",\n            \"reference\": false,\n            \"revisionNumber\": 0,\n            \"storageType\": \"DATE\",\n            \"uri\": \"bf720259-3bd8-47ba-963c-a266ac94f4c4\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Build your own select query",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://host/api/query/{catalog}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
									"protocol": "http",
									"host": [
										"host"
									],
									"path": [
										"api",
										"query",
										"{catalog}",
										"{dataProductId}",
										"select"
									],
									"query": [
										{
											"key": "collimit",
											"value": "<integer>",
											"description": "Optional - Limits the number of columns returned."
										},
										{
											"key": "coloffset",
											"value": "<integer>",
											"description": "Optional - Determines which column to start at."
										},
										{
											"key": "cols",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
										},
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
										},
										{
											"key": "format",
											"value": "<format enum>",
											"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values:  `mtna`, `mtna_simple`, `amcharts`,`gcharts`, `plotly_bar`, `plotly_boxplot`, `plotly_bubble`, `plotly_hist`, `plotly_pie`, `plotly_scatter`"
										},
										{
											"key": "groupby",
											"value": "<string array>",
											"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Required - Flag specifying to inject codes into the returned records."
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "Optional - The limit of records to return."
										},
										{
											"key": "lock",
											"value": "<string>",
											"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first and listed out in\nDataSetInformation that is returned on the DataSet."
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Required - Flag specifying if metadata should be returned along side the data."
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "Optional - The record to start at."
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
										},
										{
											"key": "weights",
											"value": "<string array>",
											"description": "Optional - The IDs of variables to use as weights in the resulting data."
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
										}
									]
								},
								"description": "All of the available parameters are listed below. Combine them as you wish to compute, order, filter, and format the data to fit your needs. \n\nHaving trouble figuring out where to begin? Browse data products and play around with subgroups in the [RDS Explorer](https://covid19.richdataservices.com/rds-explorer/data-product-selection?utm_source=postman&utm_medium=postmanlabs&utm_campaign=covid_19_apis), and generate your API query from the UI, using the `< >` icon at the top right."
							},
							"response": [
								{
									"name": "MTNA Dataset",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://host/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
											"protocol": "http",
											"host": [
												"host"
											],
											"path": [
												"api",
												"query",
												"{catalogId}",
												"{dataProductId}",
												"select"
											],
											"query": [
												{
													"key": "collimit",
													"value": "<integer>",
													"description": "Optional - Limits the number of columns returned."
												},
												{
													"key": "coloffset",
													"value": "<integer>",
													"description": "Optional - Determines which column to start at."
												},
												{
													"key": "cols",
													"value": "<string>",
													"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
												},
												{
													"key": "count",
													"value": "<boolean>",
													"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
												},
												{
													"key": "format",
													"value": "<format enum>",
													"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
												},
												{
													"key": "groupby",
													"value": "<string array>",
													"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
												},
												{
													"key": "inject",
													"value": "<boolean>",
													"description": "Required - Flag specifying to inject codes into the returned records."
												},
												{
													"key": "limit",
													"value": "<number>",
													"description": "Optional - The limit of records to return."
												},
												{
													"key": "lock",
													"value": "<string>",
													"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
												},
												{
													"key": "metadata",
													"value": "<boolean>",
													"description": "Required - Flag specifying if metadata should be returned along side the data."
												},
												{
													"key": "offset",
													"value": "<number>",
													"description": "Optional - The record to start at."
												},
												{
													"key": "orderby",
													"value": "<string>",
													"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
												},
												{
													"key": "weights",
													"value": "<string array>",
													"description": "Optional - The IDs of variables to use as weights in the resulting data."
												},
												{
													"key": "where",
													"value": "<string>",
													"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
												}
											],
											"variable": [
												{
													"key": "catalogId",
													"value": "<string>",
													"description": "Required - The ID of the catalog that contains the data product."
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "Required - The ID of the data product to query."
												}
											]
										},
										"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
									},
									"status": "Successful request",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"summary\" : \"MTNA Dataset\",\n  \"value\" : {\n    \"classifications\" : [ ],\n    \"dataSetInformation\" : {\n      \"cached\" : false,\n      \"columnCount\" : 2,\n      \"columnOffset\" : 0,\n      \"end\" : \"2019-06-26T20:04:47.104Z\",\n      \"includeMetadata\" : true,\n      \"moreColumns\" : false,\n      \"moreRows\" : true,\n      \"notes\" : [ ],\n      \"postQueryTime\" : 0,\n      \"preQueryTime\" : 87,\n      \"queryTime\" : 1598,\n      \"rowLimit\" : 3,\n      \"rowOffset\" : 0,\n      \"start\" : \"2019-06-26T20:04:45.419Z\",\n      \"totalProcessingTime\" : 1685\n    },\n    \"recordLayout\" : {\n      \"isPrivate\" : false,\n      \"variables\" : [ {\n        \"dataType\" : \"NUMERIC\",\n        \"decimals\" : 0,\n        \"endPosition\" : 2,\n        \"fixedStorageWidth\" : 2,\n        \"id\" : \"CATS\",\n        \"isPrivate\" : false,\n        \"label\" : \"NUMBER OF CATS\",\n        \"name\" : \"CATS\",\n        \"questionText\" : \"How many cats do you have?\",\n        \"startPosition\" : 0,\n        \"storageType\" : \"INT\",\n        \"summaryStatistics\" : {\n          \"dateProduced\" : \"2019-06-21T12:32:28.034Z\",\n          \"sets\" : [ {\n            \"distinctSet\" : [ ],\n            \"max\" : 1,\n            \"mean\" : 1,\n            \"min\" : 1,\n            \"missing\" : 0,\n            \"populated\" : 662,\n            \"standardDeviation\" : 0,\n            \"weighted\" : false\n          } ]\n        },\n        \"uri\" : \"3893482a-3f43r5f-234rrf3\"\n      }, {\n        \"classificationUri\" : \"23984fu-deu490u-aa7\",\n        \"dataType\" : \"NUMERIC\",\n        \"decimals\" : 0,\n        \"endPosition\" : 17,\n        \"fixedStorageWidth\" : 1,\n        \"frequencies\" : {\n          \"dateProduced\" : \"2019-06-21T12:32:28.055Z\",\n          \"sets\" : [ {\n            \"map\" : {\n              \"1\" : 182,\n              \"2\" : 354,\n              \"3\" : 126\n            },\n            \"weighted\" : false,\n            \"weights\" : [ ]\n          } ]\n        },\n        \"id\" : \"DOGS\",\n        \"isPrivate\" : false,\n        \"label\" : \"NUMBER OF DOGS\",\n        \"name\" : \"DOGS\",\n        \"questionText\" : \"How many dogs do you have?\",\n        \"startPosition\" : 16,\n        \"storageType\" : \"INT\",\n        \"summaryStatistics\" : {\n          \"dateProduced\" : \"2019-06-21T12:32:28.055Z\",\n          \"sets\" : [ {\n            \"distinctSet\" : [ ],\n            \"max\" : 3,\n            \"mean\" : 1.915,\n            \"min\" : 1,\n            \"missing\" : 0,\n            \"populated\" : 662,\n            \"standardDeviation\" : 0.677,\n            \"weighted\" : false\n          } ]\n        },\n        \"uri\" : \"3893482a\"\n      } ]\n    },\n    \"records\" : [ {\n      \"data\" : [ {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 1,\n          \"variable\" : {\n            \"id\" : \"CATS\",\n            \"isPrivate\" : false,\n            \"name\" : \"CATS\",\n            \"uri\" : \"3893482a-3f43r5f-234rrf3\"\n          }\n        }\n      }, {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 2,\n          \"variable\" : {\n            \"id\" : \"DOGS\",\n            \"isPrivate\" : false,\n            \"name\" : \"DOGS\",\n            \"uri\" : \"3893482a\"\n          }\n        }\n      } ]\n    }, {\n      \"data\" : [ {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 1,\n          \"variable\" : {\n            \"id\" : \"CATS\",\n            \"isPrivate\" : false,\n            \"name\" : \"CATS\",\n            \"uri\" : \"3893482a-3f43r5f-234rrf3\"\n          }\n        }\n      }, {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 1,\n          \"variable\" : {\n            \"id\" : \"DOGS\",\n            \"isPrivate\" : false,\n            \"name\" : \"DOGS\",\n            \"uri\" : \"3893482a\"\n          }\n        }\n      } ]\n    }, {\n      \"data\" : [ {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 1,\n          \"variable\" : {\n            \"id\" : \"CATS\",\n            \"isPrivate\" : false,\n            \"name\" : \"CATS\",\n            \"uri\" : \"3893482a-3f43r5f-234rrf3\"\n          }\n        }\n      }, {\n        \"attributes\" : [ ],\n        \"value\" : {\n          \"value\" : 1,\n          \"variable\" : {\n            \"id\" : \"DOGS\",\n            \"isPrivate\" : false,\n            \"name\" : \"DOGS\",\n            \"uri\" : \"3893482a\"\n          }\n        }\n      } ]\n    } ],\n    \"totals\" : [ ],\n    \"variableGroups\" : [ ]\n  }\n}"
								},
								{
									"name": "Plotly Boxplot",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://host/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
											"protocol": "http",
											"host": [
												"host"
											],
											"path": [
												"api",
												"query",
												"{catalogId}",
												"{dataProductId}",
												"select"
											],
											"query": [
												{
													"key": "collimit",
													"value": "<integer>",
													"description": "Optional - Limits the number of columns returned."
												},
												{
													"key": "coloffset",
													"value": "<integer>",
													"description": "Optional - Determines which column to start at."
												},
												{
													"key": "cols",
													"value": "<string>",
													"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
												},
												{
													"key": "count",
													"value": "<boolean>",
													"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
												},
												{
													"key": "format",
													"value": "<format enum>",
													"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
												},
												{
													"key": "groupby",
													"value": "<string array>",
													"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
												},
												{
													"key": "inject",
													"value": "<boolean>",
													"description": "Required - Flag specifying to inject codes into the returned records."
												},
												{
													"key": "limit",
													"value": "<number>",
													"description": "Optional - The limit of records to return."
												},
												{
													"key": "lock",
													"value": "<string>",
													"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
												},
												{
													"key": "metadata",
													"value": "<boolean>",
													"description": "Required - Flag specifying if metadata should be returned along side the data."
												},
												{
													"key": "offset",
													"value": "<number>",
													"description": "Optional - The record to start at."
												},
												{
													"key": "orderby",
													"value": "<string>",
													"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
												},
												{
													"key": "weights",
													"value": "<string array>",
													"description": "Optional - The IDs of variables to use as weights in the resulting data."
												},
												{
													"key": "where",
													"value": "<string>",
													"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
												}
											],
											"variable": [
												{
													"key": "catalogId",
													"value": "<string>",
													"description": "Required - The ID of the catalog that contains the data product."
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "Required - The ID of the data product to query."
												}
											]
										},
										"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
									},
									"status": "Successful request",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"summary\" : \"Plotly Boxplot\",\n  \"value\" : {\n    \"y\" : [ 0, 1, 1, 2, 3, 5, 8, 13, 21 ],\n    \"boxpoints\" : \"all\",\n    \"jitter\" : 0.3,\n    \"pointpos\" : -1.8,\n    \"type\" : \"box\"\n  }\n}"
								},
								{
									"name": "AM Charts",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://host/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
											"protocol": "http",
											"host": [
												"host"
											],
											"path": [
												"api",
												"query",
												"{catalogId}",
												"{dataProductId}",
												"select"
											],
											"query": [
												{
													"key": "collimit",
													"value": "<integer>",
													"description": "Optional - Limits the number of columns returned."
												},
												{
													"key": "coloffset",
													"value": "<integer>",
													"description": "Optional - Determines which column to start at."
												},
												{
													"key": "cols",
													"value": "<string>",
													"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
												},
												{
													"key": "count",
													"value": "<boolean>",
													"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
												},
												{
													"key": "format",
													"value": "<format enum>",
													"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
												},
												{
													"key": "groupby",
													"value": "<string array>",
													"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
												},
												{
													"key": "inject",
													"value": "<boolean>",
													"description": "Required - Flag specifying to inject codes into the returned records."
												},
												{
													"key": "limit",
													"value": "<number>",
													"description": "Optional - The limit of records to return."
												},
												{
													"key": "lock",
													"value": "<string>",
													"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
												},
												{
													"key": "metadata",
													"value": "<boolean>",
													"description": "Required - Flag specifying if metadata should be returned along side the data."
												},
												{
													"key": "offset",
													"value": "<number>",
													"description": "Optional - The record to start at."
												},
												{
													"key": "orderby",
													"value": "<string>",
													"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
												},
												{
													"key": "weights",
													"value": "<string array>",
													"description": "Optional - The IDs of variables to use as weights in the resulting data."
												},
												{
													"key": "where",
													"value": "<string>",
													"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
												}
											],
											"variable": [
												{
													"key": "catalogId",
													"value": "<string>",
													"description": "Required - The ID of the catalog that contains the data product."
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "Required - The ID of the data product to query."
												}
											]
										},
										"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
									},
									"status": "Successful request",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"summary\" : \"AM Charts\",\n  \"value\" : {\n    \"dataProvider\" : [ {\n      \"DOGS\" : 1,\n      \"CATS\" : 2,\n      \"BIRDS\" : 4\n    }, {\n      \"DOGS\" : 1,\n      \"CATS\" : 1,\n      \"BIRDS\" : 4\n    }, {\n      \"DOGS\" : 1,\n      \"CATS\" : 1,\n      \"BIRDS\" : 4\n    } ]\n  }\n}"
								},
								{
									"name": "Plotly Bar Chart",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://host/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
											"protocol": "http",
											"host": [
												"host"
											],
											"path": [
												"api",
												"query",
												"{catalogId}",
												"{dataProductId}",
												"select"
											],
											"query": [
												{
													"key": "collimit",
													"value": "<integer>",
													"description": "Optional - Limits the number of columns returned."
												},
												{
													"key": "coloffset",
													"value": "<integer>",
													"description": "Optional - Determines which column to start at."
												},
												{
													"key": "cols",
													"value": "<string>",
													"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
												},
												{
													"key": "count",
													"value": "<boolean>",
													"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
												},
												{
													"key": "format",
													"value": "<format enum>",
													"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
												},
												{
													"key": "groupby",
													"value": "<string array>",
													"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
												},
												{
													"key": "inject",
													"value": "<boolean>",
													"description": "Required - Flag specifying to inject codes into the returned records."
												},
												{
													"key": "limit",
													"value": "<number>",
													"description": "Optional - The limit of records to return."
												},
												{
													"key": "lock",
													"value": "<string>",
													"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
												},
												{
													"key": "metadata",
													"value": "<boolean>",
													"description": "Required - Flag specifying if metadata should be returned along side the data."
												},
												{
													"key": "offset",
													"value": "<number>",
													"description": "Optional - The record to start at."
												},
												{
													"key": "orderby",
													"value": "<string>",
													"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
												},
												{
													"key": "weights",
													"value": "<string array>",
													"description": "Optional - The IDs of variables to use as weights in the resulting data."
												},
												{
													"key": "where",
													"value": "<string>",
													"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
												}
											],
											"variable": [
												{
													"key": "catalogId",
													"value": "<string>",
													"description": "Required - The ID of the catalog that contains the data product."
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "Required - The ID of the data product to query."
												}
											]
										},
										"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
									},
									"status": "Successful request",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"summary\" : \"Plotly Bar Chart\",\n  \"value\" : {\n    \"x\" : [ \"giraffes\", \"orangutans\", \"monkeys\" ],\n    \"y\" : [ 20, 14, 23 ],\n    \"type\" : \"bar\"\n  }\n}"
								},
								{
									"name": "Google Charts",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://host/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
											"protocol": "http",
											"host": [
												"host"
											],
											"path": [
												"api",
												"query",
												"{catalogId}",
												"{dataProductId}",
												"select"
											],
											"query": [
												{
													"key": "collimit",
													"value": "<integer>",
													"description": "Optional - Limits the number of columns returned."
												},
												{
													"key": "coloffset",
													"value": "<integer>",
													"description": "Optional - Determines which column to start at."
												},
												{
													"key": "cols",
													"value": "<string>",
													"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
												},
												{
													"key": "count",
													"value": "<boolean>",
													"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
												},
												{
													"key": "format",
													"value": "<format enum>",
													"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
												},
												{
													"key": "groupby",
													"value": "<string array>",
													"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
												},
												{
													"key": "inject",
													"value": "<boolean>",
													"description": "Required - Flag specifying to inject codes into the returned records."
												},
												{
													"key": "limit",
													"value": "<number>",
													"description": "Optional - The limit of records to return."
												},
												{
													"key": "lock",
													"value": "<string>",
													"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
												},
												{
													"key": "metadata",
													"value": "<boolean>",
													"description": "Required - Flag specifying if metadata should be returned along side the data."
												},
												{
													"key": "offset",
													"value": "<number>",
													"description": "Optional - The record to start at."
												},
												{
													"key": "orderby",
													"value": "<string>",
													"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
												},
												{
													"key": "weights",
													"value": "<string array>",
													"description": "Optional - The IDs of variables to use as weights in the resulting data."
												},
												{
													"key": "where",
													"value": "<string>",
													"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
												}
											],
											"variable": [
												{
													"key": "catalogId",
													"value": "<string>",
													"description": "Required - The ID of the catalog that contains the data product."
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "Required - The ID of the data product to query."
												}
											]
										},
										"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
									},
									"status": "Successful request",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"summary\" : \"Google Charts\",\n  \"value\" : {\n    \"cols\" : [ {\n      \"id\" : \"CATS\",\n      \"label\" : \"Number of cats\",\n      \"type\" : \"string\"\n    }, {\n      \"id\" : \"DOGS\",\n      \"label\" : \"Number of dogs\",\n      \"type\" : \"string\"\n    }, {\n      \"id\" : \"BIRDS\",\n      \"label\" : \"Number of birds\",\n      \"type\" : \"string\"\n    } ],\n    \"rows\" : [ {\n      \"c\" : [ {\n        \"v\" : 1\n      }, {\n        \"v\" : 2\n      }, {\n        \"v\" : 4\n      } ]\n    }, {\n      \"c\" : [ {\n        \"v\" : 1\n      }, {\n        \"v\" : 1\n      }, {\n        \"v\" : 4\n      } ]\n    }, {\n      \"c\" : [ {\n        \"v\" : 1\n      }, {\n        \"v\" : 1\n      }, {\n        \"v\" : 4\n      } ]\n    } ]\n  }\n}"
								},
								{
									"name": "Plotly Bubble Chart",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://host/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
											"protocol": "http",
											"host": [
												"host"
											],
											"path": [
												"api",
												"query",
												"{catalogId}",
												"{dataProductId}",
												"select"
											],
											"query": [
												{
													"key": "collimit",
													"value": "<integer>",
													"description": "Optional - Limits the number of columns returned."
												},
												{
													"key": "coloffset",
													"value": "<integer>",
													"description": "Optional - Determines which column to start at."
												},
												{
													"key": "cols",
													"value": "<string>",
													"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
												},
												{
													"key": "count",
													"value": "<boolean>",
													"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
												},
												{
													"key": "format",
													"value": "<format enum>",
													"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
												},
												{
													"key": "groupby",
													"value": "<string array>",
													"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
												},
												{
													"key": "inject",
													"value": "<boolean>",
													"description": "Required - Flag specifying to inject codes into the returned records."
												},
												{
													"key": "limit",
													"value": "<number>",
													"description": "Optional - The limit of records to return."
												},
												{
													"key": "lock",
													"value": "<string>",
													"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
												},
												{
													"key": "metadata",
													"value": "<boolean>",
													"description": "Required - Flag specifying if metadata should be returned along side the data."
												},
												{
													"key": "offset",
													"value": "<number>",
													"description": "Optional - The record to start at."
												},
												{
													"key": "orderby",
													"value": "<string>",
													"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
												},
												{
													"key": "weights",
													"value": "<string array>",
													"description": "Optional - The IDs of variables to use as weights in the resulting data."
												},
												{
													"key": "where",
													"value": "<string>",
													"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
												}
											],
											"variable": [
												{
													"key": "catalogId",
													"value": "<string>",
													"description": "Required - The ID of the catalog that contains the data product."
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "Required - The ID of the data product to query."
												}
											]
										},
										"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
									},
									"status": "Successful request",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"summary\" : \"Plotly Bubble Chart\",\n  \"value\" : {\n    \"x\" : [ 1, 2, 3, 4 ],\n    \"y\" : [ 10, 11, 12, 13 ],\n    \"mode\" : \"markers\",\n    \"marker\" : {\n      \"size\" : [ 10, 10, 10, 10 ]\n    }\n  }\n}"
								},
								{
									"name": "Plotly Scatterplot",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://host/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
											"protocol": "http",
											"host": [
												"host"
											],
											"path": [
												"api",
												"query",
												"{catalogId}",
												"{dataProductId}",
												"select"
											],
											"query": [
												{
													"key": "collimit",
													"value": "<integer>",
													"description": "Optional - Limits the number of columns returned."
												},
												{
													"key": "coloffset",
													"value": "<integer>",
													"description": "Optional - Determines which column to start at."
												},
												{
													"key": "cols",
													"value": "<string>",
													"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
												},
												{
													"key": "count",
													"value": "<boolean>",
													"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
												},
												{
													"key": "format",
													"value": "<format enum>",
													"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
												},
												{
													"key": "groupby",
													"value": "<string array>",
													"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
												},
												{
													"key": "inject",
													"value": "<boolean>",
													"description": "Required - Flag specifying to inject codes into the returned records."
												},
												{
													"key": "limit",
													"value": "<number>",
													"description": "Optional - The limit of records to return."
												},
												{
													"key": "lock",
													"value": "<string>",
													"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
												},
												{
													"key": "metadata",
													"value": "<boolean>",
													"description": "Required - Flag specifying if metadata should be returned along side the data."
												},
												{
													"key": "offset",
													"value": "<number>",
													"description": "Optional - The record to start at."
												},
												{
													"key": "orderby",
													"value": "<string>",
													"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
												},
												{
													"key": "weights",
													"value": "<string array>",
													"description": "Optional - The IDs of variables to use as weights in the resulting data."
												},
												{
													"key": "where",
													"value": "<string>",
													"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
												}
											],
											"variable": [
												{
													"key": "catalogId",
													"value": "<string>",
													"description": "Required - The ID of the catalog that contains the data product."
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "Required - The ID of the data product to query."
												}
											]
										},
										"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
									},
									"status": "Successful request",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"summary\" : \"Plotly Scatterplot\",\n  \"value\" : {\n    \"x\" : [ 1, 2, 3, 4 ],\n    \"y\" : [ 10, 15, 13, 17 ],\n    \"type\" : \"scatter\"\n  }\n}"
								},
								{
									"name": "Plotly Histogram",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://host/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
											"protocol": "http",
											"host": [
												"host"
											],
											"path": [
												"api",
												"query",
												"{catalogId}",
												"{dataProductId}",
												"select"
											],
											"query": [
												{
													"key": "collimit",
													"value": "<integer>",
													"description": "Optional - Limits the number of columns returned."
												},
												{
													"key": "coloffset",
													"value": "<integer>",
													"description": "Optional - Determines which column to start at."
												},
												{
													"key": "cols",
													"value": "<string>",
													"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
												},
												{
													"key": "count",
													"value": "<boolean>",
													"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
												},
												{
													"key": "format",
													"value": "<format enum>",
													"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
												},
												{
													"key": "groupby",
													"value": "<string array>",
													"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
												},
												{
													"key": "inject",
													"value": "<boolean>",
													"description": "Required - Flag specifying to inject codes into the returned records."
												},
												{
													"key": "limit",
													"value": "<number>",
													"description": "Optional - The limit of records to return."
												},
												{
													"key": "lock",
													"value": "<string>",
													"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
												},
												{
													"key": "metadata",
													"value": "<boolean>",
													"description": "Required - Flag specifying if metadata should be returned along side the data."
												},
												{
													"key": "offset",
													"value": "<number>",
													"description": "Optional - The record to start at."
												},
												{
													"key": "orderby",
													"value": "<string>",
													"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
												},
												{
													"key": "weights",
													"value": "<string array>",
													"description": "Optional - The IDs of variables to use as weights in the resulting data."
												},
												{
													"key": "where",
													"value": "<string>",
													"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
												}
											],
											"variable": [
												{
													"key": "catalogId",
													"value": "<string>",
													"description": "Required - The ID of the catalog that contains the data product."
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "Required - The ID of the data product to query."
												}
											]
										},
										"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
									},
									"status": "Successful request",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"summary\" : \"Plotly Histogram\",\n  \"value\" : {\n    \"x\" : \"x0\",\n    \"opacity\" : 0.75,\n    \"type\" : \"histogram\"\n  }\n}"
								},
								{
									"name": "Plotly Pie Chart",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://host/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
											"protocol": "http",
											"host": [
												"host"
											],
											"path": [
												"api",
												"query",
												"{catalogId}",
												"{dataProductId}",
												"select"
											],
											"query": [
												{
													"key": "collimit",
													"value": "<integer>",
													"description": "Optional - Limits the number of columns returned."
												},
												{
													"key": "coloffset",
													"value": "<integer>",
													"description": "Optional - Determines which column to start at."
												},
												{
													"key": "cols",
													"value": "<string>",
													"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
												},
												{
													"key": "count",
													"value": "<boolean>",
													"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
												},
												{
													"key": "format",
													"value": "<format enum>",
													"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
												},
												{
													"key": "groupby",
													"value": "<string array>",
													"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
												},
												{
													"key": "inject",
													"value": "<boolean>",
													"description": "Required - Flag specifying to inject codes into the returned records."
												},
												{
													"key": "limit",
													"value": "<number>",
													"description": "Optional - The limit of records to return."
												},
												{
													"key": "lock",
													"value": "<string>",
													"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
												},
												{
													"key": "metadata",
													"value": "<boolean>",
													"description": "Required - Flag specifying if metadata should be returned along side the data."
												},
												{
													"key": "offset",
													"value": "<number>",
													"description": "Optional - The record to start at."
												},
												{
													"key": "orderby",
													"value": "<string>",
													"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
												},
												{
													"key": "weights",
													"value": "<string array>",
													"description": "Optional - The IDs of variables to use as weights in the resulting data."
												},
												{
													"key": "where",
													"value": "<string>",
													"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
												}
											],
											"variable": [
												{
													"key": "catalogId",
													"value": "<string>",
													"description": "Required - The ID of the catalog that contains the data product."
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "Required - The ID of the data product to query."
												}
											]
										},
										"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
									},
									"status": "Successful request",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"summary\" : \"Plotly Pie Chart\",\n  \"value\" : {\n    \"labels\" : [ 1, 1, 1 ],\n    \"type\" : \"pie\",\n    \"values\" : [ 2, 1, 1 ]\n  }\n}"
								},
								{
									"name": "MTNA Simple Dataset",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://host/api/query/{catalogId}/{dataProductId}/select?collimit=<integer>&coloffset=<integer>&cols=<string>&count=<boolean>&format=<format enum>&groupby=<string array>&inject=<boolean>&limit=<number>&lock=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&weights=<string array>&where=<string>",
											"protocol": "http",
											"host": [
												"host"
											],
											"path": [
												"api",
												"query",
												"{catalogId}",
												"{dataProductId}",
												"select"
											],
											"query": [
												{
													"key": "collimit",
													"value": "<integer>",
													"description": "Optional - Limits the number of columns returned."
												},
												{
													"key": "coloffset",
													"value": "<integer>",
													"description": "Optional - Determines which column to start at."
												},
												{
													"key": "cols",
													"value": "<string>",
													"description": "Optional - Column names, regular expressions, key words, variable groups, or concepts to select. Any of these can be excluded as well by prepending '~' to these syntaxes."
												},
												{
													"key": "count",
													"value": "<boolean>",
													"description": "Required - Flag specifying whether the total row count should be returned along side\nthe data."
												},
												{
													"key": "format",
													"value": "<format enum>",
													"description": "Optional - RDS can return a variety of JSON objects to plug into various java script\ncharting libraries. Possible Values: `MTNA Dataset` `MTNA Simple Dataset` `AM Charts` `Google Charts` `Plotly Bar Chart` `Plotly Boxplot` `Plotly Bubble Chart` `Plotly Histogram` `Plotly Pie Chart` `Plotly Scatterplot`. Default value is `MTNA Simple Dataset`."
												},
												{
													"key": "groupby",
													"value": "<string array>",
													"description": "Optional - When computing a new variable using a function that depends onaggregation the group by parameter can specify which columns to group by."
												},
												{
													"key": "inject",
													"value": "<boolean>",
													"description": "Required - Flag specifying to inject codes into the returned records."
												},
												{
													"key": "limit",
													"value": "<number>",
													"description": "Optional - The limit of records to return."
												},
												{
													"key": "lock",
													"value": "<string>",
													"description": "Optional - Column names, regular expressions, key words, variable groups, or\nconcepts to lock. These will be returned first adn listed out in\nDataSetInformation that is returned on the DataSet."
												},
												{
													"key": "metadata",
													"value": "<boolean>",
													"description": "Required - Flag specifying if metadata should be returned along side the data."
												},
												{
													"key": "offset",
													"value": "<number>",
													"description": "Optional - The record to start at."
												},
												{
													"key": "orderby",
													"value": "<string>",
													"description": "Optional - Allows the data to be reordered in ascending or descending order by column"
												},
												{
													"key": "weights",
													"value": "<string array>",
													"description": "Optional - The IDs of variables to use as weights in the resulting data."
												},
												{
													"key": "where",
													"value": "<string>",
													"description": "Optional - The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause"
												}
											],
											"variable": [
												{
													"key": "catalogId",
													"value": "<string>",
													"description": "Required - The ID of the catalog that contains the data product."
												},
												{
													"key": "dataProductId",
													"value": "<string>",
													"description": "Required - The ID of the data product to query."
												}
											]
										},
										"description": "\n<p>\nRunning a select query on the specified data product returns record level\nmicrodata. A variety of querying techniques can be used to subset,\ncompute, order, filter and format the results.\n</p>"
									},
									"status": "Successful request",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"summary\" : \"MTNA Simple Dataset\",\n  \"value\" : {\n    \"info\" : {\n      \"cached\" : false,\n      \"columnCount\" : 2,\n      \"columnOffset\" : 0,\n      \"end\" : \"2019-06-26T20:10:42.210Z\",\n      \"includeMetadata\" : true,\n      \"moreColumns\" : false,\n      \"moreRows\" : true,\n      \"notes\" : [ ],\n      \"postQueryTime\" : 0,\n      \"preQueryTime\" : 98,\n      \"queryTime\" : 1579,\n      \"rowLimit\" : 3,\n      \"rowOffset\" : 0,\n      \"start\" : \"2019-06-26T20:10:40.533Z\",\n      \"totalProcessingTime\" : 1677\n    },\n    \"records\" : [ [ 1, 2 ], [ 1, 1 ], [ 1, 1 ] ],\n    \"totals\" : [ ],\n    \"variables\" : [ {\n      \"dataType\" : \"NUMERIC\",\n      \"decimals\" : 0,\n      \"endPosition\" : 2,\n      \"fixedStorageWidth\" : 2,\n      \"id\" : \"CATS\",\n      \"isPrivate\" : false,\n      \"label\" : \"NUMBER OF CATS\",\n      \"name\" : \"CATS\",\n      \"questionText\" : \"How many cats do you have?\",\n      \"startPosition\" : 0,\n      \"storageType\" : \"INT\",\n      \"summaryStatistics\" : {\n        \"dateProduced\" : \"2019-06-21T12:32:28.034Z\",\n        \"sets\" : [ {\n          \"distinctSet\" : [ ],\n          \"max\" : 1,\n          \"mean\" : 1,\n          \"min\" : 1,\n          \"missing\" : 0,\n          \"populated\" : 662,\n          \"standardDeviation\" : 0,\n          \"weighted\" : false\n        } ]\n      },\n      \"uri\" : \"c456\"\n    }, {\n      \"classificationUri\" : \"cx234\",\n      \"dataType\" : \"NUMERIC\",\n      \"decimals\" : 0,\n      \"endPosition\" : 17,\n      \"fixedStorageWidth\" : 1,\n      \"frequencies\" : {\n        \"dateProduced\" : \"2019-06-21T12:32:28.055Z\",\n        \"sets\" : [ {\n          \"map\" : {\n            \"1\" : 182,\n            \"2\" : 354,\n            \"3\" : 126\n          },\n          \"weighted\" : false,\n          \"weights\" : [ ]\n        } ]\n      },\n      \"id\" : \"DOGS\",\n      \"isPrivate\" : false,\n      \"label\" : \"NUMBER OF DOGS\",\n      \"name\" : \"DOGS\",\n      \"questionText\" : \"How many dogs do you have?\",\n      \"startPosition\" : 16,\n      \"storageType\" : \"INT\",\n      \"summaryStatistics\" : {\n        \"dateProduced\" : \"2019-06-21T12:32:28.055Z\",\n        \"sets\" : [ {\n          \"distinctSet\" : [ ],\n          \"max\" : 3,\n          \"mean\" : 1.915,\n          \"min\" : 1,\n          \"missing\" : 0,\n          \"populated\" : 662,\n          \"standardDeviation\" : 0.677,\n          \"weighted\" : false\n        } ]\n      },\n      \"uri\" : \"123\"\n    } ]\n  }\n}"
								}
							]
						}
					],
					"description": "Often, you may not want to use a whole data set in your project. Whether you're building a visualization, or are just interested in a specific subset of data, RDS can help you build a dataset specific to your needs. By running a select query, you can query a data product and receive record level microdata in the format that works for you.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4549a0cf-cd76-4e97-8a55-6425d0dc3035",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4de07b17-2193-418f-be39-963f807651e5",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Tabulate Queries",
					"item": [
						{
							"name": "Visualize confirmed cases in 2020 for Canada, China, Spain, Italy, and USA",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4de4b831-1752-4748-9413-daae55ef4c03",
										"exec": [
											"let template = `",
											"    <script src=\"https://www.amcharts.com/lib/4/core.js\"></script>",
											"    <script src=\"https://www.amcharts.com/lib/4/charts.js\"></script>",
											"    <div id=\"line-chart\"></div>",
											"    <script>",
											"        pm.getData( function (error, data) {",
											"            am4core.ready(function() {",
											"                var chart = am4core.create(\"line-chart\", am4charts.XYChart);",
											"                chart.fontSize = '1em';",
											"                chart.maskBullets = false;",
											"                chart.paddingBottom = 0;",
											"                chart.paddingLeft = 0;",
											"                chart.paddingRight = 50;",
											"                chart.paddingTop = 0;",
											"                chart.zoomOutButton.disabled = true;",
											"",
											"                // Configure cursor",
											"                chart.cursor = new am4charts.XYCursor();",
											"                chart.cursor.maxTooltipDistance = 0;",
											"                chart.cursor.behavior = 'none';",
											"                chart.cursor.lineY.disabled = true;",
											"                chart.cursor.xAxis = dateAxis;",
											"",
											"                // Set up the chart legend",
											"                chart.legend = new am4charts.Legend();",
											"                chart.legend.parent = chart.plotContainer;",
											"                chart.legend.labels.template.fill = am4core.color('#000');",
											"                chart.legend.markers.template.height = 16;",
											"                chart.legend.contentAlign = 'left';",
											"                chart.legend.fontSize = '1em';",
											"                chart.legend.itemContainers.template.valign = 'middle';",
											"",
											"                // Create axes",
											"                var dateAxis = chart.xAxes.push(new am4charts.DateAxis());",
											"                dateAxis.renderer.minGridDistance = 60;",
											"",
											"                var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());",
											"                valueAxis.renderer.opposite = true;",
											"                valueAxis.renderer.grid.template.stroke = am4core.color('#000000');",
											"                valueAxis.renderer.grid.template.strokeOpacity = 0.25;",
											"                valueAxis.renderer.minGridDistance = 30;",
											"                valueAxis.renderer.maxLabelPosition = 0.98;",
											"                valueAxis.renderer.baseGrid.disabled = true;",
											"                valueAxis.renderer.inside = false;",
											"                valueAxis.renderer.labels.template.verticalCenter = 'bottom';",
											"                valueAxis.renderer.labels.template.fill = am4core.color('#000');",
											"                valueAxis.renderer.labels.template.padding(2, 2, 2, 2);",
											"",
											"                // Create China series",
											"                var series1 = chart.series.push(new am4charts.LineSeries());",
											"                series1.dataFields.valueY = \"cnt_confirmed\";",
											"                series1.dataFields.dateX = \"date_stamp\";",
											"                series1.name = \"China\";",
											"                series1.strokeWidth = 3;",
											"                series1.tensionX = 0.8;",
											"                series1.bullets.push(new am4charts.CircleBullet());",
											"                series1.data = data.response.dataProvider.filter(d => d.iso3166_1 === 'China')",
											"                series1.tooltipText = \"{name}: [bold]{valueY}[/]\";",
											"",
											"",
											"                // Create series for USA",
											"                var series2 = chart.series.push(new am4charts.LineSeries());",
											"                series2.dataFields.valueY = \"cnt_confirmed\";",
											"                series2.dataFields.dateX = \"date_stamp\";",
											"                series2.name = \"USA\";",
											"                series2.strokeWidth = 3;",
											"                series2.tensionX = 0.8;",
											"                series2.bullets.push(new am4charts.CircleBullet());",
											"                series2.data = data.response.dataProvider.filter(d => d.iso3166_1 === 'United States of America')",
											"                series2.tooltipText = \"{name}: [bold]{valueY}[/]\";",
											"",
											"",
											"                // Create series for Italy",
											"                var series3 = chart.series.push(new am4charts.LineSeries());",
											"                series3.dataFields.valueY = \"cnt_confirmed\";",
											"                series3.dataFields.dateX = \"date_stamp\";",
											"                series3.strokeWidth = 3;",
											"                series3.tensionX = 0.8;",
											"                series3.name = \"Italy\"",
											"                series3.bullets.push(new am4charts.CircleBullet());",
											"                series3.data = data.response.dataProvider.filter(d => d.iso3166_1 === 'Italy')",
											"                series3.tooltipText = \"{name}: [bold]{valueY}[/]\";",
											"",
											"",
											"                // Create series for Spain",
											"                var series4 = chart.series.push(new am4charts.LineSeries());",
											"                series4.dataFields.valueY = \"cnt_confirmed\";",
											"                series4.dataFields.dateX = \"date_stamp\";",
											"                series4.strokeWidth = 3;",
											"                series4.name = \"Spain\";",
											"                series4.tensionX = 0.8;",
											"                series4.bullets.push(new am4charts.CircleBullet());",
											"                series4.data = data.response.dataProvider.filter(d => d.iso3166_1 === 'Spain')",
											"                series4.tooltipText = \"{name}: [bold]{valueY}[/]\";",
											"",
											"                series1.tooltip.pointerOrientation = \"vertical\";",
											"",
											"                chart.cursor = new am4charts.XYCursor();",
											"                chart.cursor.xAxis = dateAxis;",
											"            });",
											"        });",
											"    </script>",
											"`;",
											"",
											"pm.visualizer.set(template, {",
											"    response: pm.response.json()",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://covid19.richdataservices.com/rds/api/query/int/jhu_country/tabulate?dims=date_stamp,iso3166_1&where=(year_stamp=2020) AND (iso3166_1=US OR iso3166_1=CA OR iso3166_1=ES OR iso3166_1=IT OR iso3166_1=CN)&measure=cnt_confirmed:SUM(cnt_confirmed)&inject=true&metadata=true&orderBy=date_stamp ASC,iso3166_1 ASC&totals=true&format=amcharts",
									"protocol": "https",
									"host": [
										"covid19",
										"richdataservices",
										"com"
									],
									"path": [
										"rds",
										"api",
										"query",
										"int",
										"jhu_country",
										"tabulate"
									],
									"query": [
										{
											"key": "dims",
											"value": "date_stamp,iso3166_1",
											"description": "Our dimensions here are date_stamp and iso3166_1 (country code). This will return a record (or cell, if you're viewing in the tab engine) for each country for each day."
										},
										{
											"key": "where",
											"value": "(year_stamp=2020) AND (iso3166_1=US OR iso3166_1=CA OR iso3166_1=ES OR iso3166_1=IT OR iso3166_1=CN)",
											"description": "Using the` AND` and `OR` operators, we are telling RDS to only return data from the year 2020, and only from the countries of interest. \n\nFind all the country codes by sending the following request.  Note that you will need to use the `codeValue` property and not the`name` property when querying. `http://covid19.richdataservices.com/rds/api/catalog/int/jhu_country/classification/iso3166_1/codes`"
										},
										{
											"key": "measure",
											"value": "cnt_confirmed:SUM(cnt_confirmed)",
											"description": "In this time series we want the confirmed count for each country on an specific date. We will compute the count as the sum of confirmed cases for a country on a specific date (there will only be one value per date so the sum will give us the correct number), we will create a computed variable, cnt_confirmed, as the Sum of the cnt_confirmed variable in the data product. The sum can only be used because we used the date_stamp as a dimension."
										},
										{
											"key": "inject",
											"value": "true",
											"description": "By setting `inject` to `true`, we tell RDS that we want the country's name (ex: \"China\") instead of its code (ex: \"CN\")"
										},
										{
											"key": "metadata",
											"value": "true",
											"description": "Including metadata tells RDS that we want all of the variable metadata returned with our query. This is useful when populating a visualization, or just to give more context to the data."
										},
										{
											"key": "orderBy",
											"value": "date_stamp ASC,iso3166_1 ASC",
											"description": "We will order date by ascending order, creating a time series, and country by ascending order, sorting them alphabetically."
										},
										{
											"key": "totals",
											"value": "true",
											"description": "Choose whether or not to include totals for the dimensions"
										},
										{
											"key": "format",
											"value": "amcharts",
											"description": "Our desired charting library, used to create the visualization you see in the visualization tab."
										}
									]
								},
								"description": "Compare how COVID-19 cases have increased over time in different countries. [See it in the tabulation engine](https://covid19.richdataservices.com/rds-tabengine/analysis/int/jhu_country/custom-tables;showTotals=true,true,false,false;sortRows=NAME,ASC;sortCols=NAME,ASC;filterEmpty=true?cols=iso3166_1&rows=date_stamp&where=(year_stamp%3D2020)%20AND%20(iso3166_1%3DUS%20OR%20iso3166_1%3DCA%20OR%20iso3166_1%3DES%20OR%20iso3166_1%3DIT%20OR%20iso3166_1%3DCN)&measure=cnt_confirmed:SUM(cnt_confirmed)?utm_source=postman&utm_medium=postmanlabs&utm_campaign=covid_19_apis), or click over to the Visualize tab in the Postman app to see the graph displayed below.  \n\nOf course, you can also leave off the format parameter to have the data returned cell by cell. An example of this is available in the Example Responses section.\n\n<img src=\"https://mtna.s3.amazonaws.com/rds/images/Postman/countryComparisonLineGraph.png\" alt=\"countryComparison\" width=\"800\"/>"
							},
							"response": [
								{
									"name": "Visualize as amChart",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://covid19.richdataservices.com/rds/api/query/int/jhu_country/tabulate?dims=date_stamp,iso3166_1&where=(year_stamp=2020) AND (iso3166_1=US OR iso3166_1=CA OR iso3166_1=ES OR iso3166_1=IT OR iso3166_1=CN)&measure=cnt_confirmed:SUM(cnt_confirmed)&inject=true&metadata=true&orderBy=date_stamp ASC,iso3166_1 ASC&totals=true&format=amcharts",
											"protocol": "https",
											"host": [
												"covid19",
												"richdataservices",
												"com"
											],
											"path": [
												"rds",
												"api",
												"query",
												"int",
												"jhu_country",
												"tabulate"
											],
											"query": [
												{
													"key": "dims",
													"value": "date_stamp,iso3166_1",
													"description": "Our dimensions here are date_stamp and iso3166_1 (country code). This will return a record (or cell, if you're viewing in the tab engine) for each country for each day."
												},
												{
													"key": "where",
													"value": "(year_stamp=2020) AND (iso3166_1=US OR iso3166_1=CA OR iso3166_1=ES OR iso3166_1=IT OR iso3166_1=CN)",
													"description": "Using the` AND` and `OR` operators, we are telling RDS to only return data from the year 2020, and only from the countries of interest. \n\nFind all the country codes by querying `http://covid19.richdataservices.com/rds/api/catalog/int/jhu_country/classification/iso3166_1/codes`"
												},
												{
													"key": "measure",
													"value": "cnt_confirmed:SUM(cnt_confirmed)",
													"description": "Since we want to measure all of the current cases up until that date, we will define cnt_confirmed as the sum of its values."
												},
												{
													"key": "inject",
													"value": "true",
													"description": "By setting `inject` to `true`, we tell RDS that we want the country's name (ex: \"China\") instead of its code (ex: \"CN\")"
												},
												{
													"key": "metadata",
													"value": "true",
													"description": "Including metadata tells RDS that we want all of the variable metadata returned with our query. This is useful when populating a visualization, or just to give more context to the data."
												},
												{
													"key": "orderBy",
													"value": "date_stamp ASC,iso3166_1 ASC",
													"description": "We will order date by ascending order, creating a time series, and country by ascending order, sorting them alphabetically."
												},
												{
													"key": "totals",
													"value": "true",
													"description": "Choose whether or not to include totals for the dimensions"
												},
												{
													"key": "format",
													"value": "amcharts"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 18 Jun 2020 20:06:09 GMT"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"dataProvider\": [\n        {\n            \"date_stamp\": \"2020-01-22\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 547\n        },\n        {\n            \"date_stamp\": \"2020-01-22\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1\n        },\n        {\n            \"date_stamp\": \"2020-01-23\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 639\n        },\n        {\n            \"date_stamp\": \"2020-01-23\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1\n        },\n        {\n            \"date_stamp\": \"2020-01-24\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 916\n        },\n        {\n            \"date_stamp\": \"2020-01-24\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 2\n        },\n        {\n            \"date_stamp\": \"2020-01-25\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 1399\n        },\n        {\n            \"date_stamp\": \"2020-01-25\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 2\n        },\n        {\n            \"date_stamp\": \"2020-01-26\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 1\n        },\n        {\n            \"date_stamp\": \"2020-01-26\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 2062\n        },\n        {\n            \"date_stamp\": \"2020-01-26\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 5\n        },\n        {\n            \"date_stamp\": \"2020-01-27\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 1\n        },\n        {\n            \"date_stamp\": \"2020-01-27\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 2863\n        },\n        {\n            \"date_stamp\": \"2020-01-27\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 5\n        },\n        {\n            \"date_stamp\": \"2020-01-28\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 2\n        },\n        {\n            \"date_stamp\": \"2020-01-28\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 5494\n        },\n        {\n            \"date_stamp\": \"2020-01-28\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 5\n        },\n        {\n            \"date_stamp\": \"2020-01-29\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 2\n        },\n        {\n            \"date_stamp\": \"2020-01-29\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 6070\n        },\n        {\n            \"date_stamp\": \"2020-01-29\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 5\n        },\n        {\n            \"date_stamp\": \"2020-01-30\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 3\n        },\n        {\n            \"date_stamp\": \"2020-01-30\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 8124\n        },\n        {\n            \"date_stamp\": \"2020-01-30\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 5\n        },\n        {\n            \"date_stamp\": \"2020-01-31\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 3\n        },\n        {\n            \"date_stamp\": \"2020-01-31\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 9783\n        },\n        {\n            \"date_stamp\": \"2020-01-31\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 2\n        },\n        {\n            \"date_stamp\": \"2020-01-31\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 6\n        },\n        {\n            \"date_stamp\": \"2020-02-01\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 4\n        },\n        {\n            \"date_stamp\": \"2020-02-01\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 11871\n        },\n        {\n            \"date_stamp\": \"2020-02-01\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 1\n        },\n        {\n            \"date_stamp\": \"2020-02-01\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 2\n        },\n        {\n            \"date_stamp\": \"2020-02-01\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 8\n        },\n        {\n            \"date_stamp\": \"2020-02-02\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 4\n        },\n        {\n            \"date_stamp\": \"2020-02-02\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 16607\n        },\n        {\n            \"date_stamp\": \"2020-02-02\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 1\n        },\n        {\n            \"date_stamp\": \"2020-02-02\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 2\n        },\n        {\n            \"date_stamp\": \"2020-02-02\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 8\n        },\n        {\n            \"date_stamp\": \"2020-02-03\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 4\n        },\n        {\n            \"date_stamp\": \"2020-02-03\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 19693\n        },\n        {\n            \"date_stamp\": \"2020-02-03\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 1\n        },\n        {\n            \"date_stamp\": \"2020-02-03\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 2\n        },\n        {\n            \"date_stamp\": \"2020-02-03\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 11\n        },\n        {\n            \"date_stamp\": \"2020-02-04\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 4\n        },\n        {\n            \"date_stamp\": \"2020-02-04\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 23680\n        },\n        {\n            \"date_stamp\": \"2020-02-04\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 1\n        },\n        {\n            \"date_stamp\": \"2020-02-04\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 2\n        },\n        {\n            \"date_stamp\": \"2020-02-04\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 11\n        },\n        {\n            \"date_stamp\": \"2020-02-05\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 5\n        },\n        {\n            \"date_stamp\": \"2020-02-05\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 27409\n        },\n        {\n            \"date_stamp\": \"2020-02-05\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 1\n        },\n        {\n            \"date_stamp\": \"2020-02-05\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 2\n        },\n        {\n            \"date_stamp\": \"2020-02-05\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 12\n        },\n        {\n            \"date_stamp\": \"2020-02-06\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 5\n        },\n        {\n            \"date_stamp\": \"2020-02-06\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 30553\n        },\n        {\n            \"date_stamp\": \"2020-02-06\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 1\n        },\n        {\n            \"date_stamp\": \"2020-02-06\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 2\n        },\n        {\n            \"date_stamp\": \"2020-02-06\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 12\n        },\n        {\n            \"date_stamp\": \"2020-02-07\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 7\n        },\n        {\n            \"date_stamp\": \"2020-02-07\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 34075\n        },\n        {\n            \"date_stamp\": \"2020-02-07\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 1\n        },\n        {\n            \"date_stamp\": \"2020-02-07\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 3\n        },\n        {\n            \"date_stamp\": \"2020-02-07\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 12\n        },\n        {\n            \"date_stamp\": \"2020-02-08\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 7\n        },\n        {\n            \"date_stamp\": \"2020-02-08\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 36778\n        },\n        {\n            \"date_stamp\": \"2020-02-08\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 1\n        },\n        {\n            \"date_stamp\": \"2020-02-08\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 3\n        },\n        {\n            \"date_stamp\": \"2020-02-08\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 12\n        },\n        {\n            \"date_stamp\": \"2020-02-09\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 7\n        },\n        {\n            \"date_stamp\": \"2020-02-09\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 39790\n        },\n        {\n            \"date_stamp\": \"2020-02-09\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 2\n        },\n        {\n            \"date_stamp\": \"2020-02-09\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 3\n        },\n        {\n            \"date_stamp\": \"2020-02-09\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 12\n        },\n        {\n            \"date_stamp\": \"2020-02-10\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 7\n        },\n        {\n            \"date_stamp\": \"2020-02-10\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 42306\n        },\n        {\n            \"date_stamp\": \"2020-02-10\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 2\n        },\n        {\n            \"date_stamp\": \"2020-02-10\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 3\n        },\n        {\n            \"date_stamp\": \"2020-02-10\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 12\n        },\n        {\n            \"date_stamp\": \"2020-02-11\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 7\n        },\n        {\n            \"date_stamp\": \"2020-02-11\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 44327\n        },\n        {\n            \"date_stamp\": \"2020-02-11\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 2\n        },\n        {\n            \"date_stamp\": \"2020-02-11\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 3\n        },\n        {\n            \"date_stamp\": \"2020-02-11\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 13\n        },\n        {\n            \"date_stamp\": \"2020-02-12\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 7\n        },\n        {\n            \"date_stamp\": \"2020-02-12\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 44699\n        },\n        {\n            \"date_stamp\": \"2020-02-12\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 2\n        },\n        {\n            \"date_stamp\": \"2020-02-12\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 3\n        },\n        {\n            \"date_stamp\": \"2020-02-12\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 13\n        },\n        {\n            \"date_stamp\": \"2020-02-13\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 7\n        },\n        {\n            \"date_stamp\": \"2020-02-13\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 59832\n        },\n        {\n            \"date_stamp\": \"2020-02-13\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 2\n        },\n        {\n            \"date_stamp\": \"2020-02-13\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 3\n        },\n        {\n            \"date_stamp\": \"2020-02-13\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 15\n        },\n        {\n            \"date_stamp\": \"2020-02-14\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 7\n        },\n        {\n            \"date_stamp\": \"2020-02-14\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 66292\n        },\n        {\n            \"date_stamp\": \"2020-02-14\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 2\n        },\n        {\n            \"date_stamp\": \"2020-02-14\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 3\n        },\n        {\n            \"date_stamp\": \"2020-02-14\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 15\n        },\n        {\n            \"date_stamp\": \"2020-02-15\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 7\n        },\n        {\n            \"date_stamp\": \"2020-02-15\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 68347\n        },\n        {\n            \"date_stamp\": \"2020-02-15\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 2\n        },\n        {\n            \"date_stamp\": \"2020-02-15\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 3\n        },\n        {\n            \"date_stamp\": \"2020-02-15\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 15\n        },\n        {\n            \"date_stamp\": \"2020-02-16\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 7\n        },\n        {\n            \"date_stamp\": \"2020-02-16\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 70446\n        },\n        {\n            \"date_stamp\": \"2020-02-16\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 2\n        },\n        {\n            \"date_stamp\": \"2020-02-16\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 3\n        },\n        {\n            \"date_stamp\": \"2020-02-16\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 15\n        },\n        {\n            \"date_stamp\": \"2020-02-17\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 8\n        },\n        {\n            \"date_stamp\": \"2020-02-17\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 72364\n        },\n        {\n            \"date_stamp\": \"2020-02-17\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 2\n        },\n        {\n            \"date_stamp\": \"2020-02-17\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 3\n        },\n        {\n            \"date_stamp\": \"2020-02-17\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 15\n        },\n        {\n            \"date_stamp\": \"2020-02-18\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 8\n        },\n        {\n            \"date_stamp\": \"2020-02-18\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 74139\n        },\n        {\n            \"date_stamp\": \"2020-02-18\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 2\n        },\n        {\n            \"date_stamp\": \"2020-02-18\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 3\n        },\n        {\n            \"date_stamp\": \"2020-02-18\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 15\n        },\n        {\n            \"date_stamp\": \"2020-02-19\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 8\n        },\n        {\n            \"date_stamp\": \"2020-02-19\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 74546\n        },\n        {\n            \"date_stamp\": \"2020-02-19\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 2\n        },\n        {\n            \"date_stamp\": \"2020-02-19\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 3\n        },\n        {\n            \"date_stamp\": \"2020-02-19\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 15\n        },\n        {\n            \"date_stamp\": \"2020-02-20\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 8\n        },\n        {\n            \"date_stamp\": \"2020-02-20\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 74999\n        },\n        {\n            \"date_stamp\": \"2020-02-20\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 2\n        },\n        {\n            \"date_stamp\": \"2020-02-20\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 3\n        },\n        {\n            \"date_stamp\": \"2020-02-20\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 15\n        },\n        {\n            \"date_stamp\": \"2020-02-21\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 9\n        },\n        {\n            \"date_stamp\": \"2020-02-21\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 75472\n        },\n        {\n            \"date_stamp\": \"2020-02-21\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 2\n        },\n        {\n            \"date_stamp\": \"2020-02-21\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 20\n        },\n        {\n            \"date_stamp\": \"2020-02-21\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 35\n        },\n        {\n            \"date_stamp\": \"2020-02-22\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 9\n        },\n        {\n            \"date_stamp\": \"2020-02-22\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 76922\n        },\n        {\n            \"date_stamp\": \"2020-02-22\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 2\n        },\n        {\n            \"date_stamp\": \"2020-02-22\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 62\n        },\n        {\n            \"date_stamp\": \"2020-02-22\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 35\n        },\n        {\n            \"date_stamp\": \"2020-02-23\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 9\n        },\n        {\n            \"date_stamp\": \"2020-02-23\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 76938\n        },\n        {\n            \"date_stamp\": \"2020-02-23\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 2\n        },\n        {\n            \"date_stamp\": \"2020-02-23\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 155\n        },\n        {\n            \"date_stamp\": \"2020-02-23\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 35\n        },\n        {\n            \"date_stamp\": \"2020-02-24\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 10\n        },\n        {\n            \"date_stamp\": \"2020-02-24\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 77152\n        },\n        {\n            \"date_stamp\": \"2020-02-24\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 2\n        },\n        {\n            \"date_stamp\": \"2020-02-24\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 229\n        },\n        {\n            \"date_stamp\": \"2020-02-24\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 53\n        },\n        {\n            \"date_stamp\": \"2020-02-25\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 11\n        },\n        {\n            \"date_stamp\": \"2020-02-25\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 77660\n        },\n        {\n            \"date_stamp\": \"2020-02-25\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 6\n        },\n        {\n            \"date_stamp\": \"2020-02-25\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 322\n        },\n        {\n            \"date_stamp\": \"2020-02-25\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 53\n        },\n        {\n            \"date_stamp\": \"2020-02-26\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 11\n        },\n        {\n            \"date_stamp\": \"2020-02-26\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 78065\n        },\n        {\n            \"date_stamp\": \"2020-02-26\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 13\n        },\n        {\n            \"date_stamp\": \"2020-02-26\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 453\n        },\n        {\n            \"date_stamp\": \"2020-02-26\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 59\n        },\n        {\n            \"date_stamp\": \"2020-02-27\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 13\n        },\n        {\n            \"date_stamp\": \"2020-02-27\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 78498\n        },\n        {\n            \"date_stamp\": \"2020-02-27\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 15\n        },\n        {\n            \"date_stamp\": \"2020-02-27\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 655\n        },\n        {\n            \"date_stamp\": \"2020-02-27\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 60\n        },\n        {\n            \"date_stamp\": \"2020-02-28\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 14\n        },\n        {\n            \"date_stamp\": \"2020-02-28\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 78824\n        },\n        {\n            \"date_stamp\": \"2020-02-28\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 32\n        },\n        {\n            \"date_stamp\": \"2020-02-28\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 888\n        },\n        {\n            \"date_stamp\": \"2020-02-28\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 62\n        },\n        {\n            \"date_stamp\": \"2020-02-29\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 20\n        },\n        {\n            \"date_stamp\": \"2020-02-29\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 79251\n        },\n        {\n            \"date_stamp\": \"2020-02-29\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 45\n        },\n        {\n            \"date_stamp\": \"2020-02-29\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 1128\n        },\n        {\n            \"date_stamp\": \"2020-02-29\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 70\n        },\n        {\n            \"date_stamp\": \"2020-03-01\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 24\n        },\n        {\n            \"date_stamp\": \"2020-03-01\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 79826\n        },\n        {\n            \"date_stamp\": \"2020-03-01\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 84\n        },\n        {\n            \"date_stamp\": \"2020-03-01\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 1694\n        },\n        {\n            \"date_stamp\": \"2020-03-01\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 76\n        },\n        {\n            \"date_stamp\": \"2020-03-02\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 27\n        },\n        {\n            \"date_stamp\": \"2020-03-02\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 80026\n        },\n        {\n            \"date_stamp\": \"2020-03-02\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 120\n        },\n        {\n            \"date_stamp\": \"2020-03-02\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 2036\n        },\n        {\n            \"date_stamp\": \"2020-03-02\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 101\n        },\n        {\n            \"date_stamp\": \"2020-03-03\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 30\n        },\n        {\n            \"date_stamp\": \"2020-03-03\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 80151\n        },\n        {\n            \"date_stamp\": \"2020-03-03\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 165\n        },\n        {\n            \"date_stamp\": \"2020-03-03\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 2502\n        },\n        {\n            \"date_stamp\": \"2020-03-03\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 122\n        },\n        {\n            \"date_stamp\": \"2020-03-04\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 33\n        },\n        {\n            \"date_stamp\": \"2020-03-04\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 80271\n        },\n        {\n            \"date_stamp\": \"2020-03-04\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 222\n        },\n        {\n            \"date_stamp\": \"2020-03-04\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 3089\n        },\n        {\n            \"date_stamp\": \"2020-03-04\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 153\n        },\n        {\n            \"date_stamp\": \"2020-03-05\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 37\n        },\n        {\n            \"date_stamp\": \"2020-03-05\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 80422\n        },\n        {\n            \"date_stamp\": \"2020-03-05\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 259\n        },\n        {\n            \"date_stamp\": \"2020-03-05\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 3858\n        },\n        {\n            \"date_stamp\": \"2020-03-05\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 221\n        },\n        {\n            \"date_stamp\": \"2020-03-06\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 49\n        },\n        {\n            \"date_stamp\": \"2020-03-06\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 80573\n        },\n        {\n            \"date_stamp\": \"2020-03-06\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 400\n        },\n        {\n            \"date_stamp\": \"2020-03-06\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 4636\n        },\n        {\n            \"date_stamp\": \"2020-03-06\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 278\n        },\n        {\n            \"date_stamp\": \"2020-03-07\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 54\n        },\n        {\n            \"date_stamp\": \"2020-03-07\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 80652\n        },\n        {\n            \"date_stamp\": \"2020-03-07\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 500\n        },\n        {\n            \"date_stamp\": \"2020-03-07\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 5883\n        },\n        {\n            \"date_stamp\": \"2020-03-07\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 417\n        },\n        {\n            \"date_stamp\": \"2020-03-08\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 64\n        },\n        {\n            \"date_stamp\": \"2020-03-08\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 80699\n        },\n        {\n            \"date_stamp\": \"2020-03-08\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 673\n        },\n        {\n            \"date_stamp\": \"2020-03-08\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 7375\n        },\n        {\n            \"date_stamp\": \"2020-03-08\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 537\n        },\n        {\n            \"date_stamp\": \"2020-03-09\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 76\n        },\n        {\n            \"date_stamp\": \"2020-03-09\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 80735\n        },\n        {\n            \"date_stamp\": \"2020-03-09\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 1073\n        },\n        {\n            \"date_stamp\": \"2020-03-09\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 9172\n        },\n        {\n            \"date_stamp\": \"2020-03-09\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 605\n        },\n        {\n            \"date_stamp\": \"2020-03-10\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 79\n        },\n        {\n            \"date_stamp\": \"2020-03-10\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 80887\n        },\n        {\n            \"date_stamp\": \"2020-03-10\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 1695\n        },\n        {\n            \"date_stamp\": \"2020-03-10\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 10149\n        },\n        {\n            \"date_stamp\": \"2020-03-10\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 959\n        },\n        {\n            \"date_stamp\": \"2020-03-11\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 108\n        },\n        {\n            \"date_stamp\": \"2020-03-11\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 80921\n        },\n        {\n            \"date_stamp\": \"2020-03-11\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 2277\n        },\n        {\n            \"date_stamp\": \"2020-03-11\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 12462\n        },\n        {\n            \"date_stamp\": \"2020-03-11\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1281\n        },\n        {\n            \"date_stamp\": \"2020-03-12\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 117\n        },\n        {\n            \"date_stamp\": \"2020-03-12\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 80932\n        },\n        {\n            \"date_stamp\": \"2020-03-12\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 2277\n        },\n        {\n            \"date_stamp\": \"2020-03-12\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 12462\n        },\n        {\n            \"date_stamp\": \"2020-03-12\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1663\n        },\n        {\n            \"date_stamp\": \"2020-03-13\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 193\n        },\n        {\n            \"date_stamp\": \"2020-03-13\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 80945\n        },\n        {\n            \"date_stamp\": \"2020-03-13\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 5232\n        },\n        {\n            \"date_stamp\": \"2020-03-13\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 17660\n        },\n        {\n            \"date_stamp\": \"2020-03-13\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 2179\n        },\n        {\n            \"date_stamp\": \"2020-03-14\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 196\n        },\n        {\n            \"date_stamp\": \"2020-03-14\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 80977\n        },\n        {\n            \"date_stamp\": \"2020-03-14\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 6391\n        },\n        {\n            \"date_stamp\": \"2020-03-14\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 21157\n        },\n        {\n            \"date_stamp\": \"2020-03-14\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 2726\n        },\n        {\n            \"date_stamp\": \"2020-03-15\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 250\n        },\n        {\n            \"date_stamp\": \"2020-03-15\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 81003\n        },\n        {\n            \"date_stamp\": \"2020-03-15\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 7798\n        },\n        {\n            \"date_stamp\": \"2020-03-15\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 24747\n        },\n        {\n            \"date_stamp\": \"2020-03-15\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 3499\n        },\n        {\n            \"date_stamp\": \"2020-03-16\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 415\n        },\n        {\n            \"date_stamp\": \"2020-03-16\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 81033\n        },\n        {\n            \"date_stamp\": \"2020-03-16\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 9942\n        },\n        {\n            \"date_stamp\": \"2020-03-16\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 27980\n        },\n        {\n            \"date_stamp\": \"2020-03-16\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 4632\n        },\n        {\n            \"date_stamp\": \"2020-03-17\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 478\n        },\n        {\n            \"date_stamp\": \"2020-03-17\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 81058\n        },\n        {\n            \"date_stamp\": \"2020-03-17\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 11748\n        },\n        {\n            \"date_stamp\": \"2020-03-17\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 31506\n        },\n        {\n            \"date_stamp\": \"2020-03-17\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 6421\n        },\n        {\n            \"date_stamp\": \"2020-03-18\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 657\n        },\n        {\n            \"date_stamp\": \"2020-03-18\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 81102\n        },\n        {\n            \"date_stamp\": \"2020-03-18\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 13910\n        },\n        {\n            \"date_stamp\": \"2020-03-18\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 35713\n        },\n        {\n            \"date_stamp\": \"2020-03-18\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 7786\n        },\n        {\n            \"date_stamp\": \"2020-03-19\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 800\n        },\n        {\n            \"date_stamp\": \"2020-03-19\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 81156\n        },\n        {\n            \"date_stamp\": \"2020-03-19\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 17963\n        },\n        {\n            \"date_stamp\": \"2020-03-19\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 41035\n        },\n        {\n            \"date_stamp\": \"2020-03-19\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 13680\n        },\n        {\n            \"date_stamp\": \"2020-03-20\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 943\n        },\n        {\n            \"date_stamp\": \"2020-03-20\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 81250\n        },\n        {\n            \"date_stamp\": \"2020-03-20\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 20410\n        },\n        {\n            \"date_stamp\": \"2020-03-20\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 47021\n        },\n        {\n            \"date_stamp\": \"2020-03-20\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 19101\n        },\n        {\n            \"date_stamp\": \"2020-03-21\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 1278\n        },\n        {\n            \"date_stamp\": \"2020-03-21\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 81305\n        },\n        {\n            \"date_stamp\": \"2020-03-21\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 25374\n        },\n        {\n            \"date_stamp\": \"2020-03-21\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 53578\n        },\n        {\n            \"date_stamp\": \"2020-03-21\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 25514\n        },\n        {\n            \"date_stamp\": \"2020-03-22\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 1470\n        },\n        {\n            \"date_stamp\": \"2020-03-22\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 81397\n        },\n        {\n            \"date_stamp\": \"2020-03-22\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 28603\n        },\n        {\n            \"date_stamp\": \"2020-03-22\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 59138\n        },\n        {\n            \"date_stamp\": \"2020-03-22\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 33848\n        },\n        {\n            \"date_stamp\": \"2020-03-23\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 2088\n        },\n        {\n            \"date_stamp\": \"2020-03-23\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 81496\n        },\n        {\n            \"date_stamp\": \"2020-03-23\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 35136\n        },\n        {\n            \"date_stamp\": \"2020-03-23\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 63927\n        },\n        {\n            \"date_stamp\": \"2020-03-23\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 43663\n        },\n        {\n            \"date_stamp\": \"2020-03-24\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 2790\n        },\n        {\n            \"date_stamp\": \"2020-03-24\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 81591\n        },\n        {\n            \"date_stamp\": \"2020-03-24\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 39885\n        },\n        {\n            \"date_stamp\": \"2020-03-24\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 69176\n        },\n        {\n            \"date_stamp\": \"2020-03-24\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 53736\n        },\n        {\n            \"date_stamp\": \"2020-03-25\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 3251\n        },\n        {\n            \"date_stamp\": \"2020-03-25\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 81661\n        },\n        {\n            \"date_stamp\": \"2020-03-25\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 49515\n        },\n        {\n            \"date_stamp\": \"2020-03-25\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 74386\n        },\n        {\n            \"date_stamp\": \"2020-03-25\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 65778\n        },\n        {\n            \"date_stamp\": \"2020-03-26\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 4042\n        },\n        {\n            \"date_stamp\": \"2020-03-26\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 81782\n        },\n        {\n            \"date_stamp\": \"2020-03-26\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 57786\n        },\n        {\n            \"date_stamp\": \"2020-03-26\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 80589\n        },\n        {\n            \"date_stamp\": \"2020-03-26\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 83836\n        },\n        {\n            \"date_stamp\": \"2020-03-27\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 4682\n        },\n        {\n            \"date_stamp\": \"2020-03-27\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 81897\n        },\n        {\n            \"date_stamp\": \"2020-03-27\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 65719\n        },\n        {\n            \"date_stamp\": \"2020-03-27\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 86498\n        },\n        {\n            \"date_stamp\": \"2020-03-27\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 101657\n        },\n        {\n            \"date_stamp\": \"2020-03-28\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 5576\n        },\n        {\n            \"date_stamp\": \"2020-03-28\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 81999\n        },\n        {\n            \"date_stamp\": \"2020-03-28\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 73235\n        },\n        {\n            \"date_stamp\": \"2020-03-28\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 92472\n        },\n        {\n            \"date_stamp\": \"2020-03-28\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 121465\n        },\n        {\n            \"date_stamp\": \"2020-03-29\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 6280\n        },\n        {\n            \"date_stamp\": \"2020-03-29\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 82122\n        },\n        {\n            \"date_stamp\": \"2020-03-29\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 80110\n        },\n        {\n            \"date_stamp\": \"2020-03-29\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 97689\n        },\n        {\n            \"date_stamp\": \"2020-03-29\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 140909\n        },\n        {\n            \"date_stamp\": \"2020-03-30\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 7398\n        },\n        {\n            \"date_stamp\": \"2020-03-30\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 82198\n        },\n        {\n            \"date_stamp\": \"2020-03-30\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 87956\n        },\n        {\n            \"date_stamp\": \"2020-03-30\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 101739\n        },\n        {\n            \"date_stamp\": \"2020-03-30\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 161831\n        },\n        {\n            \"date_stamp\": \"2020-03-31\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 8527\n        },\n        {\n            \"date_stamp\": \"2020-03-31\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 82279\n        },\n        {\n            \"date_stamp\": \"2020-03-31\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 95923\n        },\n        {\n            \"date_stamp\": \"2020-03-31\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 105792\n        },\n        {\n            \"date_stamp\": \"2020-03-31\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 188172\n        },\n        {\n            \"date_stamp\": \"2020-04-01\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 9560\n        },\n        {\n            \"date_stamp\": \"2020-04-01\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 82361\n        },\n        {\n            \"date_stamp\": \"2020-04-01\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 104118\n        },\n        {\n            \"date_stamp\": \"2020-04-01\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 110574\n        },\n        {\n            \"date_stamp\": \"2020-04-01\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 213372\n        },\n        {\n            \"date_stamp\": \"2020-04-02\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 11284\n        },\n        {\n            \"date_stamp\": \"2020-04-02\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 82432\n        },\n        {\n            \"date_stamp\": \"2020-04-02\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 112065\n        },\n        {\n            \"date_stamp\": \"2020-04-02\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 115242\n        },\n        {\n            \"date_stamp\": \"2020-04-02\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 243599\n        },\n        {\n            \"date_stamp\": \"2020-04-03\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 12437\n        },\n        {\n            \"date_stamp\": \"2020-04-03\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 82511\n        },\n        {\n            \"date_stamp\": \"2020-04-03\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 119199\n        },\n        {\n            \"date_stamp\": \"2020-04-03\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 119827\n        },\n        {\n            \"date_stamp\": \"2020-04-03\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 275586\n        },\n        {\n            \"date_stamp\": \"2020-04-04\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 12978\n        },\n        {\n            \"date_stamp\": \"2020-04-04\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 82543\n        },\n        {\n            \"date_stamp\": \"2020-04-04\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 126168\n        },\n        {\n            \"date_stamp\": \"2020-04-04\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 124632\n        },\n        {\n            \"date_stamp\": \"2020-04-04\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 308853\n        },\n        {\n            \"date_stamp\": \"2020-04-05\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 15756\n        },\n        {\n            \"date_stamp\": \"2020-04-05\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 82602\n        },\n        {\n            \"date_stamp\": \"2020-04-05\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 131646\n        },\n        {\n            \"date_stamp\": \"2020-04-05\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 128948\n        },\n        {\n            \"date_stamp\": \"2020-04-05\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 337072\n        },\n        {\n            \"date_stamp\": \"2020-04-06\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 16563\n        },\n        {\n            \"date_stamp\": \"2020-04-06\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 82665\n        },\n        {\n            \"date_stamp\": \"2020-04-06\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 136675\n        },\n        {\n            \"date_stamp\": \"2020-04-06\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 132547\n        },\n        {\n            \"date_stamp\": \"2020-04-06\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 366667\n        },\n        {\n            \"date_stamp\": \"2020-04-07\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 17872\n        },\n        {\n            \"date_stamp\": \"2020-04-07\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 82718\n        },\n        {\n            \"date_stamp\": \"2020-04-07\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 141942\n        },\n        {\n            \"date_stamp\": \"2020-04-07\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 135586\n        },\n        {\n            \"date_stamp\": \"2020-04-07\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 396223\n        },\n        {\n            \"date_stamp\": \"2020-04-08\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 19141\n        },\n        {\n            \"date_stamp\": \"2020-04-08\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 82809\n        },\n        {\n            \"date_stamp\": \"2020-04-08\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 148220\n        },\n        {\n            \"date_stamp\": \"2020-04-08\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 139422\n        },\n        {\n            \"date_stamp\": \"2020-04-08\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 429052\n        },\n        {\n            \"date_stamp\": \"2020-04-09\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 20654\n        },\n        {\n            \"date_stamp\": \"2020-04-09\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 82883\n        },\n        {\n            \"date_stamp\": \"2020-04-09\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 153222\n        },\n        {\n            \"date_stamp\": \"2020-04-09\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 143626\n        },\n        {\n            \"date_stamp\": \"2020-04-09\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 461437\n        },\n        {\n            \"date_stamp\": \"2020-04-10\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 22059\n        },\n        {\n            \"date_stamp\": \"2020-04-10\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 82941\n        },\n        {\n            \"date_stamp\": \"2020-04-10\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 158273\n        },\n        {\n            \"date_stamp\": \"2020-04-10\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 147577\n        },\n        {\n            \"date_stamp\": \"2020-04-10\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 496535\n        },\n        {\n            \"date_stamp\": \"2020-04-11\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 23316\n        },\n        {\n            \"date_stamp\": \"2020-04-11\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83014\n        },\n        {\n            \"date_stamp\": \"2020-04-11\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 163027\n        },\n        {\n            \"date_stamp\": \"2020-04-11\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 152271\n        },\n        {\n            \"date_stamp\": \"2020-04-11\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 526396\n        },\n        {\n            \"date_stamp\": \"2020-04-12\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 24299\n        },\n        {\n            \"date_stamp\": \"2020-04-12\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83134\n        },\n        {\n            \"date_stamp\": \"2020-04-12\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 166831\n        },\n        {\n            \"date_stamp\": \"2020-04-12\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 156363\n        },\n        {\n            \"date_stamp\": \"2020-04-12\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 555313\n        },\n        {\n            \"date_stamp\": \"2020-04-13\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 25680\n        },\n        {\n            \"date_stamp\": \"2020-04-13\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83213\n        },\n        {\n            \"date_stamp\": \"2020-04-13\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 170099\n        },\n        {\n            \"date_stamp\": \"2020-04-13\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 159516\n        },\n        {\n            \"date_stamp\": \"2020-04-13\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 580619\n        },\n        {\n            \"date_stamp\": \"2020-04-14\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 27035\n        },\n        {\n            \"date_stamp\": \"2020-04-14\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83306\n        },\n        {\n            \"date_stamp\": \"2020-04-14\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 172541\n        },\n        {\n            \"date_stamp\": \"2020-04-14\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 162488\n        },\n        {\n            \"date_stamp\": \"2020-04-14\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 607670\n        },\n        {\n            \"date_stamp\": \"2020-04-15\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 28209\n        },\n        {\n            \"date_stamp\": \"2020-04-15\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83356\n        },\n        {\n            \"date_stamp\": \"2020-04-15\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 177644\n        },\n        {\n            \"date_stamp\": \"2020-04-15\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 165155\n        },\n        {\n            \"date_stamp\": \"2020-04-15\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 636350\n        },\n        {\n            \"date_stamp\": \"2020-04-16\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 30809\n        },\n        {\n            \"date_stamp\": \"2020-04-16\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83403\n        },\n        {\n            \"date_stamp\": \"2020-04-16\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 184948\n        },\n        {\n            \"date_stamp\": \"2020-04-16\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 168941\n        },\n        {\n            \"date_stamp\": \"2020-04-16\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 667801\n        },\n        {\n            \"date_stamp\": \"2020-04-17\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 32814\n        },\n        {\n            \"date_stamp\": \"2020-04-17\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83760\n        },\n        {\n            \"date_stamp\": \"2020-04-17\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 190839\n        },\n        {\n            \"date_stamp\": \"2020-04-17\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 172434\n        },\n        {\n            \"date_stamp\": \"2020-04-17\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 699706\n        },\n        {\n            \"date_stamp\": \"2020-04-18\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 34356\n        },\n        {\n            \"date_stamp\": \"2020-04-18\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83787\n        },\n        {\n            \"date_stamp\": \"2020-04-18\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 191726\n        },\n        {\n            \"date_stamp\": \"2020-04-18\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 175925\n        },\n        {\n            \"date_stamp\": \"2020-04-18\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 732197\n        },\n        {\n            \"date_stamp\": \"2020-04-19\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 35633\n        },\n        {\n            \"date_stamp\": \"2020-04-19\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83805\n        },\n        {\n            \"date_stamp\": \"2020-04-19\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 198674\n        },\n        {\n            \"date_stamp\": \"2020-04-19\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 178972\n        },\n        {\n            \"date_stamp\": \"2020-04-19\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 759086\n        },\n        {\n            \"date_stamp\": \"2020-04-20\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 37658\n        },\n        {\n            \"date_stamp\": \"2020-04-20\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83817\n        },\n        {\n            \"date_stamp\": \"2020-04-20\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 200210\n        },\n        {\n            \"date_stamp\": \"2020-04-20\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 181228\n        },\n        {\n            \"date_stamp\": \"2020-04-20\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 784326\n        },\n        {\n            \"date_stamp\": \"2020-04-21\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 39402\n        },\n        {\n            \"date_stamp\": \"2020-04-21\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83853\n        },\n        {\n            \"date_stamp\": \"2020-04-21\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 204178\n        },\n        {\n            \"date_stamp\": \"2020-04-21\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 183957\n        },\n        {\n            \"date_stamp\": \"2020-04-21\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 812036\n        },\n        {\n            \"date_stamp\": \"2020-04-22\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 41650\n        },\n        {\n            \"date_stamp\": \"2020-04-22\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83868\n        },\n        {\n            \"date_stamp\": \"2020-04-22\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 208389\n        },\n        {\n            \"date_stamp\": \"2020-04-22\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 187327\n        },\n        {\n            \"date_stamp\": \"2020-04-22\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 839675\n        },\n        {\n            \"date_stamp\": \"2020-04-23\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 43286\n        },\n        {\n            \"date_stamp\": \"2020-04-23\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83884\n        },\n        {\n            \"date_stamp\": \"2020-04-23\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 213024\n        },\n        {\n            \"date_stamp\": \"2020-04-23\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 189973\n        },\n        {\n            \"date_stamp\": \"2020-04-23\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 869170\n        },\n        {\n            \"date_stamp\": \"2020-04-24\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 44056\n        },\n        {\n            \"date_stamp\": \"2020-04-24\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83899\n        },\n        {\n            \"date_stamp\": \"2020-04-24\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 219764\n        },\n        {\n            \"date_stamp\": \"2020-04-24\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 192994\n        },\n        {\n            \"date_stamp\": \"2020-04-24\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 905333\n        },\n        {\n            \"date_stamp\": \"2020-04-25\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 45493\n        },\n        {\n            \"date_stamp\": \"2020-04-25\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83909\n        },\n        {\n            \"date_stamp\": \"2020-04-25\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 223759\n        },\n        {\n            \"date_stamp\": \"2020-04-25\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 195351\n        },\n        {\n            \"date_stamp\": \"2020-04-25\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 938154\n        },\n        {\n            \"date_stamp\": \"2020-04-26\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 47147\n        },\n        {\n            \"date_stamp\": \"2020-04-26\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83912\n        },\n        {\n            \"date_stamp\": \"2020-04-26\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 226629\n        },\n        {\n            \"date_stamp\": \"2020-04-26\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 197675\n        },\n        {\n            \"date_stamp\": \"2020-04-26\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 965783\n        },\n        {\n            \"date_stamp\": \"2020-04-27\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 49616\n        },\n        {\n            \"date_stamp\": \"2020-04-27\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83918\n        },\n        {\n            \"date_stamp\": \"2020-04-27\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 229422\n        },\n        {\n            \"date_stamp\": \"2020-04-27\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 199414\n        },\n        {\n            \"date_stamp\": \"2020-04-27\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 988197\n        },\n        {\n            \"date_stamp\": \"2020-04-28\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 51150\n        },\n        {\n            \"date_stamp\": \"2020-04-28\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83940\n        },\n        {\n            \"date_stamp\": \"2020-04-28\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 232128\n        },\n        {\n            \"date_stamp\": \"2020-04-28\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 201505\n        },\n        {\n            \"date_stamp\": \"2020-04-28\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1012582\n        },\n        {\n            \"date_stamp\": \"2020-04-29\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 52865\n        },\n        {\n            \"date_stamp\": \"2020-04-29\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83944\n        },\n        {\n            \"date_stamp\": \"2020-04-29\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 236899\n        },\n        {\n            \"date_stamp\": \"2020-04-29\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 203591\n        },\n        {\n            \"date_stamp\": \"2020-04-29\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1039909\n        },\n        {\n            \"date_stamp\": \"2020-04-30\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 54457\n        },\n        {\n            \"date_stamp\": \"2020-04-30\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83956\n        },\n        {\n            \"date_stamp\": \"2020-04-30\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 213435\n        },\n        {\n            \"date_stamp\": \"2020-04-30\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 205463\n        },\n        {\n            \"date_stamp\": \"2020-04-30\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1069424\n        },\n        {\n            \"date_stamp\": \"2020-05-01\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 56343\n        },\n        {\n            \"date_stamp\": \"2020-05-01\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83959\n        },\n        {\n            \"date_stamp\": \"2020-05-01\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 213435\n        },\n        {\n            \"date_stamp\": \"2020-05-01\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 207428\n        },\n        {\n            \"date_stamp\": \"2020-05-01\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1103461\n        },\n        {\n            \"date_stamp\": \"2020-05-02\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 57926\n        },\n        {\n            \"date_stamp\": \"2020-05-02\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83959\n        },\n        {\n            \"date_stamp\": \"2020-05-02\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 216582\n        },\n        {\n            \"date_stamp\": \"2020-05-02\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 209328\n        },\n        {\n            \"date_stamp\": \"2020-05-02\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1132539\n        },\n        {\n            \"date_stamp\": \"2020-05-03\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 60504\n        },\n        {\n            \"date_stamp\": \"2020-05-03\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83964\n        },\n        {\n            \"date_stamp\": \"2020-05-03\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 217466\n        },\n        {\n            \"date_stamp\": \"2020-05-03\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 210717\n        },\n        {\n            \"date_stamp\": \"2020-05-03\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1158040\n        },\n        {\n            \"date_stamp\": \"2020-05-04\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 61957\n        },\n        {\n            \"date_stamp\": \"2020-05-04\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83966\n        },\n        {\n            \"date_stamp\": \"2020-05-04\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 218011\n        },\n        {\n            \"date_stamp\": \"2020-05-04\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 211938\n        },\n        {\n            \"date_stamp\": \"2020-05-04\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1180375\n        },\n        {\n            \"date_stamp\": \"2020-05-05\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 63215\n        },\n        {\n            \"date_stamp\": \"2020-05-05\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83968\n        },\n        {\n            \"date_stamp\": \"2020-05-05\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 219329\n        },\n        {\n            \"date_stamp\": \"2020-05-05\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 213013\n        },\n        {\n            \"date_stamp\": \"2020-05-05\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1204351\n        },\n        {\n            \"date_stamp\": \"2020-05-06\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 64694\n        },\n        {\n            \"date_stamp\": \"2020-05-06\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83970\n        },\n        {\n            \"date_stamp\": \"2020-05-06\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 220325\n        },\n        {\n            \"date_stamp\": \"2020-05-06\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 214457\n        },\n        {\n            \"date_stamp\": \"2020-05-06\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1228603\n        },\n        {\n            \"date_stamp\": \"2020-05-07\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 66201\n        },\n        {\n            \"date_stamp\": \"2020-05-07\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83975\n        },\n        {\n            \"date_stamp\": \"2020-05-07\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 221447\n        },\n        {\n            \"date_stamp\": \"2020-05-07\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 215858\n        },\n        {\n            \"date_stamp\": \"2020-05-07\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1257023\n        },\n        {\n            \"date_stamp\": \"2020-05-08\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 67674\n        },\n        {\n            \"date_stamp\": \"2020-05-08\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83976\n        },\n        {\n            \"date_stamp\": \"2020-05-08\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 222857\n        },\n        {\n            \"date_stamp\": \"2020-05-08\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 217185\n        },\n        {\n            \"date_stamp\": \"2020-05-08\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1283929\n        },\n        {\n            \"date_stamp\": \"2020-05-09\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 68918\n        },\n        {\n            \"date_stamp\": \"2020-05-09\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 83990\n        },\n        {\n            \"date_stamp\": \"2020-05-09\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 223578\n        },\n        {\n            \"date_stamp\": \"2020-05-09\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 218268\n        },\n        {\n            \"date_stamp\": \"2020-05-09\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1309550\n        },\n        {\n            \"date_stamp\": \"2020-05-10\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 70091\n        },\n        {\n            \"date_stamp\": \"2020-05-10\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84010\n        },\n        {\n            \"date_stamp\": \"2020-05-10\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 224350\n        },\n        {\n            \"date_stamp\": \"2020-05-10\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 219070\n        },\n        {\n            \"date_stamp\": \"2020-05-10\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1329260\n        },\n        {\n            \"date_stamp\": \"2020-05-11\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 71264\n        },\n        {\n            \"date_stamp\": \"2020-05-11\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84011\n        },\n        {\n            \"date_stamp\": \"2020-05-11\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 227436\n        },\n        {\n            \"date_stamp\": \"2020-05-11\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 219814\n        },\n        {\n            \"date_stamp\": \"2020-05-11\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1347881\n        },\n        {\n            \"date_stamp\": \"2020-05-12\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 72419\n        },\n        {\n            \"date_stamp\": \"2020-05-12\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84018\n        },\n        {\n            \"date_stamp\": \"2020-05-12\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 228030\n        },\n        {\n            \"date_stamp\": \"2020-05-12\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 221216\n        },\n        {\n            \"date_stamp\": \"2020-05-12\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1369574\n        },\n        {\n            \"date_stamp\": \"2020-05-13\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 73568\n        },\n        {\n            \"date_stamp\": \"2020-05-13\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84024\n        },\n        {\n            \"date_stamp\": \"2020-05-13\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 228691\n        },\n        {\n            \"date_stamp\": \"2020-05-13\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 222104\n        },\n        {\n            \"date_stamp\": \"2020-05-13\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1390406\n        },\n        {\n            \"date_stamp\": \"2020-05-14\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 74781\n        },\n        {\n            \"date_stamp\": \"2020-05-14\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84029\n        },\n        {\n            \"date_stamp\": \"2020-05-14\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 229540\n        },\n        {\n            \"date_stamp\": \"2020-05-14\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 223096\n        },\n        {\n            \"date_stamp\": \"2020-05-14\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1417774\n        },\n        {\n            \"date_stamp\": \"2020-05-15\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 75959\n        },\n        {\n            \"date_stamp\": \"2020-05-15\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84038\n        },\n        {\n            \"date_stamp\": \"2020-05-15\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 230183\n        },\n        {\n            \"date_stamp\": \"2020-05-15\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 223885\n        },\n        {\n            \"date_stamp\": \"2020-05-15\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1442824\n        },\n        {\n            \"date_stamp\": \"2020-05-16\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 77206\n        },\n        {\n            \"date_stamp\": \"2020-05-16\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84044\n        },\n        {\n            \"date_stamp\": \"2020-05-16\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 230698\n        },\n        {\n            \"date_stamp\": \"2020-05-16\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 224760\n        },\n        {\n            \"date_stamp\": \"2020-05-16\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1467820\n        },\n        {\n            \"date_stamp\": \"2020-05-17\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 78332\n        },\n        {\n            \"date_stamp\": \"2020-05-17\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84054\n        },\n        {\n            \"date_stamp\": \"2020-05-17\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 230698\n        },\n        {\n            \"date_stamp\": \"2020-05-17\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 225435\n        },\n        {\n            \"date_stamp\": \"2020-05-17\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1486757\n        },\n        {\n            \"date_stamp\": \"2020-05-18\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 79411\n        },\n        {\n            \"date_stamp\": \"2020-05-18\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84063\n        },\n        {\n            \"date_stamp\": \"2020-05-18\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 231606\n        },\n        {\n            \"date_stamp\": \"2020-05-18\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 225886\n        },\n        {\n            \"date_stamp\": \"2020-05-18\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1508308\n        },\n        {\n            \"date_stamp\": \"2020-05-19\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 80493\n        },\n        {\n            \"date_stamp\": \"2020-05-19\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84063\n        },\n        {\n            \"date_stamp\": \"2020-05-19\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 232037\n        },\n        {\n            \"date_stamp\": \"2020-05-19\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 226699\n        },\n        {\n            \"date_stamp\": \"2020-05-19\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1528568\n        },\n        {\n            \"date_stamp\": \"2020-05-20\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 81575\n        },\n        {\n            \"date_stamp\": \"2020-05-20\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84063\n        },\n        {\n            \"date_stamp\": \"2020-05-20\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 232555\n        },\n        {\n            \"date_stamp\": \"2020-05-20\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 227364\n        },\n        {\n            \"date_stamp\": \"2020-05-20\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1551853\n        },\n        {\n            \"date_stamp\": \"2020-05-21\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 82742\n        },\n        {\n            \"date_stamp\": \"2020-05-21\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84063\n        },\n        {\n            \"date_stamp\": \"2020-05-21\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 233037\n        },\n        {\n            \"date_stamp\": \"2020-05-21\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 228006\n        },\n        {\n            \"date_stamp\": \"2020-05-21\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1577147\n        },\n        {\n            \"date_stamp\": \"2020-05-22\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 83947\n        },\n        {\n            \"date_stamp\": \"2020-05-22\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84081\n        },\n        {\n            \"date_stamp\": \"2020-05-22\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 234824\n        },\n        {\n            \"date_stamp\": \"2020-05-22\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 228658\n        },\n        {\n            \"date_stamp\": \"2020-05-22\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1600937\n        },\n        {\n            \"date_stamp\": \"2020-05-23\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 85151\n        },\n        {\n            \"date_stamp\": \"2020-05-23\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84084\n        },\n        {\n            \"date_stamp\": \"2020-05-23\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 235290\n        },\n        {\n            \"date_stamp\": \"2020-05-23\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 229327\n        },\n        {\n            \"date_stamp\": \"2020-05-23\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1622612\n        },\n        {\n            \"date_stamp\": \"2020-05-24\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 86106\n        },\n        {\n            \"date_stamp\": \"2020-05-24\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84095\n        },\n        {\n            \"date_stamp\": \"2020-05-24\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 235772\n        },\n        {\n            \"date_stamp\": \"2020-05-24\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 229858\n        },\n        {\n            \"date_stamp\": \"2020-05-24\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1643246\n        },\n        {\n            \"date_stamp\": \"2020-05-25\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 87119\n        },\n        {\n            \"date_stamp\": \"2020-05-25\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84102\n        },\n        {\n            \"date_stamp\": \"2020-05-25\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 235400\n        },\n        {\n            \"date_stamp\": \"2020-05-25\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 230158\n        },\n        {\n            \"date_stamp\": \"2020-05-25\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1662302\n        },\n        {\n            \"date_stamp\": \"2020-05-26\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 88090\n        },\n        {\n            \"date_stamp\": \"2020-05-26\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84103\n        },\n        {\n            \"date_stamp\": \"2020-05-26\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 236259\n        },\n        {\n            \"date_stamp\": \"2020-05-26\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 230555\n        },\n        {\n            \"date_stamp\": \"2020-05-26\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1680913\n        },\n        {\n            \"date_stamp\": \"2020-05-27\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 88989\n        },\n        {\n            \"date_stamp\": \"2020-05-27\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84106\n        },\n        {\n            \"date_stamp\": \"2020-05-27\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 236259\n        },\n        {\n            \"date_stamp\": \"2020-05-27\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 231139\n        },\n        {\n            \"date_stamp\": \"2020-05-27\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1699176\n        },\n        {\n            \"date_stamp\": \"2020-05-28\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 89976\n        },\n        {\n            \"date_stamp\": \"2020-05-28\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84106\n        },\n        {\n            \"date_stamp\": \"2020-05-28\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 237906\n        },\n        {\n            \"date_stamp\": \"2020-05-28\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 231732\n        },\n        {\n            \"date_stamp\": \"2020-05-28\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1721753\n        },\n        {\n            \"date_stamp\": \"2020-05-29\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 90909\n        },\n        {\n            \"date_stamp\": \"2020-05-29\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84123\n        },\n        {\n            \"date_stamp\": \"2020-05-29\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 238564\n        },\n        {\n            \"date_stamp\": \"2020-05-29\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 232248\n        },\n        {\n            \"date_stamp\": \"2020-05-29\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1746019\n        },\n        {\n            \"date_stamp\": \"2020-05-30\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 91681\n        },\n        {\n            \"date_stamp\": \"2020-05-30\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84128\n        },\n        {\n            \"date_stamp\": \"2020-05-30\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 239228\n        },\n        {\n            \"date_stamp\": \"2020-05-30\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 232664\n        },\n        {\n            \"date_stamp\": \"2020-05-30\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1770165\n        },\n        {\n            \"date_stamp\": \"2020-05-31\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 92479\n        },\n        {\n            \"date_stamp\": \"2020-05-31\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84146\n        },\n        {\n            \"date_stamp\": \"2020-05-31\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 239479\n        },\n        {\n            \"date_stamp\": \"2020-05-31\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 232997\n        },\n        {\n            \"date_stamp\": \"2020-05-31\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1790172\n        },\n        {\n            \"date_stamp\": \"2020-06-01\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 93288\n        },\n        {\n            \"date_stamp\": \"2020-06-01\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84154\n        },\n        {\n            \"date_stamp\": \"2020-06-01\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 239638\n        },\n        {\n            \"date_stamp\": \"2020-06-01\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 233197\n        },\n        {\n            \"date_stamp\": \"2020-06-01\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1811360\n        },\n        {\n            \"date_stamp\": \"2020-06-02\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 93960\n        },\n        {\n            \"date_stamp\": \"2020-06-02\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84161\n        },\n        {\n            \"date_stamp\": \"2020-06-02\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 239932\n        },\n        {\n            \"date_stamp\": \"2020-06-02\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 233515\n        },\n        {\n            \"date_stamp\": \"2020-06-02\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1831821\n        },\n        {\n            \"date_stamp\": \"2020-06-03\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 94641\n        },\n        {\n            \"date_stamp\": \"2020-06-03\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84160\n        },\n        {\n            \"date_stamp\": \"2020-06-03\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 240326\n        },\n        {\n            \"date_stamp\": \"2020-06-03\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 233836\n        },\n        {\n            \"date_stamp\": \"2020-06-03\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1851520\n        },\n        {\n            \"date_stamp\": \"2020-06-04\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 95269\n        },\n        {\n            \"date_stamp\": \"2020-06-04\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84171\n        },\n        {\n            \"date_stamp\": \"2020-06-04\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 240660\n        },\n        {\n            \"date_stamp\": \"2020-06-04\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 234013\n        },\n        {\n            \"date_stamp\": \"2020-06-04\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1872660\n        },\n        {\n            \"date_stamp\": \"2020-06-05\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 95947\n        },\n        {\n            \"date_stamp\": \"2020-06-05\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84177\n        },\n        {\n            \"date_stamp\": \"2020-06-05\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 240978\n        },\n        {\n            \"date_stamp\": \"2020-06-05\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 234531\n        },\n        {\n            \"date_stamp\": \"2020-06-05\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1897380\n        },\n        {\n            \"date_stamp\": \"2020-06-06\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 96475\n        },\n        {\n            \"date_stamp\": \"2020-06-06\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84186\n        },\n        {\n            \"date_stamp\": \"2020-06-06\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 241310\n        },\n        {\n            \"date_stamp\": \"2020-06-06\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 234801\n        },\n        {\n            \"date_stamp\": \"2020-06-06\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1920061\n        },\n        {\n            \"date_stamp\": \"2020-06-07\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 97178\n        },\n        {\n            \"date_stamp\": \"2020-06-07\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84191\n        },\n        {\n            \"date_stamp\": \"2020-06-07\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 241550\n        },\n        {\n            \"date_stamp\": \"2020-06-07\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 234998\n        },\n        {\n            \"date_stamp\": \"2020-06-07\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1942363\n        },\n        {\n            \"date_stamp\": \"2020-06-08\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 97779\n        },\n        {\n            \"date_stamp\": \"2020-06-08\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84195\n        },\n        {\n            \"date_stamp\": \"2020-06-08\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 241717\n        },\n        {\n            \"date_stamp\": \"2020-06-08\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 235278\n        },\n        {\n            \"date_stamp\": \"2020-06-08\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1960897\n        },\n        {\n            \"date_stamp\": \"2020-06-09\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 98241\n        },\n        {\n            \"date_stamp\": \"2020-06-09\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84198\n        },\n        {\n            \"date_stamp\": \"2020-06-09\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 241966\n        },\n        {\n            \"date_stamp\": \"2020-06-09\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 235561\n        },\n        {\n            \"date_stamp\": \"2020-06-09\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 1979411\n        },\n        {\n            \"date_stamp\": \"2020-06-10\",\n            \"iso3166_1\": \"Canada\",\n            \"cnt_confirmed\": 98720\n        },\n        {\n            \"date_stamp\": \"2020-06-10\",\n            \"iso3166_1\": \"China\",\n            \"cnt_confirmed\": 84209\n        },\n        {\n            \"date_stamp\": \"2020-06-10\",\n            \"iso3166_1\": \"Spain\",\n            \"cnt_confirmed\": 242280\n        },\n        {\n            \"date_stamp\": \"2020-06-10\",\n            \"iso3166_1\": \"Italy\",\n            \"cnt_confirmed\": 235763\n        },\n        {\n            \"date_stamp\": \"2020-06-10\",\n            \"iso3166_1\": \"United States of America\",\n            \"cnt_confirmed\": 2000464\n        }\n    ]\n}"
								},
								{
									"name": "Confirmed cases in 2020 for CA, CN, ES, IT, USA",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://covid19.richdataservices.com/rds/api/query/int/jhu_country/tabulate?dims=date_stamp,iso3166_1&where=(year_stamp=2020) AND (iso3166_1=US OR iso3166_1=CA OR iso3166_1=ES OR iso3166_1=IT OR iso3166_1=CN)&measure=cnt_confirmed:SUM(cnt_confirmed)&inject=true&metadata=true&orderBy=date_stamp ASC,iso3166_1 ASC&totals=true",
											"protocol": "https",
											"host": [
												"covid19",
												"richdataservices",
												"com"
											],
											"path": [
												"rds",
												"api",
												"query",
												"int",
												"jhu_country",
												"tabulate"
											],
											"query": [
												{
													"key": "dims",
													"value": "date_stamp,iso3166_1"
												},
												{
													"key": "where",
													"value": "(year_stamp=2020) AND (iso3166_1=US OR iso3166_1=CA OR iso3166_1=ES OR iso3166_1=IT OR iso3166_1=CN)"
												},
												{
													"key": "measure",
													"value": "cnt_confirmed:SUM(cnt_confirmed)"
												},
												{
													"key": "inject",
													"value": "true"
												},
												{
													"key": "metadata",
													"value": "true"
												},
												{
													"key": "orderBy",
													"value": "date_stamp ASC,iso3166_1 ASC"
												},
												{
													"key": "totals",
													"value": "true"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 18 Jun 2020 14:35:50 GMT"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"info\": {\n        \"cached\": false,\n        \"columnCount\": 3,\n        \"columnOffset\": 0,\n        \"end\": \"2020-06-18T14:35:49.957Z\",\n        \"includeMetadata\": true,\n        \"moreColumns\": false,\n        \"moreRows\": false,\n        \"notes\": [],\n        \"postQueryTime\": 0,\n        \"preQueryTime\": 102,\n        \"queryTime\": 20,\n        \"rowCount\": 682,\n        \"rowLimit\": 682,\n        \"rowOffset\": 0,\n        \"start\": \"2020-06-18T14:35:49.835Z\",\n        \"tableCellCount\": 705,\n        \"totalProcessingTime\": 122\n    },\n    \"records\": [\n        [\n            \"2020-01-22\",\n            \"China\",\n            547\n        ],\n        [\n            \"2020-01-22\",\n            \"United States of America\",\n            1\n        ],\n        [\n            \"2020-01-23\",\n            \"China\",\n            639\n        ],\n        [\n            \"2020-01-23\",\n            \"United States of America\",\n            1\n        ],\n        [\n            \"2020-01-24\",\n            \"China\",\n            916\n        ],\n        [\n            \"2020-01-24\",\n            \"United States of America\",\n            2\n        ],\n        [\n            \"2020-01-25\",\n            \"China\",\n            1399\n        ],\n        [\n            \"2020-01-25\",\n            \"United States of America\",\n            2\n        ],\n        [\n            \"2020-01-26\",\n            \"Canada\",\n            1\n        ],\n        [\n            \"2020-01-26\",\n            \"China\",\n            2062\n        ],\n        [\n            \"2020-01-26\",\n            \"United States of America\",\n            5\n        ],\n        [\n            \"2020-01-27\",\n            \"Canada\",\n            1\n        ],\n        [\n            \"2020-01-27\",\n            \"China\",\n            2863\n        ],\n        [\n            \"2020-01-27\",\n            \"United States of America\",\n            5\n        ],\n        [\n            \"2020-01-28\",\n            \"Canada\",\n            2\n        ],\n        [\n            \"2020-01-28\",\n            \"China\",\n            5494\n        ],\n        [\n            \"2020-01-28\",\n            \"United States of America\",\n            5\n        ],\n        [\n            \"2020-01-29\",\n            \"Canada\",\n            2\n        ],\n        [\n            \"2020-01-29\",\n            \"China\",\n            6070\n        ],\n        [\n            \"2020-01-29\",\n            \"United States of America\",\n            5\n        ],\n        [\n            \"2020-01-30\",\n            \"Canada\",\n            3\n        ],\n        [\n            \"2020-01-30\",\n            \"China\",\n            8124\n        ],\n        [\n            \"2020-01-30\",\n            \"United States of America\",\n            5\n        ],\n        [\n            \"2020-01-31\",\n            \"Canada\",\n            3\n        ],\n        [\n            \"2020-01-31\",\n            \"China\",\n            9783\n        ],\n        [\n            \"2020-01-31\",\n            \"Italy\",\n            2\n        ],\n        [\n            \"2020-01-31\",\n            \"United States of America\",\n            6\n        ],\n        [\n            \"2020-02-01\",\n            \"Canada\",\n            4\n        ],\n        [\n            \"2020-02-01\",\n            \"China\",\n            11871\n        ],\n        [\n            \"2020-02-01\",\n            \"Spain\",\n            1\n        ],\n        [\n            \"2020-02-01\",\n            \"Italy\",\n            2\n        ],\n        [\n            \"2020-02-01\",\n            \"United States of America\",\n            8\n        ],\n        [\n            \"2020-02-02\",\n            \"Canada\",\n            4\n        ],\n        [\n            \"2020-02-02\",\n            \"China\",\n            16607\n        ],\n        [\n            \"2020-02-02\",\n            \"Spain\",\n            1\n        ],\n        [\n            \"2020-02-02\",\n            \"Italy\",\n            2\n        ],\n        [\n            \"2020-02-02\",\n            \"United States of America\",\n            8\n        ],\n        [\n            \"2020-02-03\",\n            \"Canada\",\n            4\n        ],\n        [\n            \"2020-02-03\",\n            \"China\",\n            19693\n        ],\n        [\n            \"2020-02-03\",\n            \"Spain\",\n            1\n        ],\n        [\n            \"2020-02-03\",\n            \"Italy\",\n            2\n        ],\n        [\n            \"2020-02-03\",\n            \"United States of America\",\n            11\n        ],\n        [\n            \"2020-02-04\",\n            \"Canada\",\n            4\n        ],\n        [\n            \"2020-02-04\",\n            \"China\",\n            23680\n        ],\n        [\n            \"2020-02-04\",\n            \"Spain\",\n            1\n        ],\n        [\n            \"2020-02-04\",\n            \"Italy\",\n            2\n        ],\n        [\n            \"2020-02-04\",\n            \"United States of America\",\n            11\n        ],\n        [\n            \"2020-02-05\",\n            \"Canada\",\n            5\n        ],\n        [\n            \"2020-02-05\",\n            \"China\",\n            27409\n        ],\n        [\n            \"2020-02-05\",\n            \"Spain\",\n            1\n        ],\n        [\n            \"2020-02-05\",\n            \"Italy\",\n            2\n        ],\n        [\n            \"2020-02-05\",\n            \"United States of America\",\n            12\n        ],\n        [\n            \"2020-02-06\",\n            \"Canada\",\n            5\n        ],\n        [\n            \"2020-02-06\",\n            \"China\",\n            30553\n        ],\n        [\n            \"2020-02-06\",\n            \"Spain\",\n            1\n        ],\n        [\n            \"2020-02-06\",\n            \"Italy\",\n            2\n        ],\n        [\n            \"2020-02-06\",\n            \"United States of America\",\n            12\n        ],\n        [\n            \"2020-02-07\",\n            \"Canada\",\n            7\n        ],\n        [\n            \"2020-02-07\",\n            \"China\",\n            34075\n        ],\n        [\n            \"2020-02-07\",\n            \"Spain\",\n            1\n        ],\n        [\n            \"2020-02-07\",\n            \"Italy\",\n            3\n        ],\n        [\n            \"2020-02-07\",\n            \"United States of America\",\n            12\n        ],\n        [\n            \"2020-02-08\",\n            \"Canada\",\n            7\n        ],\n        [\n            \"2020-02-08\",\n            \"China\",\n            36778\n        ],\n        [\n            \"2020-02-08\",\n            \"Spain\",\n            1\n        ],\n        [\n            \"2020-02-08\",\n            \"Italy\",\n            3\n        ],\n        [\n            \"2020-02-08\",\n            \"United States of America\",\n            12\n        ],\n        [\n            \"2020-02-09\",\n            \"Canada\",\n            7\n        ],\n        [\n            \"2020-02-09\",\n            \"China\",\n            39790\n        ],\n        [\n            \"2020-02-09\",\n            \"Spain\",\n            2\n        ],\n        [\n            \"2020-02-09\",\n            \"Italy\",\n            3\n        ],\n        [\n            \"2020-02-09\",\n            \"United States of America\",\n            12\n        ],\n        [\n            \"2020-02-10\",\n            \"Canada\",\n            7\n        ],\n        [\n            \"2020-02-10\",\n            \"China\",\n            42306\n        ],\n        [\n            \"2020-02-10\",\n            \"Spain\",\n            2\n        ],\n        [\n            \"2020-02-10\",\n            \"Italy\",\n            3\n        ],\n        [\n            \"2020-02-10\",\n            \"United States of America\",\n            12\n        ],\n        [\n            \"2020-02-11\",\n            \"Canada\",\n            7\n        ],\n        [\n            \"2020-02-11\",\n            \"China\",\n            44327\n        ],\n        [\n            \"2020-02-11\",\n            \"Spain\",\n            2\n        ],\n        [\n            \"2020-02-11\",\n            \"Italy\",\n            3\n        ],\n        [\n            \"2020-02-11\",\n            \"United States of America\",\n            13\n        ],\n        [\n            \"2020-02-12\",\n            \"Canada\",\n            7\n        ],\n        [\n            \"2020-02-12\",\n            \"China\",\n            44699\n        ],\n        [\n            \"2020-02-12\",\n            \"Spain\",\n            2\n        ],\n        [\n            \"2020-02-12\",\n            \"Italy\",\n            3\n        ],\n        [\n            \"2020-02-12\",\n            \"United States of America\",\n            13\n        ],\n        [\n            \"2020-02-13\",\n            \"Canada\",\n            7\n        ],\n        [\n            \"2020-02-13\",\n            \"China\",\n            59832\n        ],\n        [\n            \"2020-02-13\",\n            \"Spain\",\n            2\n        ],\n        [\n            \"2020-02-13\",\n            \"Italy\",\n            3\n        ],\n        [\n            \"2020-02-13\",\n            \"United States of America\",\n            15\n        ],\n        [\n            \"2020-02-14\",\n            \"Canada\",\n            7\n        ],\n        [\n            \"2020-02-14\",\n            \"China\",\n            66292\n        ],\n        [\n            \"2020-02-14\",\n            \"Spain\",\n            2\n        ],\n        [\n            \"2020-02-14\",\n            \"Italy\",\n            3\n        ],\n        [\n            \"2020-02-14\",\n            \"United States of America\",\n            15\n        ],\n        [\n            \"2020-02-15\",\n            \"Canada\",\n            7\n        ],\n        [\n            \"2020-02-15\",\n            \"China\",\n            68347\n        ],\n        [\n            \"2020-02-15\",\n            \"Spain\",\n            2\n        ],\n        [\n            \"2020-02-15\",\n            \"Italy\",\n            3\n        ],\n        [\n            \"2020-02-15\",\n            \"United States of America\",\n            15\n        ],\n        [\n            \"2020-02-16\",\n            \"Canada\",\n            7\n        ],\n        [\n            \"2020-02-16\",\n            \"China\",\n            70446\n        ],\n        [\n            \"2020-02-16\",\n            \"Spain\",\n            2\n        ],\n        [\n            \"2020-02-16\",\n            \"Italy\",\n            3\n        ],\n        [\n            \"2020-02-16\",\n            \"United States of America\",\n            15\n        ],\n        [\n            \"2020-02-17\",\n            \"Canada\",\n            8\n        ],\n        [\n            \"2020-02-17\",\n            \"China\",\n            72364\n        ],\n        [\n            \"2020-02-17\",\n            \"Spain\",\n            2\n        ],\n        [\n            \"2020-02-17\",\n            \"Italy\",\n            3\n        ],\n        [\n            \"2020-02-17\",\n            \"United States of America\",\n            15\n        ],\n        [\n            \"2020-02-18\",\n            \"Canada\",\n            8\n        ],\n        [\n            \"2020-02-18\",\n            \"China\",\n            74139\n        ],\n        [\n            \"2020-02-18\",\n            \"Spain\",\n            2\n        ],\n        [\n            \"2020-02-18\",\n            \"Italy\",\n            3\n        ],\n        [\n            \"2020-02-18\",\n            \"United States of America\",\n            15\n        ],\n        [\n            \"2020-02-19\",\n            \"Canada\",\n            8\n        ],\n        [\n            \"2020-02-19\",\n            \"China\",\n            74546\n        ],\n        [\n            \"2020-02-19\",\n            \"Spain\",\n            2\n        ],\n        [\n            \"2020-02-19\",\n            \"Italy\",\n            3\n        ],\n        [\n            \"2020-02-19\",\n            \"United States of America\",\n            15\n        ],\n        [\n            \"2020-02-20\",\n            \"Canada\",\n            8\n        ],\n        [\n            \"2020-02-20\",\n            \"China\",\n            74999\n        ],\n        [\n            \"2020-02-20\",\n            \"Spain\",\n            2\n        ],\n        [\n            \"2020-02-20\",\n            \"Italy\",\n            3\n        ],\n        [\n            \"2020-02-20\",\n            \"United States of America\",\n            15\n        ],\n        [\n            \"2020-02-21\",\n            \"Canada\",\n            9\n        ],\n        [\n            \"2020-02-21\",\n            \"China\",\n            75472\n        ],\n        [\n            \"2020-02-21\",\n            \"Spain\",\n            2\n        ],\n        [\n            \"2020-02-21\",\n            \"Italy\",\n            20\n        ],\n        [\n            \"2020-02-21\",\n            \"United States of America\",\n            35\n        ],\n        [\n            \"2020-02-22\",\n            \"Canada\",\n            9\n        ],\n        [\n            \"2020-02-22\",\n            \"China\",\n            76922\n        ],\n        [\n            \"2020-02-22\",\n            \"Spain\",\n            2\n        ],\n        [\n            \"2020-02-22\",\n            \"Italy\",\n            62\n        ],\n        [\n            \"2020-02-22\",\n            \"United States of America\",\n            35\n        ],\n        [\n            \"2020-02-23\",\n            \"Canada\",\n            9\n        ],\n        [\n            \"2020-02-23\",\n            \"China\",\n            76938\n        ],\n        [\n            \"2020-02-23\",\n            \"Spain\",\n            2\n        ],\n        [\n            \"2020-02-23\",\n            \"Italy\",\n            155\n        ],\n        [\n            \"2020-02-23\",\n            \"United States of America\",\n            35\n        ],\n        [\n            \"2020-02-24\",\n            \"Canada\",\n            10\n        ],\n        [\n            \"2020-02-24\",\n            \"China\",\n            77152\n        ],\n        [\n            \"2020-02-24\",\n            \"Spain\",\n            2\n        ],\n        [\n            \"2020-02-24\",\n            \"Italy\",\n            229\n        ],\n        [\n            \"2020-02-24\",\n            \"United States of America\",\n            53\n        ],\n        [\n            \"2020-02-25\",\n            \"Canada\",\n            11\n        ],\n        [\n            \"2020-02-25\",\n            \"China\",\n            77660\n        ],\n        [\n            \"2020-02-25\",\n            \"Spain\",\n            6\n        ],\n        [\n            \"2020-02-25\",\n            \"Italy\",\n            322\n        ],\n        [\n            \"2020-02-25\",\n            \"United States of America\",\n            53\n        ],\n        [\n            \"2020-02-26\",\n            \"Canada\",\n            11\n        ],\n        [\n            \"2020-02-26\",\n            \"China\",\n            78065\n        ],\n        [\n            \"2020-02-26\",\n            \"Spain\",\n            13\n        ],\n        [\n            \"2020-02-26\",\n            \"Italy\",\n            453\n        ],\n        [\n            \"2020-02-26\",\n            \"United States of America\",\n            59\n        ],\n        [\n            \"2020-02-27\",\n            \"Canada\",\n            13\n        ],\n        [\n            \"2020-02-27\",\n            \"China\",\n            78498\n        ],\n        [\n            \"2020-02-27\",\n            \"Spain\",\n            15\n        ],\n        [\n            \"2020-02-27\",\n            \"Italy\",\n            655\n        ],\n        [\n            \"2020-02-27\",\n            \"United States of America\",\n            60\n        ],\n        [\n            \"2020-02-28\",\n            \"Canada\",\n            14\n        ],\n        [\n            \"2020-02-28\",\n            \"China\",\n            78824\n        ],\n        [\n            \"2020-02-28\",\n            \"Spain\",\n            32\n        ],\n        [\n            \"2020-02-28\",\n            \"Italy\",\n            888\n        ],\n        [\n            \"2020-02-28\",\n            \"United States of America\",\n            62\n        ],\n        [\n            \"2020-02-29\",\n            \"Canada\",\n            20\n        ],\n        [\n            \"2020-02-29\",\n            \"China\",\n            79251\n        ],\n        [\n            \"2020-02-29\",\n            \"Spain\",\n            45\n        ],\n        [\n            \"2020-02-29\",\n            \"Italy\",\n            1128\n        ],\n        [\n            \"2020-02-29\",\n            \"United States of America\",\n            70\n        ],\n        [\n            \"2020-03-01\",\n            \"Canada\",\n            24\n        ],\n        [\n            \"2020-03-01\",\n            \"China\",\n            79826\n        ],\n        [\n            \"2020-03-01\",\n            \"Spain\",\n            84\n        ],\n        [\n            \"2020-03-01\",\n            \"Italy\",\n            1694\n        ],\n        [\n            \"2020-03-01\",\n            \"United States of America\",\n            76\n        ],\n        [\n            \"2020-03-02\",\n            \"Canada\",\n            27\n        ],\n        [\n            \"2020-03-02\",\n            \"China\",\n            80026\n        ],\n        [\n            \"2020-03-02\",\n            \"Spain\",\n            120\n        ],\n        [\n            \"2020-03-02\",\n            \"Italy\",\n            2036\n        ],\n        [\n            \"2020-03-02\",\n            \"United States of America\",\n            101\n        ],\n        [\n            \"2020-03-03\",\n            \"Canada\",\n            30\n        ],\n        [\n            \"2020-03-03\",\n            \"China\",\n            80151\n        ],\n        [\n            \"2020-03-03\",\n            \"Spain\",\n            165\n        ],\n        [\n            \"2020-03-03\",\n            \"Italy\",\n            2502\n        ],\n        [\n            \"2020-03-03\",\n            \"United States of America\",\n            122\n        ],\n        [\n            \"2020-03-04\",\n            \"Canada\",\n            33\n        ],\n        [\n            \"2020-03-04\",\n            \"China\",\n            80271\n        ],\n        [\n            \"2020-03-04\",\n            \"Spain\",\n            222\n        ],\n        [\n            \"2020-03-04\",\n            \"Italy\",\n            3089\n        ],\n        [\n            \"2020-03-04\",\n            \"United States of America\",\n            153\n        ],\n        [\n            \"2020-03-05\",\n            \"Canada\",\n            37\n        ],\n        [\n            \"2020-03-05\",\n            \"China\",\n            80422\n        ],\n        [\n            \"2020-03-05\",\n            \"Spain\",\n            259\n        ],\n        [\n            \"2020-03-05\",\n            \"Italy\",\n            3858\n        ],\n        [\n            \"2020-03-05\",\n            \"United States of America\",\n            221\n        ],\n        [\n            \"2020-03-06\",\n            \"Canada\",\n            49\n        ],\n        [\n            \"2020-03-06\",\n            \"China\",\n            80573\n        ],\n        [\n            \"2020-03-06\",\n            \"Spain\",\n            400\n        ],\n        [\n            \"2020-03-06\",\n            \"Italy\",\n            4636\n        ],\n        [\n            \"2020-03-06\",\n            \"United States of America\",\n            278\n        ],\n        [\n            \"2020-03-07\",\n            \"Canada\",\n            54\n        ],\n        [\n            \"2020-03-07\",\n            \"China\",\n            80652\n        ],\n        [\n            \"2020-03-07\",\n            \"Spain\",\n            500\n        ],\n        [\n            \"2020-03-07\",\n            \"Italy\",\n            5883\n        ],\n        [\n            \"2020-03-07\",\n            \"United States of America\",\n            417\n        ],\n        [\n            \"2020-03-08\",\n            \"Canada\",\n            64\n        ],\n        [\n            \"2020-03-08\",\n            \"China\",\n            80699\n        ],\n        [\n            \"2020-03-08\",\n            \"Spain\",\n            673\n        ],\n        [\n            \"2020-03-08\",\n            \"Italy\",\n            7375\n        ],\n        [\n            \"2020-03-08\",\n            \"United States of America\",\n            537\n        ],\n        [\n            \"2020-03-09\",\n            \"Canada\",\n            76\n        ],\n        [\n            \"2020-03-09\",\n            \"China\",\n            80735\n        ],\n        [\n            \"2020-03-09\",\n            \"Spain\",\n            1073\n        ],\n        [\n            \"2020-03-09\",\n            \"Italy\",\n            9172\n        ],\n        [\n            \"2020-03-09\",\n            \"United States of America\",\n            605\n        ],\n        [\n            \"2020-03-10\",\n            \"Canada\",\n            79\n        ],\n        [\n            \"2020-03-10\",\n            \"China\",\n            80887\n        ],\n        [\n            \"2020-03-10\",\n            \"Spain\",\n            1695\n        ],\n        [\n            \"2020-03-10\",\n            \"Italy\",\n            10149\n        ],\n        [\n            \"2020-03-10\",\n            \"United States of America\",\n            959\n        ],\n        [\n            \"2020-03-11\",\n            \"Canada\",\n            108\n        ],\n        [\n            \"2020-03-11\",\n            \"China\",\n            80921\n        ],\n        [\n            \"2020-03-11\",\n            \"Spain\",\n            2277\n        ],\n        [\n            \"2020-03-11\",\n            \"Italy\",\n            12462\n        ],\n        [\n            \"2020-03-11\",\n            \"United States of America\",\n            1281\n        ],\n        [\n            \"2020-03-12\",\n            \"Canada\",\n            117\n        ],\n        [\n            \"2020-03-12\",\n            \"China\",\n            80932\n        ],\n        [\n            \"2020-03-12\",\n            \"Spain\",\n            2277\n        ],\n        [\n            \"2020-03-12\",\n            \"Italy\",\n            12462\n        ],\n        [\n            \"2020-03-12\",\n            \"United States of America\",\n            1663\n        ],\n        [\n            \"2020-03-13\",\n            \"Canada\",\n            193\n        ],\n        [\n            \"2020-03-13\",\n            \"China\",\n            80945\n        ],\n        [\n            \"2020-03-13\",\n            \"Spain\",\n            5232\n        ],\n        [\n            \"2020-03-13\",\n            \"Italy\",\n            17660\n        ],\n        [\n            \"2020-03-13\",\n            \"United States of America\",\n            2179\n        ],\n        [\n            \"2020-03-14\",\n            \"Canada\",\n            196\n        ],\n        [\n            \"2020-03-14\",\n            \"China\",\n            80977\n        ],\n        [\n            \"2020-03-14\",\n            \"Spain\",\n            6391\n        ],\n        [\n            \"2020-03-14\",\n            \"Italy\",\n            21157\n        ],\n        [\n            \"2020-03-14\",\n            \"United States of America\",\n            2726\n        ],\n        [\n            \"2020-03-15\",\n            \"Canada\",\n            250\n        ],\n        [\n            \"2020-03-15\",\n            \"China\",\n            81003\n        ],\n        [\n            \"2020-03-15\",\n            \"Spain\",\n            7798\n        ],\n        [\n            \"2020-03-15\",\n            \"Italy\",\n            24747\n        ],\n        [\n            \"2020-03-15\",\n            \"United States of America\",\n            3499\n        ],\n        [\n            \"2020-03-16\",\n            \"Canada\",\n            415\n        ],\n        [\n            \"2020-03-16\",\n            \"China\",\n            81033\n        ],\n        [\n            \"2020-03-16\",\n            \"Spain\",\n            9942\n        ],\n        [\n            \"2020-03-16\",\n            \"Italy\",\n            27980\n        ],\n        [\n            \"2020-03-16\",\n            \"United States of America\",\n            4632\n        ],\n        [\n            \"2020-03-17\",\n            \"Canada\",\n            478\n        ],\n        [\n            \"2020-03-17\",\n            \"China\",\n            81058\n        ],\n        [\n            \"2020-03-17\",\n            \"Spain\",\n            11748\n        ],\n        [\n            \"2020-03-17\",\n            \"Italy\",\n            31506\n        ],\n        [\n            \"2020-03-17\",\n            \"United States of America\",\n            6421\n        ],\n        [\n            \"2020-03-18\",\n            \"Canada\",\n            657\n        ],\n        [\n            \"2020-03-18\",\n            \"China\",\n            81102\n        ],\n        [\n            \"2020-03-18\",\n            \"Spain\",\n            13910\n        ],\n        [\n            \"2020-03-18\",\n            \"Italy\",\n            35713\n        ],\n        [\n            \"2020-03-18\",\n            \"United States of America\",\n            7786\n        ],\n        [\n            \"2020-03-19\",\n            \"Canada\",\n            800\n        ],\n        [\n            \"2020-03-19\",\n            \"China\",\n            81156\n        ],\n        [\n            \"2020-03-19\",\n            \"Spain\",\n            17963\n        ],\n        [\n            \"2020-03-19\",\n            \"Italy\",\n            41035\n        ],\n        [\n            \"2020-03-19\",\n            \"United States of America\",\n            13680\n        ],\n        [\n            \"2020-03-20\",\n            \"Canada\",\n            943\n        ],\n        [\n            \"2020-03-20\",\n            \"China\",\n            81250\n        ],\n        [\n            \"2020-03-20\",\n            \"Spain\",\n            20410\n        ],\n        [\n            \"2020-03-20\",\n            \"Italy\",\n            47021\n        ],\n        [\n            \"2020-03-20\",\n            \"United States of America\",\n            19101\n        ],\n        [\n            \"2020-03-21\",\n            \"Canada\",\n            1278\n        ],\n        [\n            \"2020-03-21\",\n            \"China\",\n            81305\n        ],\n        [\n            \"2020-03-21\",\n            \"Spain\",\n            25374\n        ],\n        [\n            \"2020-03-21\",\n            \"Italy\",\n            53578\n        ],\n        [\n            \"2020-03-21\",\n            \"United States of America\",\n            25514\n        ],\n        [\n            \"2020-03-22\",\n            \"Canada\",\n            1470\n        ],\n        [\n            \"2020-03-22\",\n            \"China\",\n            81397\n        ],\n        [\n            \"2020-03-22\",\n            \"Spain\",\n            28603\n        ],\n        [\n            \"2020-03-22\",\n            \"Italy\",\n            59138\n        ],\n        [\n            \"2020-03-22\",\n            \"United States of America\",\n            33848\n        ],\n        [\n            \"2020-03-23\",\n            \"Canada\",\n            2088\n        ],\n        [\n            \"2020-03-23\",\n            \"China\",\n            81496\n        ],\n        [\n            \"2020-03-23\",\n            \"Spain\",\n            35136\n        ],\n        [\n            \"2020-03-23\",\n            \"Italy\",\n            63927\n        ],\n        [\n            \"2020-03-23\",\n            \"United States of America\",\n            43663\n        ],\n        [\n            \"2020-03-24\",\n            \"Canada\",\n            2790\n        ],\n        [\n            \"2020-03-24\",\n            \"China\",\n            81591\n        ],\n        [\n            \"2020-03-24\",\n            \"Spain\",\n            39885\n        ],\n        [\n            \"2020-03-24\",\n            \"Italy\",\n            69176\n        ],\n        [\n            \"2020-03-24\",\n            \"United States of America\",\n            53736\n        ],\n        [\n            \"2020-03-25\",\n            \"Canada\",\n            3251\n        ],\n        [\n            \"2020-03-25\",\n            \"China\",\n            81661\n        ],\n        [\n            \"2020-03-25\",\n            \"Spain\",\n            49515\n        ],\n        [\n            \"2020-03-25\",\n            \"Italy\",\n            74386\n        ],\n        [\n            \"2020-03-25\",\n            \"United States of America\",\n            65778\n        ],\n        [\n            \"2020-03-26\",\n            \"Canada\",\n            4042\n        ],\n        [\n            \"2020-03-26\",\n            \"China\",\n            81782\n        ],\n        [\n            \"2020-03-26\",\n            \"Spain\",\n            57786\n        ],\n        [\n            \"2020-03-26\",\n            \"Italy\",\n            80589\n        ],\n        [\n            \"2020-03-26\",\n            \"United States of America\",\n            83836\n        ],\n        [\n            \"2020-03-27\",\n            \"Canada\",\n            4682\n        ],\n        [\n            \"2020-03-27\",\n            \"China\",\n            81897\n        ],\n        [\n            \"2020-03-27\",\n            \"Spain\",\n            65719\n        ],\n        [\n            \"2020-03-27\",\n            \"Italy\",\n            86498\n        ],\n        [\n            \"2020-03-27\",\n            \"United States of America\",\n            101657\n        ],\n        [\n            \"2020-03-28\",\n            \"Canada\",\n            5576\n        ],\n        [\n            \"2020-03-28\",\n            \"China\",\n            81999\n        ],\n        [\n            \"2020-03-28\",\n            \"Spain\",\n            73235\n        ],\n        [\n            \"2020-03-28\",\n            \"Italy\",\n            92472\n        ],\n        [\n            \"2020-03-28\",\n            \"United States of America\",\n            121465\n        ],\n        [\n            \"2020-03-29\",\n            \"Canada\",\n            6280\n        ],\n        [\n            \"2020-03-29\",\n            \"China\",\n            82122\n        ],\n        [\n            \"2020-03-29\",\n            \"Spain\",\n            80110\n        ],\n        [\n            \"2020-03-29\",\n            \"Italy\",\n            97689\n        ],\n        [\n            \"2020-03-29\",\n            \"United States of America\",\n            140909\n        ],\n        [\n            \"2020-03-30\",\n            \"Canada\",\n            7398\n        ],\n        [\n            \"2020-03-30\",\n            \"China\",\n            82198\n        ],\n        [\n            \"2020-03-30\",\n            \"Spain\",\n            87956\n        ],\n        [\n            \"2020-03-30\",\n            \"Italy\",\n            101739\n        ],\n        [\n            \"2020-03-30\",\n            \"United States of America\",\n            161831\n        ],\n        [\n            \"2020-03-31\",\n            \"Canada\",\n            8527\n        ],\n        [\n            \"2020-03-31\",\n            \"China\",\n            82279\n        ],\n        [\n            \"2020-03-31\",\n            \"Spain\",\n            95923\n        ],\n        [\n            \"2020-03-31\",\n            \"Italy\",\n            105792\n        ],\n        [\n            \"2020-03-31\",\n            \"United States of America\",\n            188172\n        ],\n        [\n            \"2020-04-01\",\n            \"Canada\",\n            9560\n        ],\n        [\n            \"2020-04-01\",\n            \"China\",\n            82361\n        ],\n        [\n            \"2020-04-01\",\n            \"Spain\",\n            104118\n        ],\n        [\n            \"2020-04-01\",\n            \"Italy\",\n            110574\n        ],\n        [\n            \"2020-04-01\",\n            \"United States of America\",\n            213372\n        ],\n        [\n            \"2020-04-02\",\n            \"Canada\",\n            11284\n        ],\n        [\n            \"2020-04-02\",\n            \"China\",\n            82432\n        ],\n        [\n            \"2020-04-02\",\n            \"Spain\",\n            112065\n        ],\n        [\n            \"2020-04-02\",\n            \"Italy\",\n            115242\n        ],\n        [\n            \"2020-04-02\",\n            \"United States of America\",\n            243599\n        ],\n        [\n            \"2020-04-03\",\n            \"Canada\",\n            12437\n        ],\n        [\n            \"2020-04-03\",\n            \"China\",\n            82511\n        ],\n        [\n            \"2020-04-03\",\n            \"Spain\",\n            119199\n        ],\n        [\n            \"2020-04-03\",\n            \"Italy\",\n            119827\n        ],\n        [\n            \"2020-04-03\",\n            \"United States of America\",\n            275586\n        ],\n        [\n            \"2020-04-04\",\n            \"Canada\",\n            12978\n        ],\n        [\n            \"2020-04-04\",\n            \"China\",\n            82543\n        ],\n        [\n            \"2020-04-04\",\n            \"Spain\",\n            126168\n        ],\n        [\n            \"2020-04-04\",\n            \"Italy\",\n            124632\n        ],\n        [\n            \"2020-04-04\",\n            \"United States of America\",\n            308853\n        ],\n        [\n            \"2020-04-05\",\n            \"Canada\",\n            15756\n        ],\n        [\n            \"2020-04-05\",\n            \"China\",\n            82602\n        ],\n        [\n            \"2020-04-05\",\n            \"Spain\",\n            131646\n        ],\n        [\n            \"2020-04-05\",\n            \"Italy\",\n            128948\n        ],\n        [\n            \"2020-04-05\",\n            \"United States of America\",\n            337072\n        ],\n        [\n            \"2020-04-06\",\n            \"Canada\",\n            16563\n        ],\n        [\n            \"2020-04-06\",\n            \"China\",\n            82665\n        ],\n        [\n            \"2020-04-06\",\n            \"Spain\",\n            136675\n        ],\n        [\n            \"2020-04-06\",\n            \"Italy\",\n            132547\n        ],\n        [\n            \"2020-04-06\",\n            \"United States of America\",\n            366667\n        ],\n        [\n            \"2020-04-07\",\n            \"Canada\",\n            17872\n        ],\n        [\n            \"2020-04-07\",\n            \"China\",\n            82718\n        ],\n        [\n            \"2020-04-07\",\n            \"Spain\",\n            141942\n        ],\n        [\n            \"2020-04-07\",\n            \"Italy\",\n            135586\n        ],\n        [\n            \"2020-04-07\",\n            \"United States of America\",\n            396223\n        ],\n        [\n            \"2020-04-08\",\n            \"Canada\",\n            19141\n        ],\n        [\n            \"2020-04-08\",\n            \"China\",\n            82809\n        ],\n        [\n            \"2020-04-08\",\n            \"Spain\",\n            148220\n        ],\n        [\n            \"2020-04-08\",\n            \"Italy\",\n            139422\n        ],\n        [\n            \"2020-04-08\",\n            \"United States of America\",\n            429052\n        ],\n        [\n            \"2020-04-09\",\n            \"Canada\",\n            20654\n        ],\n        [\n            \"2020-04-09\",\n            \"China\",\n            82883\n        ],\n        [\n            \"2020-04-09\",\n            \"Spain\",\n            153222\n        ],\n        [\n            \"2020-04-09\",\n            \"Italy\",\n            143626\n        ],\n        [\n            \"2020-04-09\",\n            \"United States of America\",\n            461437\n        ],\n        [\n            \"2020-04-10\",\n            \"Canada\",\n            22059\n        ],\n        [\n            \"2020-04-10\",\n            \"China\",\n            82941\n        ],\n        [\n            \"2020-04-10\",\n            \"Spain\",\n            158273\n        ],\n        [\n            \"2020-04-10\",\n            \"Italy\",\n            147577\n        ],\n        [\n            \"2020-04-10\",\n            \"United States of America\",\n            496535\n        ],\n        [\n            \"2020-04-11\",\n            \"Canada\",\n            23316\n        ],\n        [\n            \"2020-04-11\",\n            \"China\",\n            83014\n        ],\n        [\n            \"2020-04-11\",\n            \"Spain\",\n            163027\n        ],\n        [\n            \"2020-04-11\",\n            \"Italy\",\n            152271\n        ],\n        [\n            \"2020-04-11\",\n            \"United States of America\",\n            526396\n        ],\n        [\n            \"2020-04-12\",\n            \"Canada\",\n            24299\n        ],\n        [\n            \"2020-04-12\",\n            \"China\",\n            83134\n        ],\n        [\n            \"2020-04-12\",\n            \"Spain\",\n            166831\n        ],\n        [\n            \"2020-04-12\",\n            \"Italy\",\n            156363\n        ],\n        [\n            \"2020-04-12\",\n            \"United States of America\",\n            555313\n        ],\n        [\n            \"2020-04-13\",\n            \"Canada\",\n            25680\n        ],\n        [\n            \"2020-04-13\",\n            \"China\",\n            83213\n        ],\n        [\n            \"2020-04-13\",\n            \"Spain\",\n            170099\n        ],\n        [\n            \"2020-04-13\",\n            \"Italy\",\n            159516\n        ],\n        [\n            \"2020-04-13\",\n            \"United States of America\",\n            580619\n        ],\n        [\n            \"2020-04-14\",\n            \"Canada\",\n            27035\n        ],\n        [\n            \"2020-04-14\",\n            \"China\",\n            83306\n        ],\n        [\n            \"2020-04-14\",\n            \"Spain\",\n            172541\n        ],\n        [\n            \"2020-04-14\",\n            \"Italy\",\n            162488\n        ],\n        [\n            \"2020-04-14\",\n            \"United States of America\",\n            607670\n        ],\n        [\n            \"2020-04-15\",\n            \"Canada\",\n            28209\n        ],\n        [\n            \"2020-04-15\",\n            \"China\",\n            83356\n        ],\n        [\n            \"2020-04-15\",\n            \"Spain\",\n            177644\n        ],\n        [\n            \"2020-04-15\",\n            \"Italy\",\n            165155\n        ],\n        [\n            \"2020-04-15\",\n            \"United States of America\",\n            636350\n        ],\n        [\n            \"2020-04-16\",\n            \"Canada\",\n            30809\n        ],\n        [\n            \"2020-04-16\",\n            \"China\",\n            83403\n        ],\n        [\n            \"2020-04-16\",\n            \"Spain\",\n            184948\n        ],\n        [\n            \"2020-04-16\",\n            \"Italy\",\n            168941\n        ],\n        [\n            \"2020-04-16\",\n            \"United States of America\",\n            667801\n        ],\n        [\n            \"2020-04-17\",\n            \"Canada\",\n            32814\n        ],\n        [\n            \"2020-04-17\",\n            \"China\",\n            83760\n        ],\n        [\n            \"2020-04-17\",\n            \"Spain\",\n            190839\n        ],\n        [\n            \"2020-04-17\",\n            \"Italy\",\n            172434\n        ],\n        [\n            \"2020-04-17\",\n            \"United States of America\",\n            699706\n        ],\n        [\n            \"2020-04-18\",\n            \"Canada\",\n            34356\n        ],\n        [\n            \"2020-04-18\",\n            \"China\",\n            83787\n        ],\n        [\n            \"2020-04-18\",\n            \"Spain\",\n            191726\n        ],\n        [\n            \"2020-04-18\",\n            \"Italy\",\n            175925\n        ],\n        [\n            \"2020-04-18\",\n            \"United States of America\",\n            732197\n        ],\n        [\n            \"2020-04-19\",\n            \"Canada\",\n            35633\n        ],\n        [\n            \"2020-04-19\",\n            \"China\",\n            83805\n        ],\n        [\n            \"2020-04-19\",\n            \"Spain\",\n            198674\n        ],\n        [\n            \"2020-04-19\",\n            \"Italy\",\n            178972\n        ],\n        [\n            \"2020-04-19\",\n            \"United States of America\",\n            759086\n        ],\n        [\n            \"2020-04-20\",\n            \"Canada\",\n            37658\n        ],\n        [\n            \"2020-04-20\",\n            \"China\",\n            83817\n        ],\n        [\n            \"2020-04-20\",\n            \"Spain\",\n            200210\n        ],\n        [\n            \"2020-04-20\",\n            \"Italy\",\n            181228\n        ],\n        [\n            \"2020-04-20\",\n            \"United States of America\",\n            784326\n        ],\n        [\n            \"2020-04-21\",\n            \"Canada\",\n            39402\n        ],\n        [\n            \"2020-04-21\",\n            \"China\",\n            83853\n        ],\n        [\n            \"2020-04-21\",\n            \"Spain\",\n            204178\n        ],\n        [\n            \"2020-04-21\",\n            \"Italy\",\n            183957\n        ],\n        [\n            \"2020-04-21\",\n            \"United States of America\",\n            812036\n        ],\n        [\n            \"2020-04-22\",\n            \"Canada\",\n            41650\n        ],\n        [\n            \"2020-04-22\",\n            \"China\",\n            83868\n        ],\n        [\n            \"2020-04-22\",\n            \"Spain\",\n            208389\n        ],\n        [\n            \"2020-04-22\",\n            \"Italy\",\n            187327\n        ],\n        [\n            \"2020-04-22\",\n            \"United States of America\",\n            839675\n        ],\n        [\n            \"2020-04-23\",\n            \"Canada\",\n            43286\n        ],\n        [\n            \"2020-04-23\",\n            \"China\",\n            83884\n        ],\n        [\n            \"2020-04-23\",\n            \"Spain\",\n            213024\n        ],\n        [\n            \"2020-04-23\",\n            \"Italy\",\n            189973\n        ],\n        [\n            \"2020-04-23\",\n            \"United States of America\",\n            869170\n        ],\n        [\n            \"2020-04-24\",\n            \"Canada\",\n            44056\n        ],\n        [\n            \"2020-04-24\",\n            \"China\",\n            83899\n        ],\n        [\n            \"2020-04-24\",\n            \"Spain\",\n            219764\n        ],\n        [\n            \"2020-04-24\",\n            \"Italy\",\n            192994\n        ],\n        [\n            \"2020-04-24\",\n            \"United States of America\",\n            905333\n        ],\n        [\n            \"2020-04-25\",\n            \"Canada\",\n            45493\n        ],\n        [\n            \"2020-04-25\",\n            \"China\",\n            83909\n        ],\n        [\n            \"2020-04-25\",\n            \"Spain\",\n            223759\n        ],\n        [\n            \"2020-04-25\",\n            \"Italy\",\n            195351\n        ],\n        [\n            \"2020-04-25\",\n            \"United States of America\",\n            938154\n        ],\n        [\n            \"2020-04-26\",\n            \"Canada\",\n            47147\n        ],\n        [\n            \"2020-04-26\",\n            \"China\",\n            83912\n        ],\n        [\n            \"2020-04-26\",\n            \"Spain\",\n            226629\n        ],\n        [\n            \"2020-04-26\",\n            \"Italy\",\n            197675\n        ],\n        [\n            \"2020-04-26\",\n            \"United States of America\",\n            965783\n        ],\n        [\n            \"2020-04-27\",\n            \"Canada\",\n            49616\n        ],\n        [\n            \"2020-04-27\",\n            \"China\",\n            83918\n        ],\n        [\n            \"2020-04-27\",\n            \"Spain\",\n            229422\n        ],\n        [\n            \"2020-04-27\",\n            \"Italy\",\n            199414\n        ],\n        [\n            \"2020-04-27\",\n            \"United States of America\",\n            988197\n        ],\n        [\n            \"2020-04-28\",\n            \"Canada\",\n            51150\n        ],\n        [\n            \"2020-04-28\",\n            \"China\",\n            83940\n        ],\n        [\n            \"2020-04-28\",\n            \"Spain\",\n            232128\n        ],\n        [\n            \"2020-04-28\",\n            \"Italy\",\n            201505\n        ],\n        [\n            \"2020-04-28\",\n            \"United States of America\",\n            1012582\n        ],\n        [\n            \"2020-04-29\",\n            \"Canada\",\n            52865\n        ],\n        [\n            \"2020-04-29\",\n            \"China\",\n            83944\n        ],\n        [\n            \"2020-04-29\",\n            \"Spain\",\n            236899\n        ],\n        [\n            \"2020-04-29\",\n            \"Italy\",\n            203591\n        ],\n        [\n            \"2020-04-29\",\n            \"United States of America\",\n            1039909\n        ],\n        [\n            \"2020-04-30\",\n            \"Canada\",\n            54457\n        ],\n        [\n            \"2020-04-30\",\n            \"China\",\n            83956\n        ],\n        [\n            \"2020-04-30\",\n            \"Spain\",\n            213435\n        ],\n        [\n            \"2020-04-30\",\n            \"Italy\",\n            205463\n        ],\n        [\n            \"2020-04-30\",\n            \"United States of America\",\n            1069424\n        ],\n        [\n            \"2020-05-01\",\n            \"Canada\",\n            56343\n        ],\n        [\n            \"2020-05-01\",\n            \"China\",\n            83959\n        ],\n        [\n            \"2020-05-01\",\n            \"Spain\",\n            213435\n        ],\n        [\n            \"2020-05-01\",\n            \"Italy\",\n            207428\n        ],\n        [\n            \"2020-05-01\",\n            \"United States of America\",\n            1103461\n        ],\n        [\n            \"2020-05-02\",\n            \"Canada\",\n            57926\n        ],\n        [\n            \"2020-05-02\",\n            \"China\",\n            83959\n        ],\n        [\n            \"2020-05-02\",\n            \"Spain\",\n            216582\n        ],\n        [\n            \"2020-05-02\",\n            \"Italy\",\n            209328\n        ],\n        [\n            \"2020-05-02\",\n            \"United States of America\",\n            1132539\n        ],\n        [\n            \"2020-05-03\",\n            \"Canada\",\n            60504\n        ],\n        [\n            \"2020-05-03\",\n            \"China\",\n            83964\n        ],\n        [\n            \"2020-05-03\",\n            \"Spain\",\n            217466\n        ],\n        [\n            \"2020-05-03\",\n            \"Italy\",\n            210717\n        ],\n        [\n            \"2020-05-03\",\n            \"United States of America\",\n            1158040\n        ],\n        [\n            \"2020-05-04\",\n            \"Canada\",\n            61957\n        ],\n        [\n            \"2020-05-04\",\n            \"China\",\n            83966\n        ],\n        [\n            \"2020-05-04\",\n            \"Spain\",\n            218011\n        ],\n        [\n            \"2020-05-04\",\n            \"Italy\",\n            211938\n        ],\n        [\n            \"2020-05-04\",\n            \"United States of America\",\n            1180375\n        ],\n        [\n            \"2020-05-05\",\n            \"Canada\",\n            63215\n        ],\n        [\n            \"2020-05-05\",\n            \"China\",\n            83968\n        ],\n        [\n            \"2020-05-05\",\n            \"Spain\",\n            219329\n        ],\n        [\n            \"2020-05-05\",\n            \"Italy\",\n            213013\n        ],\n        [\n            \"2020-05-05\",\n            \"United States of America\",\n            1204351\n        ],\n        [\n            \"2020-05-06\",\n            \"Canada\",\n            64694\n        ],\n        [\n            \"2020-05-06\",\n            \"China\",\n            83970\n        ],\n        [\n            \"2020-05-06\",\n            \"Spain\",\n            220325\n        ],\n        [\n            \"2020-05-06\",\n            \"Italy\",\n            214457\n        ],\n        [\n            \"2020-05-06\",\n            \"United States of America\",\n            1228603\n        ],\n        [\n            \"2020-05-07\",\n            \"Canada\",\n            66201\n        ],\n        [\n            \"2020-05-07\",\n            \"China\",\n            83975\n        ],\n        [\n            \"2020-05-07\",\n            \"Spain\",\n            221447\n        ],\n        [\n            \"2020-05-07\",\n            \"Italy\",\n            215858\n        ],\n        [\n            \"2020-05-07\",\n            \"United States of America\",\n            1257023\n        ],\n        [\n            \"2020-05-08\",\n            \"Canada\",\n            67674\n        ],\n        [\n            \"2020-05-08\",\n            \"China\",\n            83976\n        ],\n        [\n            \"2020-05-08\",\n            \"Spain\",\n            222857\n        ],\n        [\n            \"2020-05-08\",\n            \"Italy\",\n            217185\n        ],\n        [\n            \"2020-05-08\",\n            \"United States of America\",\n            1283929\n        ],\n        [\n            \"2020-05-09\",\n            \"Canada\",\n            68918\n        ],\n        [\n            \"2020-05-09\",\n            \"China\",\n            83990\n        ],\n        [\n            \"2020-05-09\",\n            \"Spain\",\n            223578\n        ],\n        [\n            \"2020-05-09\",\n            \"Italy\",\n            218268\n        ],\n        [\n            \"2020-05-09\",\n            \"United States of America\",\n            1309550\n        ],\n        [\n            \"2020-05-10\",\n            \"Canada\",\n            70091\n        ],\n        [\n            \"2020-05-10\",\n            \"China\",\n            84010\n        ],\n        [\n            \"2020-05-10\",\n            \"Spain\",\n            224350\n        ],\n        [\n            \"2020-05-10\",\n            \"Italy\",\n            219070\n        ],\n        [\n            \"2020-05-10\",\n            \"United States of America\",\n            1329260\n        ],\n        [\n            \"2020-05-11\",\n            \"Canada\",\n            71264\n        ],\n        [\n            \"2020-05-11\",\n            \"China\",\n            84011\n        ],\n        [\n            \"2020-05-11\",\n            \"Spain\",\n            227436\n        ],\n        [\n            \"2020-05-11\",\n            \"Italy\",\n            219814\n        ],\n        [\n            \"2020-05-11\",\n            \"United States of America\",\n            1347881\n        ],\n        [\n            \"2020-05-12\",\n            \"Canada\",\n            72419\n        ],\n        [\n            \"2020-05-12\",\n            \"China\",\n            84018\n        ],\n        [\n            \"2020-05-12\",\n            \"Spain\",\n            228030\n        ],\n        [\n            \"2020-05-12\",\n            \"Italy\",\n            221216\n        ],\n        [\n            \"2020-05-12\",\n            \"United States of America\",\n            1369574\n        ],\n        [\n            \"2020-05-13\",\n            \"Canada\",\n            73568\n        ],\n        [\n            \"2020-05-13\",\n            \"China\",\n            84024\n        ],\n        [\n            \"2020-05-13\",\n            \"Spain\",\n            228691\n        ],\n        [\n            \"2020-05-13\",\n            \"Italy\",\n            222104\n        ],\n        [\n            \"2020-05-13\",\n            \"United States of America\",\n            1390406\n        ],\n        [\n            \"2020-05-14\",\n            \"Canada\",\n            74781\n        ],\n        [\n            \"2020-05-14\",\n            \"China\",\n            84029\n        ],\n        [\n            \"2020-05-14\",\n            \"Spain\",\n            229540\n        ],\n        [\n            \"2020-05-14\",\n            \"Italy\",\n            223096\n        ],\n        [\n            \"2020-05-14\",\n            \"United States of America\",\n            1417774\n        ],\n        [\n            \"2020-05-15\",\n            \"Canada\",\n            75959\n        ],\n        [\n            \"2020-05-15\",\n            \"China\",\n            84038\n        ],\n        [\n            \"2020-05-15\",\n            \"Spain\",\n            230183\n        ],\n        [\n            \"2020-05-15\",\n            \"Italy\",\n            223885\n        ],\n        [\n            \"2020-05-15\",\n            \"United States of America\",\n            1442824\n        ],\n        [\n            \"2020-05-16\",\n            \"Canada\",\n            77206\n        ],\n        [\n            \"2020-05-16\",\n            \"China\",\n            84044\n        ],\n        [\n            \"2020-05-16\",\n            \"Spain\",\n            230698\n        ],\n        [\n            \"2020-05-16\",\n            \"Italy\",\n            224760\n        ],\n        [\n            \"2020-05-16\",\n            \"United States of America\",\n            1467820\n        ],\n        [\n            \"2020-05-17\",\n            \"Canada\",\n            78332\n        ],\n        [\n            \"2020-05-17\",\n            \"China\",\n            84054\n        ],\n        [\n            \"2020-05-17\",\n            \"Spain\",\n            230698\n        ],\n        [\n            \"2020-05-17\",\n            \"Italy\",\n            225435\n        ],\n        [\n            \"2020-05-17\",\n            \"United States of America\",\n            1486757\n        ],\n        [\n            \"2020-05-18\",\n            \"Canada\",\n            79411\n        ],\n        [\n            \"2020-05-18\",\n            \"China\",\n            84063\n        ],\n        [\n            \"2020-05-18\",\n            \"Spain\",\n            231606\n        ],\n        [\n            \"2020-05-18\",\n            \"Italy\",\n            225886\n        ],\n        [\n            \"2020-05-18\",\n            \"United States of America\",\n            1508308\n        ],\n        [\n            \"2020-05-19\",\n            \"Canada\",\n            80493\n        ],\n        [\n            \"2020-05-19\",\n            \"China\",\n            84063\n        ],\n        [\n            \"2020-05-19\",\n            \"Spain\",\n            232037\n        ],\n        [\n            \"2020-05-19\",\n            \"Italy\",\n            226699\n        ],\n        [\n            \"2020-05-19\",\n            \"United States of America\",\n            1528568\n        ],\n        [\n            \"2020-05-20\",\n            \"Canada\",\n            81575\n        ],\n        [\n            \"2020-05-20\",\n            \"China\",\n            84063\n        ],\n        [\n            \"2020-05-20\",\n            \"Spain\",\n            232555\n        ],\n        [\n            \"2020-05-20\",\n            \"Italy\",\n            227364\n        ],\n        [\n            \"2020-05-20\",\n            \"United States of America\",\n            1551853\n        ],\n        [\n            \"2020-05-21\",\n            \"Canada\",\n            82742\n        ],\n        [\n            \"2020-05-21\",\n            \"China\",\n            84063\n        ],\n        [\n            \"2020-05-21\",\n            \"Spain\",\n            233037\n        ],\n        [\n            \"2020-05-21\",\n            \"Italy\",\n            228006\n        ],\n        [\n            \"2020-05-21\",\n            \"United States of America\",\n            1577147\n        ],\n        [\n            \"2020-05-22\",\n            \"Canada\",\n            83947\n        ],\n        [\n            \"2020-05-22\",\n            \"China\",\n            84081\n        ],\n        [\n            \"2020-05-22\",\n            \"Spain\",\n            234824\n        ],\n        [\n            \"2020-05-22\",\n            \"Italy\",\n            228658\n        ],\n        [\n            \"2020-05-22\",\n            \"United States of America\",\n            1600937\n        ],\n        [\n            \"2020-05-23\",\n            \"Canada\",\n            85151\n        ],\n        [\n            \"2020-05-23\",\n            \"China\",\n            84084\n        ],\n        [\n            \"2020-05-23\",\n            \"Spain\",\n            235290\n        ],\n        [\n            \"2020-05-23\",\n            \"Italy\",\n            229327\n        ],\n        [\n            \"2020-05-23\",\n            \"United States of America\",\n            1622612\n        ],\n        [\n            \"2020-05-24\",\n            \"Canada\",\n            86106\n        ],\n        [\n            \"2020-05-24\",\n            \"China\",\n            84095\n        ],\n        [\n            \"2020-05-24\",\n            \"Spain\",\n            235772\n        ],\n        [\n            \"2020-05-24\",\n            \"Italy\",\n            229858\n        ],\n        [\n            \"2020-05-24\",\n            \"United States of America\",\n            1643246\n        ],\n        [\n            \"2020-05-25\",\n            \"Canada\",\n            87119\n        ],\n        [\n            \"2020-05-25\",\n            \"China\",\n            84102\n        ],\n        [\n            \"2020-05-25\",\n            \"Spain\",\n            235400\n        ],\n        [\n            \"2020-05-25\",\n            \"Italy\",\n            230158\n        ],\n        [\n            \"2020-05-25\",\n            \"United States of America\",\n            1662302\n        ],\n        [\n            \"2020-05-26\",\n            \"Canada\",\n            88090\n        ],\n        [\n            \"2020-05-26\",\n            \"China\",\n            84103\n        ],\n        [\n            \"2020-05-26\",\n            \"Spain\",\n            236259\n        ],\n        [\n            \"2020-05-26\",\n            \"Italy\",\n            230555\n        ],\n        [\n            \"2020-05-26\",\n            \"United States of America\",\n            1680913\n        ],\n        [\n            \"2020-05-27\",\n            \"Canada\",\n            88989\n        ],\n        [\n            \"2020-05-27\",\n            \"China\",\n            84106\n        ],\n        [\n            \"2020-05-27\",\n            \"Spain\",\n            236259\n        ],\n        [\n            \"2020-05-27\",\n            \"Italy\",\n            231139\n        ],\n        [\n            \"2020-05-27\",\n            \"United States of America\",\n            1699176\n        ],\n        [\n            \"2020-05-28\",\n            \"Canada\",\n            89976\n        ],\n        [\n            \"2020-05-28\",\n            \"China\",\n            84106\n        ],\n        [\n            \"2020-05-28\",\n            \"Spain\",\n            237906\n        ],\n        [\n            \"2020-05-28\",\n            \"Italy\",\n            231732\n        ],\n        [\n            \"2020-05-28\",\n            \"United States of America\",\n            1721753\n        ],\n        [\n            \"2020-05-29\",\n            \"Canada\",\n            90909\n        ],\n        [\n            \"2020-05-29\",\n            \"China\",\n            84123\n        ],\n        [\n            \"2020-05-29\",\n            \"Spain\",\n            238564\n        ],\n        [\n            \"2020-05-29\",\n            \"Italy\",\n            232248\n        ],\n        [\n            \"2020-05-29\",\n            \"United States of America\",\n            1746019\n        ],\n        [\n            \"2020-05-30\",\n            \"Canada\",\n            91681\n        ],\n        [\n            \"2020-05-30\",\n            \"China\",\n            84128\n        ],\n        [\n            \"2020-05-30\",\n            \"Spain\",\n            239228\n        ],\n        [\n            \"2020-05-30\",\n            \"Italy\",\n            232664\n        ],\n        [\n            \"2020-05-30\",\n            \"United States of America\",\n            1770165\n        ],\n        [\n            \"2020-05-31\",\n            \"Canada\",\n            92479\n        ],\n        [\n            \"2020-05-31\",\n            \"China\",\n            84146\n        ],\n        [\n            \"2020-05-31\",\n            \"Spain\",\n            239479\n        ],\n        [\n            \"2020-05-31\",\n            \"Italy\",\n            232997\n        ],\n        [\n            \"2020-05-31\",\n            \"United States of America\",\n            1790172\n        ],\n        [\n            \"2020-06-01\",\n            \"Canada\",\n            93288\n        ],\n        [\n            \"2020-06-01\",\n            \"China\",\n            84154\n        ],\n        [\n            \"2020-06-01\",\n            \"Spain\",\n            239638\n        ],\n        [\n            \"2020-06-01\",\n            \"Italy\",\n            233197\n        ],\n        [\n            \"2020-06-01\",\n            \"United States of America\",\n            1811360\n        ],\n        [\n            \"2020-06-02\",\n            \"Canada\",\n            93960\n        ],\n        [\n            \"2020-06-02\",\n            \"China\",\n            84161\n        ],\n        [\n            \"2020-06-02\",\n            \"Spain\",\n            239932\n        ],\n        [\n            \"2020-06-02\",\n            \"Italy\",\n            233515\n        ],\n        [\n            \"2020-06-02\",\n            \"United States of America\",\n            1831821\n        ],\n        [\n            \"2020-06-03\",\n            \"Canada\",\n            94641\n        ],\n        [\n            \"2020-06-03\",\n            \"China\",\n            84160\n        ],\n        [\n            \"2020-06-03\",\n            \"Spain\",\n            240326\n        ],\n        [\n            \"2020-06-03\",\n            \"Italy\",\n            233836\n        ],\n        [\n            \"2020-06-03\",\n            \"United States of America\",\n            1851520\n        ],\n        [\n            \"2020-06-04\",\n            \"Canada\",\n            95269\n        ],\n        [\n            \"2020-06-04\",\n            \"China\",\n            84171\n        ],\n        [\n            \"2020-06-04\",\n            \"Spain\",\n            240660\n        ],\n        [\n            \"2020-06-04\",\n            \"Italy\",\n            234013\n        ],\n        [\n            \"2020-06-04\",\n            \"United States of America\",\n            1872660\n        ],\n        [\n            \"2020-06-05\",\n            \"Canada\",\n            95947\n        ],\n        [\n            \"2020-06-05\",\n            \"China\",\n            84177\n        ],\n        [\n            \"2020-06-05\",\n            \"Spain\",\n            240978\n        ],\n        [\n            \"2020-06-05\",\n            \"Italy\",\n            234531\n        ],\n        [\n            \"2020-06-05\",\n            \"United States of America\",\n            1897380\n        ],\n        [\n            \"2020-06-06\",\n            \"Canada\",\n            96475\n        ],\n        [\n            \"2020-06-06\",\n            \"China\",\n            84186\n        ],\n        [\n            \"2020-06-06\",\n            \"Spain\",\n            241310\n        ],\n        [\n            \"2020-06-06\",\n            \"Italy\",\n            234801\n        ],\n        [\n            \"2020-06-06\",\n            \"United States of America\",\n            1920061\n        ],\n        [\n            \"2020-06-07\",\n            \"Canada\",\n            97178\n        ],\n        [\n            \"2020-06-07\",\n            \"China\",\n            84191\n        ],\n        [\n            \"2020-06-07\",\n            \"Spain\",\n            241550\n        ],\n        [\n            \"2020-06-07\",\n            \"Italy\",\n            234998\n        ],\n        [\n            \"2020-06-07\",\n            \"United States of America\",\n            1942363\n        ],\n        [\n            \"2020-06-08\",\n            \"Canada\",\n            97779\n        ],\n        [\n            \"2020-06-08\",\n            \"China\",\n            84195\n        ],\n        [\n            \"2020-06-08\",\n            \"Spain\",\n            241717\n        ],\n        [\n            \"2020-06-08\",\n            \"Italy\",\n            235278\n        ],\n        [\n            \"2020-06-08\",\n            \"United States of America\",\n            1960897\n        ],\n        [\n            \"2020-06-09\",\n            \"Canada\",\n            98241\n        ],\n        [\n            \"2020-06-09\",\n            \"China\",\n            84198\n        ],\n        [\n            \"2020-06-09\",\n            \"Spain\",\n            241966\n        ],\n        [\n            \"2020-06-09\",\n            \"Italy\",\n            235561\n        ],\n        [\n            \"2020-06-09\",\n            \"United States of America\",\n            1979411\n        ],\n        [\n            \"2020-06-10\",\n            \"Canada\",\n            98720\n        ],\n        [\n            \"2020-06-10\",\n            \"China\",\n            84209\n        ],\n        [\n            \"2020-06-10\",\n            \"Spain\",\n            242280\n        ],\n        [\n            \"2020-06-10\",\n            \"Italy\",\n            235763\n        ],\n        [\n            \"2020-06-10\",\n            \"United States of America\",\n            2000464\n        ]\n    ],\n    \"totals\": [\n        [\n            null,\n            null,\n            130338138\n        ],\n        [\n            \"2020-01-22\",\n            null,\n            548\n        ],\n        [\n            null,\n            \"China\",\n            10131004\n        ],\n        [\n            null,\n            \"United States of America\",\n            84886999\n        ],\n        [\n            \"2020-01-23\",\n            null,\n            640\n        ],\n        [\n            \"2020-01-24\",\n            null,\n            918\n        ],\n        [\n            \"2020-01-25\",\n            null,\n            1401\n        ],\n        [\n            \"2020-01-26\",\n            null,\n            2068\n        ],\n        [\n            null,\n            \"Canada\",\n            4310711\n        ],\n        [\n            \"2020-01-27\",\n            null,\n            2869\n        ],\n        [\n            \"2020-01-28\",\n            null,\n            5501\n        ],\n        [\n            \"2020-01-29\",\n            null,\n            6077\n        ],\n        [\n            \"2020-01-30\",\n            null,\n            8132\n        ],\n        [\n            \"2020-01-31\",\n            null,\n            9794\n        ],\n        [\n            null,\n            \"Italy\",\n            15399969\n        ],\n        [\n            \"2020-02-01\",\n            null,\n            11886\n        ],\n        [\n            null,\n            \"Spain\",\n            15609455\n        ],\n        [\n            \"2020-02-02\",\n            null,\n            16622\n        ],\n        [\n            \"2020-02-03\",\n            null,\n            19711\n        ],\n        [\n            \"2020-02-04\",\n            null,\n            23698\n        ],\n        [\n            \"2020-02-05\",\n            null,\n            27429\n        ],\n        [\n            \"2020-02-06\",\n            null,\n            30573\n        ],\n        [\n            \"2020-02-07\",\n            null,\n            34098\n        ],\n        [\n            \"2020-02-08\",\n            null,\n            36801\n        ],\n        [\n            \"2020-02-09\",\n            null,\n            39814\n        ],\n        [\n            \"2020-02-10\",\n            null,\n            42330\n        ],\n        [\n            \"2020-02-11\",\n            null,\n            44352\n        ],\n        [\n            \"2020-02-12\",\n            null,\n            44724\n        ],\n        [\n            \"2020-02-13\",\n            null,\n            59859\n        ],\n        [\n            \"2020-02-14\",\n            null,\n            66319\n        ],\n        [\n            \"2020-02-15\",\n            null,\n            68374\n        ],\n        [\n            \"2020-02-16\",\n            null,\n            70473\n        ],\n        [\n            \"2020-02-17\",\n            null,\n            72392\n        ],\n        [\n            \"2020-02-18\",\n            null,\n            74167\n        ],\n        [\n            \"2020-02-19\",\n            null,\n            74574\n        ],\n        [\n            \"2020-02-20\",\n            null,\n            75027\n        ],\n        [\n            \"2020-02-21\",\n            null,\n            75538\n        ],\n        [\n            \"2020-02-22\",\n            null,\n            77030\n        ],\n        [\n            \"2020-02-23\",\n            null,\n            77139\n        ],\n        [\n            \"2020-02-24\",\n            null,\n            77446\n        ],\n        [\n            \"2020-02-25\",\n            null,\n            78052\n        ],\n        [\n            \"2020-02-26\",\n            null,\n            78601\n        ],\n        [\n            \"2020-02-27\",\n            null,\n            79241\n        ],\n        [\n            \"2020-02-28\",\n            null,\n            79820\n        ],\n        [\n            \"2020-02-29\",\n            null,\n            80514\n        ],\n        [\n            \"2020-03-01\",\n            null,\n            81704\n        ],\n        [\n            \"2020-03-02\",\n            null,\n            82310\n        ],\n        [\n            \"2020-03-03\",\n            null,\n            82970\n        ],\n        [\n            \"2020-03-04\",\n            null,\n            83768\n        ],\n        [\n            \"2020-03-05\",\n            null,\n            84797\n        ],\n        [\n            \"2020-03-06\",\n            null,\n            85936\n        ],\n        [\n            \"2020-03-07\",\n            null,\n            87506\n        ],\n        [\n            \"2020-03-08\",\n            null,\n            89348\n        ],\n        [\n            \"2020-03-09\",\n            null,\n            91661\n        ],\n        [\n            \"2020-03-10\",\n            null,\n            93769\n        ],\n        [\n            \"2020-03-11\",\n            null,\n            97049\n        ],\n        [\n            \"2020-03-12\",\n            null,\n            97451\n        ],\n        [\n            \"2020-03-13\",\n            null,\n            106209\n        ],\n        [\n            \"2020-03-14\",\n            null,\n            111447\n        ],\n        [\n            \"2020-03-15\",\n            null,\n            117297\n        ],\n        [\n            \"2020-03-16\",\n            null,\n            124002\n        ],\n        [\n            \"2020-03-17\",\n            null,\n            131211\n        ],\n        [\n            \"2020-03-18\",\n            null,\n            139168\n        ],\n        [\n            \"2020-03-19\",\n            null,\n            154634\n        ],\n        [\n            \"2020-03-20\",\n            null,\n            168725\n        ],\n        [\n            \"2020-03-21\",\n            null,\n            187049\n        ],\n        [\n            \"2020-03-22\",\n            null,\n            204456\n        ],\n        [\n            \"2020-03-23\",\n            null,\n            226310\n        ],\n        [\n            \"2020-03-24\",\n            null,\n            247178\n        ],\n        [\n            \"2020-03-25\",\n            null,\n            274591\n        ],\n        [\n            \"2020-03-26\",\n            null,\n            308035\n        ],\n        [\n            \"2020-03-27\",\n            null,\n            340453\n        ],\n        [\n            \"2020-03-28\",\n            null,\n            374747\n        ],\n        [\n            \"2020-03-29\",\n            null,\n            407110\n        ],\n        [\n            \"2020-03-30\",\n            null,\n            441122\n        ],\n        [\n            \"2020-03-31\",\n            null,\n            480693\n        ],\n        [\n            \"2020-04-01\",\n            null,\n            519985\n        ],\n        [\n            \"2020-04-02\",\n            null,\n            564622\n        ],\n        [\n            \"2020-04-03\",\n            null,\n            609560\n        ],\n        [\n            \"2020-04-04\",\n            null,\n            655174\n        ],\n        [\n            \"2020-04-05\",\n            null,\n            696024\n        ],\n        [\n            \"2020-04-06\",\n            null,\n            735117\n        ],\n        [\n            \"2020-04-07\",\n            null,\n            774341\n        ],\n        [\n            \"2020-04-08\",\n            null,\n            818644\n        ],\n        [\n            \"2020-04-09\",\n            null,\n            861822\n        ],\n        [\n            \"2020-04-10\",\n            null,\n            907385\n        ],\n        [\n            \"2020-04-11\",\n            null,\n            948024\n        ],\n        [\n            \"2020-04-12\",\n            null,\n            985940\n        ],\n        [\n            \"2020-04-13\",\n            null,\n            1019127\n        ],\n        [\n            \"2020-04-14\",\n            null,\n            1053040\n        ],\n        [\n            \"2020-04-15\",\n            null,\n            1090714\n        ],\n        [\n            \"2020-04-16\",\n            null,\n            1135902\n        ],\n        [\n            \"2020-04-17\",\n            null,\n            1179553\n        ],\n        [\n            \"2020-04-18\",\n            null,\n            1217991\n        ],\n        [\n            \"2020-04-19\",\n            null,\n            1256170\n        ],\n        [\n            \"2020-04-20\",\n            null,\n            1287239\n        ],\n        [\n            \"2020-04-21\",\n            null,\n            1323426\n        ],\n        [\n            \"2020-04-22\",\n            null,\n            1360909\n        ],\n        [\n            \"2020-04-23\",\n            null,\n            1399337\n        ],\n        [\n            \"2020-04-24\",\n            null,\n            1446046\n        ],\n        [\n            \"2020-04-25\",\n            null,\n            1486666\n        ],\n        [\n            \"2020-04-26\",\n            null,\n            1521146\n        ],\n        [\n            \"2020-04-27\",\n            null,\n            1550567\n        ],\n        [\n            \"2020-04-28\",\n            null,\n            1581305\n        ],\n        [\n            \"2020-04-29\",\n            null,\n            1617208\n        ],\n        [\n            \"2020-04-30\",\n            null,\n            1626735\n        ],\n        [\n            \"2020-05-01\",\n            null,\n            1664626\n        ],\n        [\n            \"2020-05-02\",\n            null,\n            1700334\n        ],\n        [\n            \"2020-05-03\",\n            null,\n            1730691\n        ],\n        [\n            \"2020-05-04\",\n            null,\n            1756247\n        ],\n        [\n            \"2020-05-05\",\n            null,\n            1783876\n        ],\n        [\n            \"2020-05-06\",\n            null,\n            1812049\n        ],\n        [\n            \"2020-05-07\",\n            null,\n            1844504\n        ],\n        [\n            \"2020-05-08\",\n            null,\n            1875621\n        ],\n        [\n            \"2020-05-09\",\n            null,\n            1904304\n        ],\n        [\n            \"2020-05-10\",\n            null,\n            1926781\n        ],\n        [\n            \"2020-05-11\",\n            null,\n            1950406\n        ],\n        [\n            \"2020-05-12\",\n            null,\n            1975257\n        ],\n        [\n            \"2020-05-13\",\n            null,\n            1998793\n        ],\n        [\n            \"2020-05-14\",\n            null,\n            2029220\n        ],\n        [\n            \"2020-05-15\",\n            null,\n            2056889\n        ],\n        [\n            \"2020-05-16\",\n            null,\n            2084528\n        ],\n        [\n            \"2020-05-17\",\n            null,\n            2105276\n        ],\n        [\n            \"2020-05-18\",\n            null,\n            2129274\n        ],\n        [\n            \"2020-05-19\",\n            null,\n            2151860\n        ],\n        [\n            \"2020-05-20\",\n            null,\n            2177410\n        ],\n        [\n            \"2020-05-21\",\n            null,\n            2204995\n        ],\n        [\n            \"2020-05-22\",\n            null,\n            2232447\n        ],\n        [\n            \"2020-05-23\",\n            null,\n            2256464\n        ],\n        [\n            \"2020-05-24\",\n            null,\n            2279077\n        ],\n        [\n            \"2020-05-25\",\n            null,\n            2299081\n        ],\n        [\n            \"2020-05-26\",\n            null,\n            2319920\n        ],\n        [\n            \"2020-05-27\",\n            null,\n            2339669\n        ],\n        [\n            \"2020-05-28\",\n            null,\n            2365473\n        ],\n        [\n            \"2020-05-29\",\n            null,\n            2391863\n        ],\n        [\n            \"2020-05-30\",\n            null,\n            2417866\n        ],\n        [\n            \"2020-05-31\",\n            null,\n            2439273\n        ],\n        [\n            \"2020-06-01\",\n            null,\n            2461637\n        ],\n        [\n            \"2020-06-02\",\n            null,\n            2483389\n        ],\n        [\n            \"2020-06-03\",\n            null,\n            2504483\n        ],\n        [\n            \"2020-06-04\",\n            null,\n            2526773\n        ],\n        [\n            \"2020-06-05\",\n            null,\n            2553013\n        ],\n        [\n            \"2020-06-06\",\n            null,\n            2576833\n        ],\n        [\n            \"2020-06-07\",\n            null,\n            2600280\n        ],\n        [\n            \"2020-06-08\",\n            null,\n            2619866\n        ],\n        [\n            \"2020-06-09\",\n            null,\n            2639377\n        ],\n        [\n            \"2020-06-10\",\n            null,\n            2661436\n        ]\n    ],\n    \"variables\": [\n        {\n            \"dataType\": \"DATE\",\n            \"description\": \"The date that the cases were reported.\",\n            \"fixedStorageWidth\": 10,\n            \"format\": \"YYYY-MM-DD (<a href=\\\"https://en.wikipedia.org/wiki/ISO_8601\\\" target=\\\"_blank\\\">ISO 8601</a>)\",\n            \"id\": \"date_stamp\",\n            \"index\": 1,\n            \"isDimension\": true,\n            \"isMeasure\": false,\n            \"label\": \"Report Date\",\n            \"name\": \"date_stamp\",\n            \"reference\": false,\n            \"revisionNumber\": 0,\n            \"storageType\": \"DATE\",\n            \"uri\": \"7e2f8ec5-95a0-4f2d-aa9f-d80732e7deaf\"\n        },\n        {\n            \"classificationUri\": \"c892f350-f49f-4ba9-aafe-c8c3654ad30d\",\n            \"dataType\": \"TEXT\",\n            \"description\": \"The two letter country code (ISO 3166-1 alpha-2). The ISO 3166 standard is published by the International Organization for Standardization and defines a standardized set of codes for country names.\",\n            \"fixedStorageWidth\": 2,\n            \"format\": \"<a href=\\\"https://www.iso.org/glossary-for-iso-3166.html\\\" target=\\\"_blank\\\">ISO 3166-1 alpha-2</a>\",\n            \"id\": \"iso3166_1\",\n            \"index\": 2,\n            \"isDimension\": true,\n            \"isMeasure\": false,\n            \"label\": \"Country Code (alpha-2)\",\n            \"name\": \"iso3166_1\",\n            \"reference\": false,\n            \"revisionNumber\": 0,\n            \"storageType\": \"STRING\",\n            \"uri\": \"c90bdb9c-dc56-4f69-ad21-2c0ce37bd693\"\n        },\n        {\n            \"dataType\": \"NUMERIC\",\n            \"fixedStorageWidth\": 80,\n            \"id\": \"cnt_confirmed\",\n            \"name\": \"cnt_confirmed\",\n            \"reference\": false,\n            \"revisionNumber\": 0,\n            \"storageType\": \"NUMERIC\",\n            \"uri\": \"computation.variable.sum\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Confirmed cases per day in NY & Kings counties",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e1ed03c2-645f-429f-8064-56e3bf527fff",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://covid19.richdataservices.com/rds/api/query/us_ny/ny_doh_tests/tabulate?dims=date_stamp,us_county_fips&where=(date_stamp>=2020-03-01) AND (us_county_fips=36061 OR us_county_fips=36047)&measure=cnt_confirmed_new:SUM(cnt_confirmed_new)&inject=true&metadata=true&orderBy=date_stamp ASC,us_county_fips ASC&totals=true",
									"protocol": "https",
									"host": [
										"covid19",
										"richdataservices",
										"com"
									],
									"path": [
										"rds",
										"api",
										"query",
										"us_ny",
										"ny_doh_tests",
										"tabulate"
									],
									"query": [
										{
											"key": "dims",
											"value": "date_stamp,us_county_fips",
											"description": "Our dimensions here are date_stamp and county_fipe (county code). This will return a record (or cell, if you're viewing in the tab engine) for each county for each day."
										},
										{
											"key": "where",
											"value": "(date_stamp>=2020-03-01) AND (us_county_fips=36061 OR us_county_fips=36047)",
											"description": "We will limit our results to just NY and Kings counties. \n\nYou can find all county codes by sending the following request. Note that you will need to use the `codeValue` property and not the`name` property when querying.  `http://covid19.richdataservices.com/rds/api/catalog/us_ny/ny_doh_tests/classification/us_county_fips/codes`"
										},
										{
											"key": "measure",
											"value": "cnt_confirmed_new:SUM(cnt_confirmed_new)",
											"description": "In this time series, we want the count of new cases for each county on an specific date. We will compute the count of new cases as the sum of newly confirmed cases for a county on a specific date (there will only be one value per date so the sum will give us the correct number), we will create a computed variable, cnt_confirmed_new, as the Sum of the cnt_confirmed_new variable in the data product. The sum can only be used because we used the date_stamp as a dimension."
										},
										{
											"key": "inject",
											"value": "true",
											"description": "By setting `inject` to `true`, we tell RDS that we want the county's name (ex: \"Kings County, NY\") instead of its code (ex: \"36047\")"
										},
										{
											"key": "metadata",
											"value": "true",
											"description": "Including metadata tells RDS that we want all of the variable metadata returned with our query. This is useful when populating a visualization, or just to give more context to the data."
										},
										{
											"key": "orderBy",
											"value": "date_stamp ASC,us_county_fips ASC",
											"description": "We will order date by ascending order, creating a time series, and county by ascending order, sorting them alphabetically."
										},
										{
											"key": "totals",
											"value": "true",
											"description": "Choose whether or not to include totals for the dimensions"
										}
									]
								},
								"description": "One benefit of looking at COVID-19 data reported by state agencies is that they often contain more information around testing and case information than national datasets. For this data reported by the New York Department of Health, we will calculate at the number of new tests performed each day in each county. [See it in the Tabulation Engine](https://covid19.richdataservices.com/rds-tabengine/analysis/us_ny/ny_doh_tests/custom-tables;showTotals=true,true,true,true;sortRows=VALUE,ASC;sortCols=NAME,ASC;filterEmpty=true?cols=us_county_fips&rows=date_stamp&where=(us_county_fips%3D36047%20OR%20us_county_fips%3D36061)&measure=cnt_confirmed_new:SUM(cnt_confirmed_new)?utm_source=postman&utm_medium=postmanlabs&utm_campaign=covid_19_apis)."
							},
							"response": [
								{
									"name": "Visualize tests per day in NY & Kings counties",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://covid19.richdataservices.com/rds/api/query/us_ny/ny_doh_tests/tabulate?dims=date_stamp,us_county_fips&where=(date_stamp>=2020-03-01) AND (us_county_fips=36061 OR us_county_fips=36047)&measure=cnt_tested_new:SUM(cnt_tested_new)&inject=true&metadata=true&orderBy=date_stamp ASC,us_county_fips ASC&totals=true",
											"protocol": "https",
											"host": [
												"covid19",
												"richdataservices",
												"com"
											],
											"path": [
												"rds",
												"api",
												"query",
												"us_ny",
												"ny_doh_tests",
												"tabulate"
											],
											"query": [
												{
													"key": "dims",
													"value": "date_stamp,us_county_fips",
													"description": "Our dimensions here are date_stamp and county_fipe (county code). This will return a record (or cell, if you're viewing in the tab engine) for each county for each day."
												},
												{
													"key": "where",
													"value": "(date_stamp>=2020-03-01) AND (us_county_fips=36061 OR us_county_fips=36047)",
													"description": "We will limit our results to just NY and Kings counties. \n\nYou can find all county codes by querying `http://covid19.richdataservices.com/rds/api/catalog/us_ny/ny_doh_tests/classification/us_county_fips/codes`"
												},
												{
													"key": "measure",
													"value": "cnt_tested_new:SUM(cnt_tested_new)",
													"description": "Since we want to measure all of the new cases per day, we will define cnt_tested_new as the sum of its values."
												},
												{
													"key": "inject",
													"value": "true",
													"description": "By setting `inject` to `true`, we tell RDS that we want the county's name (ex: \"Kings County, NY\") instead of its code (ex: \"36047\")"
												},
												{
													"key": "metadata",
													"value": "true",
													"description": "Including metadata tells RDS that we want all of the variable metadata returned with our query. This is useful when populating a visualization, or just to give more context to the data."
												},
												{
													"key": "orderBy",
													"value": "date_stamp ASC,us_county_fips ASC",
													"description": "We will order date by ascending order, creating a time series, and county by ascending order, sorting them alphabetically."
												},
												{
													"key": "totals",
													"value": "true",
													"description": "Choose whether or not to include totals for the dimensions"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Thu, 18 Jun 2020 13:41:34 GMT"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"info\": {\n        \"cached\": false,\n        \"columnCount\": 3,\n        \"columnOffset\": 0,\n        \"end\": \"2020-06-18T13:41:34.667Z\",\n        \"includeMetadata\": true,\n        \"moreColumns\": false,\n        \"moreRows\": false,\n        \"notes\": [],\n        \"postQueryTime\": 0,\n        \"preQueryTime\": 99,\n        \"queryTime\": 68,\n        \"rowCount\": 214,\n        \"rowLimit\": 214,\n        \"rowOffset\": 0,\n        \"start\": \"2020-06-18T13:41:34.500Z\",\n        \"tableCellCount\": 214,\n        \"totalProcessingTime\": 167\n    },\n    \"records\": [\n        [\n            \"2020-03-02\",\n            \"Kings County, NY\",\n            0\n        ],\n        [\n            \"2020-03-02\",\n            \"New York County, NY\",\n            0\n        ],\n        [\n            \"2020-03-03\",\n            \"Kings County, NY\",\n            2\n        ],\n        [\n            \"2020-03-03\",\n            \"New York County, NY\",\n            3\n        ],\n        [\n            \"2020-03-04\",\n            \"Kings County, NY\",\n            4\n        ],\n        [\n            \"2020-03-04\",\n            \"New York County, NY\",\n            4\n        ],\n        [\n            \"2020-03-05\",\n            \"Kings County, NY\",\n            7\n        ],\n        [\n            \"2020-03-05\",\n            \"New York County, NY\",\n            18\n        ],\n        [\n            \"2020-03-06\",\n            \"Kings County, NY\",\n            12\n        ],\n        [\n            \"2020-03-06\",\n            \"New York County, NY\",\n            14\n        ],\n        [\n            \"2020-03-07\",\n            \"Kings County, NY\",\n            9\n        ],\n        [\n            \"2020-03-07\",\n            \"New York County, NY\",\n            22\n        ],\n        [\n            \"2020-03-08\",\n            \"Kings County, NY\",\n            10\n        ],\n        [\n            \"2020-03-08\",\n            \"New York County, NY\",\n            24\n        ],\n        [\n            \"2020-03-09\",\n            \"Kings County, NY\",\n            31\n        ],\n        [\n            \"2020-03-09\",\n            \"New York County, NY\",\n            47\n        ],\n        [\n            \"2020-03-10\",\n            \"Kings County, NY\",\n            29\n        ],\n        [\n            \"2020-03-10\",\n            \"New York County, NY\",\n            78\n        ],\n        [\n            \"2020-03-11\",\n            \"Kings County, NY\",\n            24\n        ],\n        [\n            \"2020-03-11\",\n            \"New York County, NY\",\n            70\n        ],\n        [\n            \"2020-03-12\",\n            \"Kings County, NY\",\n            59\n        ],\n        [\n            \"2020-03-12\",\n            \"New York County, NY\",\n            186\n        ],\n        [\n            \"2020-03-13\",\n            \"Kings County, NY\",\n            136\n        ],\n        [\n            \"2020-03-13\",\n            \"New York County, NY\",\n            268\n        ],\n        [\n            \"2020-03-14\",\n            \"Kings County, NY\",\n            99\n        ],\n        [\n            \"2020-03-14\",\n            \"New York County, NY\",\n            193\n        ],\n        [\n            \"2020-03-15\",\n            \"Kings County, NY\",\n            166\n        ],\n        [\n            \"2020-03-15\",\n            \"New York County, NY\",\n            317\n        ],\n        [\n            \"2020-03-16\",\n            \"Kings County, NY\",\n            171\n        ],\n        [\n            \"2020-03-16\",\n            \"New York County, NY\",\n            398\n        ],\n        [\n            \"2020-03-17\",\n            \"Kings County, NY\",\n            741\n        ],\n        [\n            \"2020-03-17\",\n            \"New York County, NY\",\n            598\n        ],\n        [\n            \"2020-03-18\",\n            \"Kings County, NY\",\n            795\n        ],\n        [\n            \"2020-03-18\",\n            \"New York County, NY\",\n            1074\n        ],\n        [\n            \"2020-03-19\",\n            \"Kings County, NY\",\n            1553\n        ],\n        [\n            \"2020-03-19\",\n            \"New York County, NY\",\n            1235\n        ],\n        [\n            \"2020-03-20\",\n            \"Kings County, NY\",\n            1378\n        ],\n        [\n            \"2020-03-20\",\n            \"New York County, NY\",\n            1263\n        ],\n        [\n            \"2020-03-21\",\n            \"Kings County, NY\",\n            1941\n        ],\n        [\n            \"2020-03-21\",\n            \"New York County, NY\",\n            1370\n        ],\n        [\n            \"2020-03-22\",\n            \"Kings County, NY\",\n            1506\n        ],\n        [\n            \"2020-03-22\",\n            \"New York County, NY\",\n            1367\n        ],\n        [\n            \"2020-03-23\",\n            \"Kings County, NY\",\n            1422\n        ],\n        [\n            \"2020-03-23\",\n            \"New York County, NY\",\n            990\n        ],\n        [\n            \"2020-03-24\",\n            \"Kings County, NY\",\n            1474\n        ],\n        [\n            \"2020-03-24\",\n            \"New York County, NY\",\n            1065\n        ],\n        [\n            \"2020-03-25\",\n            \"Kings County, NY\",\n            1550\n        ],\n        [\n            \"2020-03-25\",\n            \"New York County, NY\",\n            1232\n        ],\n        [\n            \"2020-03-26\",\n            \"Kings County, NY\",\n            1905\n        ],\n        [\n            \"2020-03-26\",\n            \"New York County, NY\",\n            1062\n        ],\n        [\n            \"2020-03-27\",\n            \"Kings County, NY\",\n            2254\n        ],\n        [\n            \"2020-03-27\",\n            \"New York County, NY\",\n            1314\n        ],\n        [\n            \"2020-03-28\",\n            \"Kings County, NY\",\n            1790\n        ],\n        [\n            \"2020-03-28\",\n            \"New York County, NY\",\n            1160\n        ],\n        [\n            \"2020-03-29\",\n            \"Kings County, NY\",\n            1627\n        ],\n        [\n            \"2020-03-29\",\n            \"New York County, NY\",\n            788\n        ],\n        [\n            \"2020-03-30\",\n            \"Kings County, NY\",\n            3113\n        ],\n        [\n            \"2020-03-30\",\n            \"New York County, NY\",\n            1422\n        ],\n        [\n            \"2020-03-31\",\n            \"Kings County, NY\",\n            2011\n        ],\n        [\n            \"2020-03-31\",\n            \"New York County, NY\",\n            1015\n        ],\n        [\n            \"2020-04-01\",\n            \"Kings County, NY\",\n            2041\n        ],\n        [\n            \"2020-04-01\",\n            \"New York County, NY\",\n            1002\n        ],\n        [\n            \"2020-04-02\",\n            \"Kings County, NY\",\n            2512\n        ],\n        [\n            \"2020-04-02\",\n            \"New York County, NY\",\n            1294\n        ],\n        [\n            \"2020-04-03\",\n            \"Kings County, NY\",\n            3234\n        ],\n        [\n            \"2020-04-03\",\n            \"New York County, NY\",\n            1820\n        ],\n        [\n            \"2020-04-04\",\n            \"Kings County, NY\",\n            1990\n        ],\n        [\n            \"2020-04-04\",\n            \"New York County, NY\",\n            1278\n        ],\n        [\n            \"2020-04-05\",\n            \"Kings County, NY\",\n            2013\n        ],\n        [\n            \"2020-04-05\",\n            \"New York County, NY\",\n            1162\n        ],\n        [\n            \"2020-04-06\",\n            \"Kings County, NY\",\n            2245\n        ],\n        [\n            \"2020-04-06\",\n            \"New York County, NY\",\n            1249\n        ],\n        [\n            \"2020-04-07\",\n            \"Kings County, NY\",\n            2607\n        ],\n        [\n            \"2020-04-07\",\n            \"New York County, NY\",\n            1257\n        ],\n        [\n            \"2020-04-08\",\n            \"Kings County, NY\",\n            2565\n        ],\n        [\n            \"2020-04-08\",\n            \"New York County, NY\",\n            1424\n        ],\n        [\n            \"2020-04-09\",\n            \"Kings County, NY\",\n            2578\n        ],\n        [\n            \"2020-04-09\",\n            \"New York County, NY\",\n            1659\n        ],\n        [\n            \"2020-04-10\",\n            \"Kings County, NY\",\n            2887\n        ],\n        [\n            \"2020-04-10\",\n            \"New York County, NY\",\n            1685\n        ],\n        [\n            \"2020-04-11\",\n            \"Kings County, NY\",\n            2670\n        ],\n        [\n            \"2020-04-11\",\n            \"New York County, NY\",\n            1783\n        ],\n        [\n            \"2020-04-12\",\n            \"Kings County, NY\",\n            2029\n        ],\n        [\n            \"2020-04-12\",\n            \"New York County, NY\",\n            1033\n        ],\n        [\n            \"2020-04-13\",\n            \"Kings County, NY\",\n            2055\n        ],\n        [\n            \"2020-04-13\",\n            \"New York County, NY\",\n            1206\n        ],\n        [\n            \"2020-04-14\",\n            \"Kings County, NY\",\n            5103\n        ],\n        [\n            \"2020-04-14\",\n            \"New York County, NY\",\n            4068\n        ],\n        [\n            \"2020-04-15\",\n            \"Kings County, NY\",\n            3724\n        ],\n        [\n            \"2020-04-15\",\n            \"New York County, NY\",\n            1533\n        ],\n        [\n            \"2020-04-16\",\n            \"Kings County, NY\",\n            3347\n        ],\n        [\n            \"2020-04-16\",\n            \"New York County, NY\",\n            1476\n        ],\n        [\n            \"2020-04-17\",\n            \"Kings County, NY\",\n            3016\n        ],\n        [\n            \"2020-04-17\",\n            \"New York County, NY\",\n            1585\n        ],\n        [\n            \"2020-04-18\",\n            \"Kings County, NY\",\n            2390\n        ],\n        [\n            \"2020-04-18\",\n            \"New York County, NY\",\n            1093\n        ],\n        [\n            \"2020-04-19\",\n            \"Kings County, NY\",\n            1835\n        ],\n        [\n            \"2020-04-19\",\n            \"New York County, NY\",\n            954\n        ],\n        [\n            \"2020-04-20\",\n            \"Kings County, NY\",\n            2300\n        ],\n        [\n            \"2020-04-20\",\n            \"New York County, NY\",\n            1099\n        ],\n        [\n            \"2020-04-21\",\n            \"Kings County, NY\",\n            2827\n        ],\n        [\n            \"2020-04-21\",\n            \"New York County, NY\",\n            1430\n        ],\n        [\n            \"2020-04-22\",\n            \"Kings County, NY\",\n            3526\n        ],\n        [\n            \"2020-04-22\",\n            \"New York County, NY\",\n            1581\n        ],\n        [\n            \"2020-04-23\",\n            \"Kings County, NY\",\n            5030\n        ],\n        [\n            \"2020-04-23\",\n            \"New York County, NY\",\n            2654\n        ],\n        [\n            \"2020-04-24\",\n            \"Kings County, NY\",\n            4021\n        ],\n        [\n            \"2020-04-24\",\n            \"New York County, NY\",\n            2110\n        ],\n        [\n            \"2020-04-25\",\n            \"Kings County, NY\",\n            3685\n        ],\n        [\n            \"2020-04-25\",\n            \"New York County, NY\",\n            2354\n        ],\n        [\n            \"2020-04-26\",\n            \"Kings County, NY\",\n            2684\n        ],\n        [\n            \"2020-04-26\",\n            \"New York County, NY\",\n            2007\n        ],\n        [\n            \"2020-04-27\",\n            \"Kings County, NY\",\n            2940\n        ],\n        [\n            \"2020-04-27\",\n            \"New York County, NY\",\n            1650\n        ],\n        [\n            \"2020-04-28\",\n            \"Kings County, NY\",\n            3873\n        ],\n        [\n            \"2020-04-28\",\n            \"New York County, NY\",\n            2260\n        ],\n        [\n            \"2020-04-29\",\n            \"Kings County, NY\",\n            3944\n        ],\n        [\n            \"2020-04-29\",\n            \"New York County, NY\",\n            2299\n        ],\n        [\n            \"2020-04-30\",\n            \"Kings County, NY\",\n            3927\n        ],\n        [\n            \"2020-04-30\",\n            \"New York County, NY\",\n            2205\n        ],\n        [\n            \"2020-05-01\",\n            \"Kings County, NY\",\n            4717\n        ],\n        [\n            \"2020-05-01\",\n            \"New York County, NY\",\n            2606\n        ],\n        [\n            \"2020-05-02\",\n            \"Kings County, NY\",\n            3804\n        ],\n        [\n            \"2020-05-02\",\n            \"New York County, NY\",\n            2214\n        ],\n        [\n            \"2020-05-03\",\n            \"Kings County, NY\",\n            2545\n        ],\n        [\n            \"2020-05-03\",\n            \"New York County, NY\",\n            1524\n        ],\n        [\n            \"2020-05-04\",\n            \"Kings County, NY\",\n            3364\n        ],\n        [\n            \"2020-05-04\",\n            \"New York County, NY\",\n            2246\n        ],\n        [\n            \"2020-05-05\",\n            \"Kings County, NY\",\n            3597\n        ],\n        [\n            \"2020-05-05\",\n            \"New York County, NY\",\n            2499\n        ],\n        [\n            \"2020-05-06\",\n            \"Kings County, NY\",\n            5284\n        ],\n        [\n            \"2020-05-06\",\n            \"New York County, NY\",\n            2966\n        ],\n        [\n            \"2020-05-07\",\n            \"Kings County, NY\",\n            4582\n        ],\n        [\n            \"2020-05-07\",\n            \"New York County, NY\",\n            3036\n        ],\n        [\n            \"2020-05-08\",\n            \"Kings County, NY\",\n            4747\n        ],\n        [\n            \"2020-05-08\",\n            \"New York County, NY\",\n            2633\n        ],\n        [\n            \"2020-05-09\",\n            \"Kings County, NY\",\n            3682\n        ],\n        [\n            \"2020-05-09\",\n            \"New York County, NY\",\n            2336\n        ],\n        [\n            \"2020-05-10\",\n            \"Kings County, NY\",\n            2825\n        ],\n        [\n            \"2020-05-10\",\n            \"New York County, NY\",\n            1496\n        ],\n        [\n            \"2020-05-11\",\n            \"Kings County, NY\",\n            2984\n        ],\n        [\n            \"2020-05-11\",\n            \"New York County, NY\",\n            1984\n        ],\n        [\n            \"2020-05-12\",\n            \"Kings County, NY\",\n            4615\n        ],\n        [\n            \"2020-05-12\",\n            \"New York County, NY\",\n            2825\n        ],\n        [\n            \"2020-05-13\",\n            \"Kings County, NY\",\n            6107\n        ],\n        [\n            \"2020-05-13\",\n            \"New York County, NY\",\n            3697\n        ],\n        [\n            \"2020-05-14\",\n            \"Kings County, NY\",\n            5741\n        ],\n        [\n            \"2020-05-14\",\n            \"New York County, NY\",\n            3933\n        ],\n        [\n            \"2020-05-15\",\n            \"Kings County, NY\",\n            5793\n        ],\n        [\n            \"2020-05-15\",\n            \"New York County, NY\",\n            3469\n        ],\n        [\n            \"2020-05-16\",\n            \"Kings County, NY\",\n            4377\n        ],\n        [\n            \"2020-05-16\",\n            \"New York County, NY\",\n            3096\n        ],\n        [\n            \"2020-05-17\",\n            \"Kings County, NY\",\n            3052\n        ],\n        [\n            \"2020-05-17\",\n            \"New York County, NY\",\n            2019\n        ],\n        [\n            \"2020-05-18\",\n            \"Kings County, NY\",\n            4133\n        ],\n        [\n            \"2020-05-18\",\n            \"New York County, NY\",\n            2830\n        ],\n        [\n            \"2020-05-19\",\n            \"Kings County, NY\",\n            3890\n        ],\n        [\n            \"2020-05-19\",\n            \"New York County, NY\",\n            3685\n        ],\n        [\n            \"2020-05-20\",\n            \"Kings County, NY\",\n            7252\n        ],\n        [\n            \"2020-05-20\",\n            \"New York County, NY\",\n            4219\n        ],\n        [\n            \"2020-05-21\",\n            \"Kings County, NY\",\n            5372\n        ],\n        [\n            \"2020-05-21\",\n            \"New York County, NY\",\n            4363\n        ],\n        [\n            \"2020-05-22\",\n            \"Kings County, NY\",\n            6189\n        ],\n        [\n            \"2020-05-22\",\n            \"New York County, NY\",\n            4582\n        ],\n        [\n            \"2020-05-23\",\n            \"Kings County, NY\",\n            6813\n        ],\n        [\n            \"2020-05-23\",\n            \"New York County, NY\",\n            4187\n        ],\n        [\n            \"2020-05-24\",\n            \"Kings County, NY\",\n            4990\n        ],\n        [\n            \"2020-05-24\",\n            \"New York County, NY\",\n            3356\n        ],\n        [\n            \"2020-05-25\",\n            \"Kings County, NY\",\n            5214\n        ],\n        [\n            \"2020-05-25\",\n            \"New York County, NY\",\n            3635\n        ],\n        [\n            \"2020-05-26\",\n            \"Kings County, NY\",\n            5940\n        ],\n        [\n            \"2020-05-26\",\n            \"New York County, NY\",\n            3599\n        ],\n        [\n            \"2020-05-27\",\n            \"Kings County, NY\",\n            10938\n        ],\n        [\n            \"2020-05-27\",\n            \"New York County, NY\",\n            6888\n        ],\n        [\n            \"2020-05-28\",\n            \"Kings County, NY\",\n            10686\n        ],\n        [\n            \"2020-05-28\",\n            \"New York County, NY\",\n            7418\n        ],\n        [\n            \"2020-05-29\",\n            \"Kings County, NY\",\n            9619\n        ],\n        [\n            \"2020-05-29\",\n            \"New York County, NY\",\n            5678\n        ],\n        [\n            \"2020-05-30\",\n            \"Kings County, NY\",\n            7167\n        ],\n        [\n            \"2020-05-30\",\n            \"New York County, NY\",\n            4425\n        ],\n        [\n            \"2020-05-31\",\n            \"Kings County, NY\",\n            5765\n        ],\n        [\n            \"2020-05-31\",\n            \"New York County, NY\",\n            4385\n        ],\n        [\n            \"2020-06-01\",\n            \"Kings County, NY\",\n            7500\n        ],\n        [\n            \"2020-06-01\",\n            \"New York County, NY\",\n            5161\n        ],\n        [\n            \"2020-06-02\",\n            \"Kings County, NY\",\n            7485\n        ],\n        [\n            \"2020-06-02\",\n            \"New York County, NY\",\n            4211\n        ],\n        [\n            \"2020-06-03\",\n            \"Kings County, NY\",\n            7880\n        ],\n        [\n            \"2020-06-03\",\n            \"New York County, NY\",\n            4377\n        ],\n        [\n            \"2020-06-04\",\n            \"Kings County, NY\",\n            7659\n        ],\n        [\n            \"2020-06-04\",\n            \"New York County, NY\",\n            4416\n        ],\n        [\n            \"2020-06-05\",\n            \"Kings County, NY\",\n            9370\n        ],\n        [\n            \"2020-06-05\",\n            \"New York County, NY\",\n            5322\n        ],\n        [\n            \"2020-06-06\",\n            \"Kings County, NY\",\n            8378\n        ],\n        [\n            \"2020-06-06\",\n            \"New York County, NY\",\n            4711\n        ],\n        [\n            \"2020-06-07\",\n            \"Kings County, NY\",\n            7254\n        ],\n        [\n            \"2020-06-07\",\n            \"New York County, NY\",\n            4045\n        ],\n        [\n            \"2020-06-08\",\n            \"Kings County, NY\",\n            5499\n        ],\n        [\n            \"2020-06-08\",\n            \"New York County, NY\",\n            3953\n        ],\n        [\n            \"2020-06-09\",\n            \"Kings County, NY\",\n            8815\n        ],\n        [\n            \"2020-06-09\",\n            \"New York County, NY\",\n            5433\n        ],\n        [\n            \"2020-06-10\",\n            \"Kings County, NY\",\n            6515\n        ],\n        [\n            \"2020-06-10\",\n            \"New York County, NY\",\n            4991\n        ],\n        [\n            \"2020-06-11\",\n            \"Kings County, NY\",\n            8670\n        ],\n        [\n            \"2020-06-11\",\n            \"New York County, NY\",\n            5660\n        ],\n        [\n            \"2020-06-12\",\n            \"Kings County, NY\",\n            10217\n        ],\n        [\n            \"2020-06-12\",\n            \"New York County, NY\",\n            6296\n        ],\n        [\n            \"2020-06-13\",\n            \"Kings County, NY\",\n            9012\n        ],\n        [\n            \"2020-06-13\",\n            \"New York County, NY\",\n            5525\n        ],\n        [\n            \"2020-06-14\",\n            \"Kings County, NY\",\n            8880\n        ],\n        [\n            \"2020-06-14\",\n            \"New York County, NY\",\n            6036\n        ],\n        [\n            \"2020-06-15\",\n            \"Kings County, NY\",\n            8034\n        ],\n        [\n            \"2020-06-15\",\n            \"New York County, NY\",\n            6158\n        ],\n        [\n            \"2020-06-16\",\n            \"Kings County, NY\",\n            8472\n        ],\n        [\n            \"2020-06-16\",\n            \"New York County, NY\",\n            5830\n        ]\n    ],\n    \"totals\": [\n        [\n            null,\n            null,\n            669602\n        ],\n        [\n            \"2020-03-02\",\n            null,\n            0\n        ],\n        [\n            null,\n            \"Kings County, NY\",\n            410841\n        ],\n        [\n            null,\n            \"New York County, NY\",\n            258761\n        ],\n        [\n            \"2020-03-03\",\n            null,\n            5\n        ],\n        [\n            \"2020-03-04\",\n            null,\n            8\n        ],\n        [\n            \"2020-03-05\",\n            null,\n            25\n        ],\n        [\n            \"2020-03-06\",\n            null,\n            26\n        ],\n        [\n            \"2020-03-07\",\n            null,\n            31\n        ],\n        [\n            \"2020-03-08\",\n            null,\n            34\n        ],\n        [\n            \"2020-03-09\",\n            null,\n            78\n        ],\n        [\n            \"2020-03-10\",\n            null,\n            107\n        ],\n        [\n            \"2020-03-11\",\n            null,\n            94\n        ],\n        [\n            \"2020-03-12\",\n            null,\n            245\n        ],\n        [\n            \"2020-03-13\",\n            null,\n            404\n        ],\n        [\n            \"2020-03-14\",\n            null,\n            292\n        ],\n        [\n            \"2020-03-15\",\n            null,\n            483\n        ],\n        [\n            \"2020-03-16\",\n            null,\n            569\n        ],\n        [\n            \"2020-03-17\",\n            null,\n            1339\n        ],\n        [\n            \"2020-03-18\",\n            null,\n            1869\n        ],\n        [\n            \"2020-03-19\",\n            null,\n            2788\n        ],\n        [\n            \"2020-03-20\",\n            null,\n            2641\n        ],\n        [\n            \"2020-03-21\",\n            null,\n            3311\n        ],\n        [\n            \"2020-03-22\",\n            null,\n            2873\n        ],\n        [\n            \"2020-03-23\",\n            null,\n            2412\n        ],\n        [\n            \"2020-03-24\",\n            null,\n            2539\n        ],\n        [\n            \"2020-03-25\",\n            null,\n            2782\n        ],\n        [\n            \"2020-03-26\",\n            null,\n            2967\n        ],\n        [\n            \"2020-03-27\",\n            null,\n            3568\n        ],\n        [\n            \"2020-03-28\",\n            null,\n            2950\n        ],\n        [\n            \"2020-03-29\",\n            null,\n            2415\n        ],\n        [\n            \"2020-03-30\",\n            null,\n            4535\n        ],\n        [\n            \"2020-03-31\",\n            null,\n            3026\n        ],\n        [\n            \"2020-04-01\",\n            null,\n            3043\n        ],\n        [\n            \"2020-04-02\",\n            null,\n            3806\n        ],\n        [\n            \"2020-04-03\",\n            null,\n            5054\n        ],\n        [\n            \"2020-04-04\",\n            null,\n            3268\n        ],\n        [\n            \"2020-04-05\",\n            null,\n            3175\n        ],\n        [\n            \"2020-04-06\",\n            null,\n            3494\n        ],\n        [\n            \"2020-04-07\",\n            null,\n            3864\n        ],\n        [\n            \"2020-04-08\",\n            null,\n            3989\n        ],\n        [\n            \"2020-04-09\",\n            null,\n            4237\n        ],\n        [\n            \"2020-04-10\",\n            null,\n            4572\n        ],\n        [\n            \"2020-04-11\",\n            null,\n            4453\n        ],\n        [\n            \"2020-04-12\",\n            null,\n            3062\n        ],\n        [\n            \"2020-04-13\",\n            null,\n            3261\n        ],\n        [\n            \"2020-04-14\",\n            null,\n            9171\n        ],\n        [\n            \"2020-04-15\",\n            null,\n            5257\n        ],\n        [\n            \"2020-04-16\",\n            null,\n            4823\n        ],\n        [\n            \"2020-04-17\",\n            null,\n            4601\n        ],\n        [\n            \"2020-04-18\",\n            null,\n            3483\n        ],\n        [\n            \"2020-04-19\",\n            null,\n            2789\n        ],\n        [\n            \"2020-04-20\",\n            null,\n            3399\n        ],\n        [\n            \"2020-04-21\",\n            null,\n            4257\n        ],\n        [\n            \"2020-04-22\",\n            null,\n            5107\n        ],\n        [\n            \"2020-04-23\",\n            null,\n            7684\n        ],\n        [\n            \"2020-04-24\",\n            null,\n            6131\n        ],\n        [\n            \"2020-04-25\",\n            null,\n            6039\n        ],\n        [\n            \"2020-04-26\",\n            null,\n            4691\n        ],\n        [\n            \"2020-04-27\",\n            null,\n            4590\n        ],\n        [\n            \"2020-04-28\",\n            null,\n            6133\n        ],\n        [\n            \"2020-04-29\",\n            null,\n            6243\n        ],\n        [\n            \"2020-04-30\",\n            null,\n            6132\n        ],\n        [\n            \"2020-05-01\",\n            null,\n            7323\n        ],\n        [\n            \"2020-05-02\",\n            null,\n            6018\n        ],\n        [\n            \"2020-05-03\",\n            null,\n            4069\n        ],\n        [\n            \"2020-05-04\",\n            null,\n            5610\n        ],\n        [\n            \"2020-05-05\",\n            null,\n            6096\n        ],\n        [\n            \"2020-05-06\",\n            null,\n            8250\n        ],\n        [\n            \"2020-05-07\",\n            null,\n            7618\n        ],\n        [\n            \"2020-05-08\",\n            null,\n            7380\n        ],\n        [\n            \"2020-05-09\",\n            null,\n            6018\n        ],\n        [\n            \"2020-05-10\",\n            null,\n            4321\n        ],\n        [\n            \"2020-05-11\",\n            null,\n            4968\n        ],\n        [\n            \"2020-05-12\",\n            null,\n            7440\n        ],\n        [\n            \"2020-05-13\",\n            null,\n            9804\n        ],\n        [\n            \"2020-05-14\",\n            null,\n            9674\n        ],\n        [\n            \"2020-05-15\",\n            null,\n            9262\n        ],\n        [\n            \"2020-05-16\",\n            null,\n            7473\n        ],\n        [\n            \"2020-05-17\",\n            null,\n            5071\n        ],\n        [\n            \"2020-05-18\",\n            null,\n            6963\n        ],\n        [\n            \"2020-05-19\",\n            null,\n            7575\n        ],\n        [\n            \"2020-05-20\",\n            null,\n            11471\n        ],\n        [\n            \"2020-05-21\",\n            null,\n            9735\n        ],\n        [\n            \"2020-05-22\",\n            null,\n            10771\n        ],\n        [\n            \"2020-05-23\",\n            null,\n            11000\n        ],\n        [\n            \"2020-05-24\",\n            null,\n            8346\n        ],\n        [\n            \"2020-05-25\",\n            null,\n            8849\n        ],\n        [\n            \"2020-05-26\",\n            null,\n            9539\n        ],\n        [\n            \"2020-05-27\",\n            null,\n            17826\n        ],\n        [\n            \"2020-05-28\",\n            null,\n            18104\n        ],\n        [\n            \"2020-05-29\",\n            null,\n            15297\n        ],\n        [\n            \"2020-05-30\",\n            null,\n            11592\n        ],\n        [\n            \"2020-05-31\",\n            null,\n            10150\n        ],\n        [\n            \"2020-06-01\",\n            null,\n            12661\n        ],\n        [\n            \"2020-06-02\",\n            null,\n            11696\n        ],\n        [\n            \"2020-06-03\",\n            null,\n            12257\n        ],\n        [\n            \"2020-06-04\",\n            null,\n            12075\n        ],\n        [\n            \"2020-06-05\",\n            null,\n            14692\n        ],\n        [\n            \"2020-06-06\",\n            null,\n            13089\n        ],\n        [\n            \"2020-06-07\",\n            null,\n            11299\n        ],\n        [\n            \"2020-06-08\",\n            null,\n            9452\n        ],\n        [\n            \"2020-06-09\",\n            null,\n            14248\n        ],\n        [\n            \"2020-06-10\",\n            null,\n            11506\n        ],\n        [\n            \"2020-06-11\",\n            null,\n            14330\n        ],\n        [\n            \"2020-06-12\",\n            null,\n            16513\n        ],\n        [\n            \"2020-06-13\",\n            null,\n            14537\n        ],\n        [\n            \"2020-06-14\",\n            null,\n            14916\n        ],\n        [\n            \"2020-06-15\",\n            null,\n            14192\n        ],\n        [\n            \"2020-06-16\",\n            null,\n            14302\n        ]\n    ],\n    \"variables\": [\n        {\n            \"dataType\": \"DATE\",\n            \"description\": \"The date the test result was processed by the NYS Electronic Clinical Laboratory Reporting System (ECLRS).\",\n            \"fixedStorageWidth\": 0,\n            \"format\": \"YYYY-MM-DD (<a href=\\\"https://en.wikipedia.org/wiki/ISO_8601\\\" target=\\\"_blank\\\">ISO 8601</a>)\",\n            \"id\": \"date_stamp\",\n            \"index\": 1,\n            \"isDimension\": true,\n            \"isMeasure\": false,\n            \"label\": \"Datestamp\",\n            \"name\": \"date_stamp\",\n            \"reference\": false,\n            \"revisionNumber\": 0,\n            \"storageType\": \"DATE\",\n            \"uri\": \"e5f7369b-8cd8-49d6-b540-ebbf4dce095c\"\n        },\n        {\n            \"classificationUri\": \"03f13b5e-a808-4d76-bc58-46bcd1787379\",\n            \"dataType\": \"TEXT\",\n            \"description\": \"The New York county of residence for the person tested.\",\n            \"fixedStorageWidth\": 5,\n            \"format\": \"FIPS 6-4 County Code\",\n            \"id\": \"us_county_fips\",\n            \"index\": 2,\n            \"isDimension\": true,\n            \"isMeasure\": false,\n            \"label\": \"County Code (5-digit)\",\n            \"name\": \"us_county_fips\",\n            \"reference\": false,\n            \"revisionNumber\": 0,\n            \"storageType\": \"VARCHAR\",\n            \"uri\": \"d5f2fe51-f6e3-4a43-9303-e454b47e6f58\"\n        },\n        {\n            \"dataType\": \"NUMERIC\",\n            \"fixedStorageWidth\": 5,\n            \"id\": \"cnt_tested_new\",\n            \"name\": \"cnt_tested_new\",\n            \"reference\": false,\n            \"revisionNumber\": 0,\n            \"storageType\": \"NUMERIC\",\n            \"uri\": \"computation.variable.sum\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Tabulate confirmed cases, across gender and age in Canada.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://covid19.richdataservices.com/rds/api/query/ca/ca_statcan_cases/tabulate?dims=gender,age_group&measure=COUNT:COUNT(*)&format=amcharts&inject=true&orderby=gender ASC, age_group DESC",
									"protocol": "http",
									"host": [
										"covid19",
										"richdataservices",
										"com"
									],
									"path": [
										"rds",
										"api",
										"query",
										"ca",
										"ca_statcan_cases",
										"tabulate"
									],
									"query": [
										{
											"key": "dims",
											"value": "gender,age_group",
											"description": "Our dimensions are gender and age group, creating the axis categories for the heatmap"
										},
										{
											"key": "measure",
											"value": "COUNT:COUNT(*)",
											"description": "Calculate the count of respondents that fall into each age group and gender and assign it to variable named \"COUNT\""
										},
										{
											"key": "format",
											"value": "amcharts",
											"description": "Our desired charting library. Other available formats are `PLOTLY_BAR`, `PLOTLY_BOXPLOT`, `PLOTLY_BUBBLE`, `PLOTLY_HIST`, `PLOTLY_PIE`, `GCHART`"
										},
										{
											"key": "inject",
											"value": "true",
											"description": "Inject the code label in place of the code value - so we will see \"Male, Female, Non-binary, Not stated.\" instead of \"1, 2, 3, 9.\""
										},
										{
											"key": "orderby",
											"value": "gender ASC, age_group DESC",
											"description": "Order by gender ascending order, and age group descending, creating the right order for our heatmap to display."
										}
									]
								},
								"description": "Here, we are using a dataset from Statistics Canada that contains record level data about COVID-19 cases. Each row (record) in the data file represents a single reported confirmed case. Data like this can be more interesting, but also larger, more difficult to parse, and requires a bit of extra work to make meaningful comparisons. \n\nBy specifying amCharts as our format, we can plug this request into our JavaScript code and cut out all of the data manipulation we would otherwise need to deal with, as RDS takes care of the calculations and formatting. Check out the full code for this and other data visualizations [on our RDS-JavaScript examples page](https://mtna.github.io/rds-js-examples/#tabulate-query).  \n\nIn this visualization, we are comparing the number of confirmed cases (indicated by the shade of blue defined on the scale) for each gender (the four reported categories on the horizontal axis) and age group (categories defined on the vertical axis). You can also see this query in the [Tabulation Engine](https://covid19.richdataservices.com/rds-tabengine/analysis/ca/ca_statcan_cases/custom-tables;showTotals=true,true,true,true;sortRows=VALUE,DESC;sortCols=NAME,ASC;filterEmpty=true?cols=gender&rows=age_group&measure=COUNT:COUNT(*)?utm_source=postman&utm_medium=postmanlabs&utm_campaign=covid_19_apis).\n\n\n<img src=\"https://mtna.s3.amazonaws.com/rds/images/Postman/plotlyheatmap.png\" alt=\"plotlyHeatmap\" width=\"600\"/> \n  \n*Data as of 5/27/2020*"
							},
							"response": [
								{
									"name": "Tabulate confirmed cases, recovered cases, and deaths by country.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/rds/api/query/ca/ca_statcan_cases/tabulate?dims=gender,age_group&measure=COUNT:COUNT(*)&format=amcharts&metadata=true&totals=true&inject=true&orderby=gender ASC, age_group DESC",
											"host": [
												"{{host}}"
											],
											"path": [
												"rds",
												"api",
												"query",
												"ca",
												"ca_statcan_cases",
												"tabulate"
											],
											"query": [
												{
													"key": "dims",
													"value": "gender,age_group"
												},
												{
													"key": "measure",
													"value": "COUNT:COUNT(*)"
												},
												{
													"key": "format",
													"value": "amcharts",
													"description": "Our desired charting library. Other available formats are `PLOTLY_BAR`, `PLOTLY_BOXPLOT`, `PLOTLY_BUBBLE`, `PLOTLY_HIST`, `PLOTLY_PIE`, `GCHART`"
												},
												{
													"key": "metadata",
													"value": "true"
												},
												{
													"key": "totals",
													"value": "true"
												},
												{
													"key": "inject",
													"value": "true"
												},
												{
													"key": "orderby",
													"value": "gender ASC, age_group DESC"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Wed, 27 May 2020 18:56:14 GMT"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, no-store, max-age=0, must-revalidate"
										},
										{
											"key": "Pragma",
											"value": "no-cache"
										},
										{
											"key": "Expires",
											"value": "0"
										},
										{
											"key": "X-XSS-Protection",
											"value": "1; mode=block"
										},
										{
											"key": "X-Frame-Options",
											"value": "DENY"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Content-Type",
											"value": "application/json;charset=UTF-8"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										}
									],
									"cookie": [],
									"body": "{\n    \"dataProvider\": [\n        {\n            \"gender\": \"Male\",\n            \"age_group\": \"Not stated\",\n            \"COUNT\": 194\n        },\n        {\n            \"gender\": \"Male\",\n            \"age_group\": \"80 years or older\",\n            \"COUNT\": 1928\n        },\n        {\n            \"gender\": \"Male\",\n            \"age_group\": \"70 to 79 years\",\n            \"COUNT\": 1497\n        },\n        {\n            \"gender\": \"Male\",\n            \"age_group\": \"60 to 69 years\",\n            \"COUNT\": 2199\n        },\n        {\n            \"gender\": \"Male\",\n            \"age_group\": \"50 to 59 years\",\n            \"COUNT\": 2684\n        },\n        {\n            \"gender\": \"Male\",\n            \"age_group\": \"40 to 49 years\",\n            \"COUNT\": 2688\n        },\n        {\n            \"gender\": \"Male\",\n            \"age_group\": \"30 to 39 years\",\n            \"COUNT\": 2508\n        },\n        {\n            \"gender\": \"Male\",\n            \"age_group\": \"20 to 29 years\",\n            \"COUNT\": 2066\n        },\n        {\n            \"gender\": \"Male\",\n            \"age_group\": \"0 to 19 years\",\n            \"COUNT\": 896\n        },\n        {\n            \"gender\": \"Female\",\n            \"age_group\": \"Not stated\",\n            \"COUNT\": 200\n        },\n        {\n            \"gender\": \"Female\",\n            \"age_group\": \"80 years or older\",\n            \"COUNT\": 3991\n        },\n        {\n            \"gender\": \"Female\",\n            \"age_group\": \"70 to 79 years\",\n            \"COUNT\": 1427\n        },\n        {\n            \"gender\": \"Female\",\n            \"age_group\": \"60 to 69 years\",\n            \"COUNT\": 2164\n        },\n        {\n            \"gender\": \"Female\",\n            \"age_group\": \"50 to 59 years\",\n            \"COUNT\": 3449\n        },\n        {\n            \"gender\": \"Female\",\n            \"age_group\": \"40 to 49 years\",\n            \"COUNT\": 3105\n        },\n        {\n            \"gender\": \"Female\",\n            \"age_group\": \"30 to 39 years\",\n            \"COUNT\": 2725\n        },\n        {\n            \"gender\": \"Female\",\n            \"age_group\": \"20 to 29 years\",\n            \"COUNT\": 2500\n        },\n        {\n            \"gender\": \"Female\",\n            \"age_group\": \"0 to 19 years\",\n            \"COUNT\": 936\n        },\n        {\n            \"gender\": \"Non-binary\",\n            \"age_group\": \"80 years or older\",\n            \"COUNT\": 1\n        },\n        {\n            \"gender\": \"Non-binary\",\n            \"age_group\": \"70 to 79 years\",\n            \"COUNT\": 2\n        },\n        {\n            \"gender\": \"Non-binary\",\n            \"age_group\": \"60 to 69 years\",\n            \"COUNT\": 1\n        },\n        {\n            \"gender\": \"Non-binary\",\n            \"age_group\": \"50 to 59 years\",\n            \"COUNT\": 4\n        },\n        {\n            \"gender\": \"Non-binary\",\n            \"age_group\": \"40 to 49 years\",\n            \"COUNT\": 2\n        },\n        {\n            \"gender\": \"Non-binary\",\n            \"age_group\": \"30 to 39 years\",\n            \"COUNT\": 2\n        },\n        {\n            \"gender\": \"Non-binary\",\n            \"age_group\": \"0 to 19 years\",\n            \"COUNT\": 2\n        },\n        {\n            \"gender\": \"Not stated\",\n            \"age_group\": \"Not stated\",\n            \"COUNT\": 28\n        },\n        {\n            \"gender\": \"Not stated\",\n            \"age_group\": \"80 years or older\",\n            \"COUNT\": 104\n        },\n        {\n            \"gender\": \"Not stated\",\n            \"age_group\": \"70 to 79 years\",\n            \"COUNT\": 25\n        },\n        {\n            \"gender\": \"Not stated\",\n            \"age_group\": \"60 to 69 years\",\n            \"COUNT\": 17\n        },\n        {\n            \"gender\": \"Not stated\",\n            \"age_group\": \"50 to 59 years\",\n            \"COUNT\": 14\n        },\n        {\n            \"gender\": \"Not stated\",\n            \"age_group\": \"40 to 49 years\",\n            \"COUNT\": 14\n        },\n        {\n            \"gender\": \"Not stated\",\n            \"age_group\": \"30 to 39 years\",\n            \"COUNT\": 12\n        },\n        {\n            \"gender\": \"Not stated\",\n            \"age_group\": \"20 to 29 years\",\n            \"COUNT\": 7\n        },\n        {\n            \"gender\": \"Not stated\",\n            \"age_group\": \"0 to 19 years\",\n            \"COUNT\": 5\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Build your own tabulate query",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://covid19.richdataservices.com/rds/api/query/{catalog}/{dataProductId}/tabulate?count=<boolean>&dims=<string>&format=<formatEnum>&groupby=<string>,<string>&inject=<boolean>&limit=<number>&measure=<string>&metadata=<boolean>&offset=<number>&orderby=<string>&totals=<boolean>&weights=<string>,<string>&where=<string>",
									"protocol": "http",
									"host": [
										"covid19",
										"richdataservices",
										"com"
									],
									"path": [
										"rds",
										"api",
										"query",
										"{catalog}",
										"{dataProductId}",
										"tabulate"
									],
									"query": [
										{
											"key": "count",
											"value": "<boolean>",
											"description": "Flag specifying whether the total row count should be returned alongside the data. `true` or `false`"
										},
										{
											"key": "dims",
											"value": "<string>",
											"description": "Columns to use as dimensions.\n\nExamples: `V[0-9]+,V1a,$keyword`, `V1`, `$keyword`, `V[0-9]+`"
										},
										{
											"key": "format",
											"value": "<formatEnum>",
											"description": "RDS can return a variety of JSON objects to plug into various JavaScript charting libraries. Default value is `mtna_simple`\n\nAvailable values : `mtna` `mtna_simple` `amcharts` `gcharts` `plotly_bar` `plotly_boxplot` `plotly_bubble` `plotly_hist` `plotly_pie` `plotly_scatter`"
										},
										{
											"key": "groupby",
											"value": "<string>,<string>",
											"description": "When computing a new variable using a function that depends on aggregation the group by parameter can specify which columns to group by. \n\nExamples: `V1` or `V1,V2`"
										},
										{
											"key": "inject",
											"value": "<boolean>",
											"description": "Flag specifying if we want the values injected into the returned records. `true` or `false`"
										},
										{
											"key": "limit",
											"value": "<number>",
											"description": "The limit of records to return. e.g. `100`"
										},
										{
											"key": "measure",
											"value": "<string>",
											"description": "The value being measured. This can be the count of responses, the percentage of response, or another function. The syntax is <computed_variable_name>:<function>. Examples: `count:Count(*)`, `percent:PCT(*)`, `count:Sum(cnt_confirmed)`"
										},
										{
											"key": "metadata",
											"value": "<boolean>",
											"description": "Flag specifying whether metadata should be returned along side the data. \n\n`true` or `false`"
										},
										{
											"key": "offset",
											"value": "<number>",
											"description": "The record to start at. e.g. `10`"
										},
										{
											"key": "orderby",
											"value": "<string>",
											"description": "Allows the data to be reordered in ascending or descending order by column\n\nExamples: `V1 DESC`, `V1 DESC,V2 ASC`."
										},
										{
											"key": "totals",
											"value": "<boolean>",
											"description": "Flag specifying whether subtotals should be returned along side the data.\n\n`true` or `false`"
										},
										{
											"key": "weights",
											"value": "<string>,<string>",
											"description": "The IDs of variables to use as weights in the resulting data.\n\nExamples: `V1`, `V1,V2,V3`"
										},
										{
											"key": "where",
											"value": "<string>",
											"description": "The where parameter allows filters to be applied to the data that will be returned. This follows a syntax similar to a SQL where clause.\n\nExamples: `V1=1 AND V2=2`, `V1!=1 or V1!=NULL`, `V1 matches [0-9]+`, `V1=1 or V1=Bob`, `(V1=1 AND V2=2) OR V3=3`, `V1>=1 or V1<1`, `V1 like a%`"
										}
									]
								},
								"description": "There are many options for customizing your tabulation. Use the parameters below to subset, compute, order,\nfilter and format the results and return aggregate level data. \n\nIf you're having trouble getting started, try building your query first in [Tabulation Engine](https://covid19.richdataservices.com/rds-tabengine/?utm_source=postman&utm_medium=postmanlabs&utm_campaign=covid_19_apis). It can then generate the API query you need, and you can fine-tune it from there."
							},
							"response": [
								{
									"name": "Successful request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{host}}/rds/api/query/:catalogId/:dataProductId/tabulate?count=true&format=mtna_simple&groupby=V480003&inject=true&limit=5&measure=count:COUNT(V480002)&metadata=true&offset=2&totals=true",
											"host": [
												"{{host}}"
											],
											"path": [
												"rds",
												"api",
												"query",
												":catalogId",
												":dataProductId",
												"tabulate"
											],
											"query": [
												{
													"key": "count",
													"value": "true"
												},
												{
													"key": "dims",
													"value": "V480005",
													"disabled": true
												},
												{
													"key": "format",
													"value": "mtna_simple"
												},
												{
													"key": "groupby",
													"value": "V480003"
												},
												{
													"key": "inject",
													"value": "true"
												},
												{
													"key": "limit",
													"value": "5"
												},
												{
													"key": "measure",
													"value": "count:COUNT(V480002)"
												},
												{
													"key": "metadata",
													"value": "true"
												},
												{
													"key": "offset",
													"value": "2"
												},
												{
													"key": "orderby",
													"value": "<string>",
													"disabled": true
												},
												{
													"key": "totals",
													"value": "true"
												},
												{
													"key": "weights",
													"value": "V480008",
													"disabled": true
												},
												{
													"key": "where",
													"value": "<string>",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "catalogId",
													"value": "anes"
												},
												{
													"key": "dataProductId",
													"value": "anes1948"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n\"info\": {\n\"cached\": false,\n\"columnCount\": 1,\n\"columnOffset\": 0,\n\"end\": \"2020-02-25T15:36:29.230Z\",\n\"includeMetadata\": true,\n\"moreColumns\": false,\n\"moreRows\": false,\n\"notes\": [],\n\"postQueryTime\": 0,\n\"preQueryTime\": 219,\n\"queryTime\": 48,\n\"rowCount\": 1,\n\"rowLimit\": 5,\n\"rowOffset\": 2,\n\"start\": \"2020-02-25T15:36:28.963Z\",\n\"tableCellCount\": 1,\n\"totalProcessingTime\": 267\n},\n\"records\": [\n[\n126\n]\n],\n\"totals\": [],\n\"variables\": [\n{\n\"fixedStorageWidth\": 21,\n\"id\": \"count\",\n\"isPrivate\": false,\n\"name\": \"count\",\n\"reference\": false,\n\"revisionNumber\": 0,\n\"storageType\": \"NUMERIC\",\n\"uri\": \"computation.variable.count\"\n}\n]\n}"
								}
							]
						}
					],
					"description": "Maybe you're interested in a more complex tabulation involving multiple dimensions, or are interested in a dataset that uses aggregated data. Instead of having to make multiple calls and wrangling the data yourself, RDS can do all the work for you, in one API call. Our [Tabulation Engine](https://covid19.richdataservices.com/rds-tabengine/data-product-selection?utm_source=postman&utm_medium=postmanlabs&utm_campaign=covid_19_apis) is a great resource for trying out different querying techniques to subset, compute, order, filter, and format your data, to build your ideal query. ",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "73c0e7ff-901d-4912-9c6c-348dcf6e7bad",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e806b62f-8159-4615-92df-e6200a143762",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "RDS allows users to query only the data they want to retrieve from a data product, using a variety of parameters. Using elements from SQL syntax, regular expressions, and metadata injection, RDS can handle much of the logic needed to power your app. \nSome helpful starter tips and queries are listed below. \n\n### What can I query? \n\n\n#### Variables\nThe first way RDS allows users to select variables is through the well known and traditional way of specifying variable names. If we know the variables we want to work with, this is a great way to quickly subset our data. This is done through the use of the cols parameter, which takes a comma separated list of values. The names used are all treated as regular expressions, so feel free to treat them as such.\n\n`http://covid19.richdataservices.com/rds/api/catalog/{catalogId}/{dataProductId}/select?cols=col1,col2,col3,col[0-9]+,...`\n\nTo get more information about a specific variable, you can get its variable summary: \n\n`http://covid19.richdataservices.com/rds/api/catalog/{catalogId}/{dataProductId}/variable/{variableId}`\n\nOr, get all variable summaries for a data product:  \n\n`http://covid19.richdataservices.com/rds/api/catalog/{catalogId}/{dataProductId}/variables`\n\n\n\n#### Classifications\nClassifications are essentially a set of codes and their values, and are often vital to understanding the data stored in any given data product. If a variable has a classification associated with it it will have the 'classification URI' property filled out. This can be used to retrieve high level information about the classification. Beware though, due to the fact that some classifications can be extremely large (100ks of codes) no codes will be returned on the classification, they need to be queried by themselves.\n\n`http://covid19.richdataservices.com/rds/api/catalog/{catalogId}/{dataProductId}/classification/{classificationUri}`\n\nTo see a classification's codes:\n \n`http://covid19.richdataservices.com/rds/api/catalog/{catalogId}/{dataProductId}/classification/{classificationUri}/codes`\n\n\n### How can I use this data in my project?\n* **Query the API from your data visualization:**\nLet RDS do the heavy lifting when building your data visualizations. Specify the your charting library (Google Charts, amCharts, or Plotly), and RDS will output the data in the format you need, so you can focus on building your product instead of wrangling data. Check out our [Javascript charting demo](https://mtna.github.io/rds-js-examples/) to see it in action. \n* **Download the data in the format that works for you:** From SQL to PDF to scripting languages like STATA and SAS, RDS has plenty of options for downloading the dataset you create in the format you need. See the \"Packaging Data\" section below, or visit our [Downloading and Packaging Data](https://mtnaus.atlassian.net/wiki/spaces/RDSHD/pages/956923905/Downloading+and+Packaging+Data) guide for more information.   \n\n\n### When should I use a select vs a tabulate query?\nAs you have probably seen when looking at data sources around the web, data sets can be organized differently, and thus, may need to be queried differently. For traditional datasets where data should be displayed as-is (think a simple \"SELECT * FROM __ WHERE..\" SQL query), using a select query will get you what you need. For datasets where aggregate level data is needed, or you find yourself needing multiple dimensions, a tabulate query may be more suited to your needs.  ",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "bc632fad-087a-4d17-bb31-b55c222ca624",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "705bfc56-a239-41d8-9132-27050b8c02af",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Packaging Data",
			"item": [
				{
					"name": "Get available packaging options",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://covid19.richdataservices.com/rds/api/package/options/select",
							"protocol": "http",
							"host": [
								"covid19",
								"richdataservices",
								"com"
							],
							"path": [
								"rds",
								"api",
								"package",
								"options",
								"select"
							]
						},
						"description": "This is a starting point for clients to identify all the possible packaging formats that are available. Use these individual options or a pre-built bundle of options (below) to pass into the packaging request."
					},
					"response": [
						{
							"name": "Get available packaging options",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rds/api/package/options/select",
									"host": [
										"{{host}}"
									],
									"path": [
										"rds",
										"api",
										"package",
										"options",
										"select"
									],
									"query": [
										{
											"key": "limit",
											"value": "1",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Apr 2020 19:20:42 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"description\": \"A delimited text file is a text file used to store data, in which each line represents a single record, and each line has fields separated by the delimiter.\",\n            \"id\": \"data-delimited\",\n            \"name\": \"Delimited ASCII\"\n        },\n        {\n            \"description\": \"Microsoft Excel is a spreadsheet developed by Microsoft for Windows, macOS, Android and iOS. It features calculation, graphing tools, pivot tables, and a macro programming language called Visual Basic for Applications.\",\n            \"id\": \"data-excel\",\n            \"name\": \"Microsoft Excel\"\n        }\n    ],\n    \"documents\": [\n        {\n            \"description\": \"A PDF codebook document for the data set. The codebook contains a file over view, a list of the variables included in the file, and summary statistics and frequencies for those variables when applicable.\",\n            \"id\": \"pdf-codebook\",\n            \"name\": \"PDF Codebook\"\n        }\n    ],\n    \"metadata\": [\n        {\n            \"description\": \"The Data Documentation Initiative (DDI) is an international standard for describing the data produced by surveys and other observational methods in the social, behavioral, economic, and health sciences.\",\n            \"id\": \"ddi-codebook\",\n            \"name\": \"DDI Codebook 2.5\"\n        },\n        {\n            \"description\": \"An HTML file is a file used to build a webpage and can be displayed in a web browser. This specific HTML file will show metadata revolving around the query conducted on the data.\",\n            \"id\": \"query-description-html\",\n            \"name\": \"Query Description HTML\"\n        }\n    ],\n    \"scripts\": [\n        {\n            \"description\": \"SAS is a software suite developed by SAS Institute for advanced analytics, multivariate analyses, business intelligence, data management, and predictive analytics.\",\n            \"id\": \"script-sas\",\n            \"name\": \"SAS DataSet Syntax\"\n        },\n        {\n            \"description\": \"SPSS Statistics is a software package used for interactive, or batched, statistical analysis.\",\n            \"id\": \"script-spss\",\n            \"name\": \"SPSS DataSet Syntax\"\n        },\n        {\n            \"description\": \"SQL is a domain-specific language used in programming and designed for managing data held in a relational database management system.\",\n            \"id\": \"script-sql\",\n            \"name\": \"SQL DataSet Syntax\"\n        },\n        {\n            \"description\": \"Stata is a general-purpose statistical software package created in 1985 by StataCorp. Most of its users work in research, especially in the fields of economics, sociology, political science, biomedicine and epidemiology.\",\n            \"id\": \"script-stata\",\n            \"name\": \"Stata DataSet Syntax\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Get available packaging bundles",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://covid19.richdataservices.com/rds/api/package/option/bundles/select",
							"protocol": "http",
							"host": [
								"covid19",
								"richdataservices",
								"com"
							],
							"path": [
								"rds",
								"api",
								"package",
								"option",
								"bundles",
								"select"
							]
						},
						"description": "Packaging bundles are groups of related OptionSets grouped together with some pre-configuration already done. This can ensure that users can get a set of options quickly and already set up with all the options needed."
					},
					"response": [
						{
							"name": "Get select packaging bundles",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rds/api/package/option/bundles/select",
									"host": [
										"{{host}}"
									],
									"path": [
										"rds",
										"api",
										"package",
										"option",
										"bundles",
										"select"
									],
									"query": [
										{
											"key": "limit",
											"value": "1",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Apr 2020 17:13:47 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"description\": \"Designed for users that want to be able to import their data into a variety of analytical platforms, this export includes everything you need to take and in-depth look at the dataset. \",\n        \"id\": \"bundle-power-user\",\n        \"includedFormats\": [\n            {\n                \"description\": \"A delimited text file is a text file used to store data, in which each line represents a single record, and each line has fields separated by the delimiter.\",\n                \"id\": \"data-delimited\",\n                \"name\": \"Delimited ASCII\"\n            },\n            {\n                \"description\": \"A PDF codebook document for the data set. The codebook contains a file over view, a list of the variables included in the file, and summary statistics and frequencies for those variables when applicable.\",\n                \"id\": \"pdf-codebook\",\n                \"name\": \"PDF Codebook\"\n            },\n            {\n                \"description\": \"SQL is a domain-specific language used in programming and designed for managing data held in a relational database management system.\",\n                \"id\": \"script-sql\",\n                \"name\": \"SQL DataSet Syntax\"\n            },\n            {\n                \"description\": \"SAS is a software suite developed by SAS Institute for advanced analytics, multivariate analyses, business intelligence, data management, and predictive analytics.\",\n                \"id\": \"script-sas\",\n                \"name\": \"SAS DataSet Syntax\"\n            },\n            {\n                \"description\": \"SPSS Statistics is a software package used for interactive, or batched, statistical analysis.\",\n                \"id\": \"script-spss\",\n                \"name\": \"SPSS DataSet Syntax\"\n            },\n            {\n                \"description\": \"Stata is a general-purpose statistical software package created in 1985 by StataCorp. Most of its users work in research, especially in the fields of economics, sociology, political science, biomedicine and epidemiology.\",\n                \"id\": \"script-stata\",\n                \"name\": \"Stata DataSet Syntax\"\n            }\n        ],\n        \"name\": \"Power User\"\n    },\n    {\n        \"description\": \"Includes a delimited text file along with a SQL script to create the database structures. By default, the script will create a table for the dataset as well as look up tables for any classifications that are relevant to the dataset.\",\n        \"id\": \"bundle-dba\",\n        \"includedFormats\": [\n            {\n                \"description\": \"A delimited text file is a text file used to store data, in which each line represents a single record, and each line has fields separated by the delimiter.\",\n                \"id\": \"data-delimited\",\n                \"name\": \"Delimited ASCII\"\n            },\n            {\n                \"description\": \"SQL is a domain-specific language used in programming and designed for managing data held in a relational database management system.\",\n                \"id\": \"script-sql\",\n                \"name\": \"SQL DataSet Syntax\"\n            }\n        ],\n        \"name\": \"Database Administration\"\n    },\n    {\n        \"description\": \"Includes a delimited text file along with scripts to import the data set into SAS, SPSS, and Stata. The scripts will contain all the metadata for variables and classifications if they are available.\",\n        \"id\": \"bundle-data-science\",\n        \"includedFormats\": [\n            {\n                \"description\": \"A delimited text file is a text file used to store data, in which each line represents a single record, and each line has fields separated by the delimiter.\",\n                \"id\": \"data-delimited\",\n                \"name\": \"Delimited ASCII\"\n            },\n            {\n                \"description\": \"SAS is a software suite developed by SAS Institute for advanced analytics, multivariate analyses, business intelligence, data management, and predictive analytics.\",\n                \"id\": \"script-sas\",\n                \"name\": \"SAS DataSet Syntax\"\n            },\n            {\n                \"description\": \"SPSS Statistics is a software package used for interactive, or batched, statistical analysis.\",\n                \"id\": \"script-spss\",\n                \"name\": \"SPSS DataSet Syntax\"\n            },\n            {\n                \"description\": \"Stata is a general-purpose statistical software package created in 1985 by StataCorp. Most of its users work in research, especially in the fields of economics, sociology, political science, biomedicine and epidemiology.\",\n                \"id\": \"script-stata\",\n                \"name\": \"Stata DataSet Syntax\"\n            }\n        ],\n        \"name\": \"Data Science\"\n    },\n    {\n        \"description\": \"Includes formats that do not require any paid software to be read.\",\n        \"id\": \"bundle-open-data\",\n        \"includedFormats\": [\n            {\n                \"description\": \"A delimited text file is a text file used to store data, in which each line represents a single record, and each line has fields separated by the delimiter.\",\n                \"id\": \"data-delimited\",\n                \"name\": \"Delimited ASCII\"\n            },\n            {\n                \"description\": \"The Data Documentation Initiative (DDI) is an international standard for describing the data produced by surveys and other observational methods in the social, behavioral, economic, and health sciences.\",\n                \"id\": \"ddi-codebook\",\n                \"name\": \"DDI Codebook 2.5\"\n            },\n            {\n                \"description\": \"An HTML file is a file used to build a webpage and can be displayed in a web browser. This specific HTML file will show metadata revolving around the query conducted on the data.\",\n                \"id\": \"query-description-html\",\n                \"name\": \"Query Description HTML\"\n            },\n            {\n                \"description\": \"SQL is a domain-specific language used in programming and designed for managing data held in a relational database management system.\",\n                \"id\": \"script-sql\",\n                \"name\": \"SQL DataSet Syntax\"\n            }\n        ],\n        \"name\": \"Open Data\"\n    },\n    {\n        \"description\": \"Includes every possible output format. This is meant to be used in cases where multiple users could be accessing these files for different applications or the end application of this data is unknown and an abundance of formats is desired to accommodate its broader scope.\",\n        \"id\": \"bundle-comprehensive\",\n        \"includedFormats\": [\n            {\n                \"description\": \"A delimited text file is a text file used to store data, in which each line represents a single record, and each line has fields separated by the delimiter.\",\n                \"id\": \"data-delimited\",\n                \"name\": \"Delimited ASCII\"\n            },\n            {\n                \"description\": \"Microsoft Excel is a spreadsheet developed by Microsoft for Windows, macOS, Android and iOS. It features calculation, graphing tools, pivot tables, and a macro programming language called Visual Basic for Applications.\",\n                \"id\": \"data-excel\",\n                \"name\": \"Microsoft Excel\"\n            },\n            {\n                \"description\": \"The Data Documentation Initiative (DDI) is an international standard for describing the data produced by surveys and other observational methods in the social, behavioral, economic, and health sciences.\",\n                \"id\": \"ddi-codebook\",\n                \"name\": \"DDI Codebook 2.5\"\n            },\n            {\n                \"description\": \"An HTML file is a file used to build a webpage and can be displayed in a web browser. This specific HTML file will show metadata revolving around the query conducted on the data.\",\n                \"id\": \"query-description-html\",\n                \"name\": \"Query Description HTML\"\n            },\n            {\n                \"description\": \"A PDF codebook document for the data set. The codebook contains a file over view, a list of the variables included in the file, and summary statistics and frequencies for those variables when applicable.\",\n                \"id\": \"pdf-codebook\",\n                \"name\": \"PDF Codebook\"\n            },\n            {\n                \"description\": \"SQL is a domain-specific language used in programming and designed for managing data held in a relational database management system.\",\n                \"id\": \"script-sql\",\n                \"name\": \"SQL DataSet Syntax\"\n            },\n            {\n                \"description\": \"SAS is a software suite developed by SAS Institute for advanced analytics, multivariate analyses, business intelligence, data management, and predictive analytics.\",\n                \"id\": \"script-sas\",\n                \"name\": \"SAS DataSet Syntax\"\n            },\n            {\n                \"description\": \"SPSS Statistics is a software package used for interactive, or batched, statistical analysis.\",\n                \"id\": \"script-spss\",\n                \"name\": \"SPSS DataSet Syntax\"\n            },\n            {\n                \"description\": \"Stata is a general-purpose statistical software package created in 1985 by StataCorp. Most of its users work in research, especially in the fields of economics, sociology, political science, biomedicine and epidemiology.\",\n                \"id\": \"script-stata\",\n                \"name\": \"Stata DataSet Syntax\"\n            },\n            {\n                \"description\": \"A delimited text file used to store classification metadata, in which each line represents a code and its label.\",\n                \"id\": \"metadata-delimited-classification\",\n                \"name\": \"Classification Delimited ASCII\"\n            },\n            {\n                \"description\": \"SQL is a domain-specific language used in programming and designed for managing data held in a relational database management system.\",\n                \"id\": \"script-sql-classification\",\n                \"name\": \"SQL Classification Syntax\"\n            },\n            {\n                \"description\": \"SAS is a software suite developed by SAS Institute for advanced analytics, multivariate analyses, business intelligence, data management, and predictive analytics.\",\n                \"id\": \"script-sas-classification\",\n                \"name\": \"SAS Classification Syntax\"\n            },\n            {\n                \"description\": \"SPSS Statistics is a software package used for interactive, or batched, statistical analysis.\",\n                \"id\": \"script-spss-classification\",\n                \"name\": \"SPSS Classification Syntax\"\n            },\n            {\n                \"description\": \"Stata is a general-purpose statistical software package created in 1985 by StataCorp. Most of its users work in research, especially in the fields of economics, sociology, political science, biomedicine and epidemiology.\",\n                \"id\": \"script-stata-classification\",\n                \"name\": \"Stata Classification Syntax\"\n            }\n        ],\n        \"name\": \"Comprehensive\"\n    }\n]"
						}
					]
				},
				{
					"name": "Get option bundle",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://covid19.richdataservices.com/rds/api/package/option/bundle/{bundleId}",
							"protocol": "http",
							"host": [
								"covid19",
								"richdataservices",
								"com"
							],
							"path": [
								"rds",
								"api",
								"package",
								"option",
								"bundle",
								"{bundleId}"
							]
						},
						"description": "Get an option bundle by id"
					},
					"response": [
						{
							"name": "DBA Bundle Options",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/rds/api/package/option/bundle/bundle-dba",
									"host": [
										"{{host}}"
									],
									"path": [
										"rds",
										"api",
										"package",
										"option",
										"bundle",
										"bundle-dba"
									],
									"query": [
										{
											"key": "limit",
											"value": "1",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 07 Apr 2020 17:15:44 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"formatType\": \"CSV Options\",\n        \"format\": \"data-delimited\",\n        \"id\": \"179a3759-24fa-4ad9-8ed4-a69e204394d4\",\n        \"options\": [\n            {\n                \"dataType\": \"TEXT\",\n                \"description\": \"The name of the file that will be output after being packaged. The file name will default to the name of the data set if not specified here.\",\n                \"name\": \"File Name\",\n                \"required\": false\n            },\n            {\n                \"dataType\": \"BOOLEAN\",\n                \"description\": \"If this option is set to true there will be a header row in the file that contains the variable names, otherwise no header row will be included.\",\n                \"name\": \"header\",\n                \"required\": false,\n                \"value\": true\n            },\n            {\n                \"dataType\": \"TEXT\",\n                \"description\": \"The desired format of the delimited file.\",\n                \"name\": \"format\",\n                \"options\": [\n                    \"CSV\",\n                    \"MySQL\",\n                    \"Oracle\",\n                    \"PostgreSQL\",\n                    \"TDF\"\n                ],\n                \"required\": true,\n                \"value\": \"MySQL\"\n            },\n            {\n                \"dataType\": \"TEXT\",\n                \"description\": \"The operating system that the file will be used on. This is used to determine how to write new lines in the file as this differs between Windows and Unix systems. This is a convenience feature and will not affect the content of the file, but may make it more usable in basic text editors.\",\n                \"name\": \"Operating System\",\n                \"options\": [\n                    \"Windows\",\n                    \"Unix\"\n                ],\n                \"required\": false\n            }\n        ],\n        \"type\": \"DATA\"\n    },\n    {\n        \"formatType\": \"SQL DataSet Options\",\n        \"format\": \"script-sql\",\n        \"id\": \"0aa55c22-26fc-4654-8020-d694cff73a84\",\n        \"options\": [\n            {\n                \"dataType\": \"TEXT\",\n                \"description\": \"The name of the file that will be output after being packaged. The file name will default to the name of the data set if not specified here.\",\n                \"name\": \"File Name\",\n                \"required\": false\n            },\n            {\n                \"dataType\": \"TEXT\",\n                \"description\": \"The operating system that the file will be used on. This is used to determine how to write new lines in the file as this differs between Windows and Unix systems. This is a convenience feature and will not affect the content of the file, but may make it more usable in basic text editors.\",\n                \"name\": \"Operating System\",\n                \"options\": [\n                    \"Windows\",\n                    \"Unix\"\n                ],\n                \"required\": false\n            },\n            {\n                \"dataType\": \"TEXT\",\n                \"description\": \"The name of the database that the table should created in. If empty the data product name will be used.\",\n                \"name\": \"database name\",\n                \"required\": false,\n                \"value\": \"\"\n            },\n            {\n                \"dataType\": \"TEXT\",\n                \"description\": \"The name of the the table that will be created. If empty the data product name will be used.\",\n                \"name\": \"table name\",\n                \"required\": false,\n                \"value\": \"\"\n            },\n            {\n                \"dataType\": \"BOOLEAN\",\n                \"description\": \"Indicates that dimension (lookup) tables should be created to store classifications in. If false only the data table will be written.\",\n                \"name\": \"dimension tables\",\n                \"required\": false,\n                \"value\": true\n            },\n            {\n                \"dataType\": \"BOOLEAN\",\n                \"description\": \"Indicates that insert statements should be used to load data into the created tables.\",\n                \"name\": \"insert statements\",\n                \"required\": false,\n                \"value\": false\n            },\n            {\n                \"dataType\": \"TEXT\",\n                \"description\": \"The syntax of the script.\",\n                \"name\": \"SQL type\",\n                \"options\": [\n                    \"MICROSOFT\",\n                    \"MONET\",\n                    \"MYSQL\",\n                    \"ORACLE\",\n                    \"POSTGRE\",\n                    \"VERTICA\",\n                    \"H2\",\n                    \"VIRTUOSO\"\n                ],\n                \"required\": true,\n                \"value\": \"MYSQL\"\n            }\n        ],\n        \"type\": \"SCRIPT\"\n    }\n]"
						}
					]
				},
				{
					"name": "Send packaging request",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"formatType\": \"CSV Options\",\n    \"format\": \"data-delimited\",\n    \"id\": \"179a3759-24fa-4ad9-8ed4-a69e204394d4\",\n    \"options\": [\n      {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The name of the file that will be output after being packaged. The file name will default to the name of the data set if not specified here.\",\n        \"name\": \"File Name\",\n        \"required\": false\n      },\n      {\n        \"dataType\": \"BOOLEAN\",\n        \"description\": \"If this option is set to true there will be a header row in the file that contains the variable names, otherwise no header row will be included.\",\n        \"name\": \"header\",\n        \"required\": false,\n        \"value\": true\n      },\n      {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The desired format of the delimited file.\",\n        \"name\": \"format\",\n        \"options\": [\n          \"CSV\",\n          \"MySQL\",\n          \"Oracle\",\n          \"PostgreSQL\",\n          \"TDF\"\n        ],\n        \"required\": true,\n        \"value\": \"MySQL\"\n      },\n      {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The operating system that the file will be used on. This is used to determine how to write new lines in the file as this differs between Windows and Unix systems. This is a convenience feature and will not affect the content of the file, but may make it more usable in basic text editors.\",\n        \"name\": \"Operating System\",\n        \"options\": [\n          \"Windows\",\n          \"Unix\"\n        ],\n        \"required\": false\n      }\n    ],\n    \"type\": \"DATA\"\n  },\n  {\n    \"formatType\": \"SQL DataSet Options\",\n    \"format\": \"script-sql\",\n    \"id\": \"0aa55c22-26fc-4654-8020-d694cff73a84\",\n    \"options\": [\n      {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The name of the file that will be output after being packaged. The file name will default to the name of the data set if not specified here.\",\n        \"name\": \"File Name\",\n        \"required\": false\n      },\n      {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The operating system that the file will be used on. This is used to determine how to write new lines in the file as this differs between Windows and Unix systems. This is a convenience feature and will not affect the content of the file, but may make it more usable in basic text editors.\",\n        \"name\": \"Operating System\",\n        \"options\": [\n          \"Windows\",\n          \"Unix\"\n        ],\n        \"required\": false\n      },\n      {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The name of the database that the table should created in. If empty the data product name will be used.\",\n        \"name\": \"database name\",\n        \"required\": false,\n        \"value\": \"\"\n      },\n      {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The name of the the table that will be created. If empty the data product name will be used.\",\n        \"name\": \"table name\",\n        \"required\": false,\n        \"value\": \"\"\n      },\n      {\n        \"dataType\": \"BOOLEAN\",\n        \"description\": \"Indicates that dimension (lookup) tables should be created to store classifications in. If false only the data table will be written.\",\n        \"name\": \"dimension tables\",\n        \"required\": false,\n        \"value\": true\n      },\n      {\n        \"dataType\": \"BOOLEAN\",\n        \"description\": \"Indicates that insert statements should be used to load data into the created tables.\",\n        \"name\": \"insert statements\",\n        \"required\": false,\n        \"value\": false\n      },\n      {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The syntax of the script.\",\n        \"name\": \"SQL type\",\n        \"options\": [\n          \"MICROSOFT\",\n          \"MONET\",\n          \"MYSQL\",\n          \"ORACLE\",\n          \"POSTGRE\",\n          \"VERTICA\",\n          \"H2\",\n          \"VIRTUOSO\"\n        ],\n        \"required\": true,\n        \"value\": \"MYSQL\"\n      }\n    ],\n    \"type\": \"SCRIPT\"\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://covid19.richdataservices.com/rds/api/package/{catalog}/{dataProductId}/select?",
							"protocol": "http",
							"host": [
								"covid19",
								"richdataservices",
								"com"
							],
							"path": [
								"rds",
								"api",
								"package",
								"{catalog}",
								"{dataProductId}",
								"select"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"description": "Paste your desired select query parameters here. See the \"Select Queries\" section above for some examples. "
								}
							]
						},
						"description": "Starts the packaging process. Pass in the desired select query (url) and packaging options (request body), and receive a processId. Use this id to check the status and download packaged data when completed. Be sure to use \"https\" when posting to RDS."
					},
					"response": [
						{
							"name": "Send packaging request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"formatType\": \"CSV Options\",\n    \"format\": \"data-delimited\",\n    \"id\": \"179a3759-24fa-4ad9-8ed4-a69e204394d4\",\n    \"options\": [\n      {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The name of the file that will be output after being packaged. The file name will default to the name of the data set if not specified here.\",\n        \"name\": \"File Name\",\n        \"required\": false\n      },\n      {\n        \"dataType\": \"BOOLEAN\",\n        \"description\": \"If this option is set to true there will be a header row in the file that contains the variable names, otherwise no header row will be included.\",\n        \"name\": \"header\",\n        \"required\": false,\n        \"value\": true\n      },\n      {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The desired format of the delimited file.\",\n        \"name\": \"format\",\n        \"options\": [\n          \"CSV\",\n          \"MySQL\",\n          \"Oracle\",\n          \"PostgreSQL\",\n          \"TDF\"\n        ],\n        \"required\": true,\n        \"value\": \"MySQL\"\n      },\n      {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The operating system that the file will be used on. This is used to determine how to write new lines in the file as this differs between Windows and Unix systems. This is a convenience feature and will not affect the content of the file, but may make it more usable in basic text editors.\",\n        \"name\": \"Operating System\",\n        \"options\": [\n          \"Windows\",\n          \"Unix\"\n        ],\n        \"required\": false\n      }\n    ],\n    \"type\": \"DATA\"\n  },\n  {\n    \"formatType\": \"SQL DataSet Options\",\n    \"format\": \"script-sql\",\n    \"id\": \"0aa55c22-26fc-4654-8020-d694cff73a84\",\n    \"options\": [\n      {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The name of the file that will be output after being packaged. The file name will default to the name of the data set if not specified here.\",\n        \"name\": \"File Name\",\n        \"required\": false\n      },\n      {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The operating system that the file will be used on. This is used to determine how to write new lines in the file as this differs between Windows and Unix systems. This is a convenience feature and will not affect the content of the file, but may make it more usable in basic text editors.\",\n        \"name\": \"Operating System\",\n        \"options\": [\n          \"Windows\",\n          \"Unix\"\n        ],\n        \"required\": false\n      },\n      {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The name of the database that the table should created in. If empty the data product name will be used.\",\n        \"name\": \"database name\",\n        \"required\": false,\n        \"value\": \"\"\n      },\n      {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The name of the the table that will be created. If empty the data product name will be used.\",\n        \"name\": \"table name\",\n        \"required\": false,\n        \"value\": \"\"\n      },\n      {\n        \"dataType\": \"BOOLEAN\",\n        \"description\": \"Indicates that dimension (lookup) tables should be created to store classifications in. If false only the data table will be written.\",\n        \"name\": \"dimension tables\",\n        \"required\": false,\n        \"value\": true\n      },\n      {\n        \"dataType\": \"BOOLEAN\",\n        \"description\": \"Indicates that insert statements should be used to load data into the created tables.\",\n        \"name\": \"insert statements\",\n        \"required\": false,\n        \"value\": false\n      },\n      {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The syntax of the script.\",\n        \"name\": \"SQL type\",\n        \"options\": [\n          \"MICROSOFT\",\n          \"MONET\",\n          \"MYSQL\",\n          \"ORACLE\",\n          \"POSTGRE\",\n          \"VERTICA\",\n          \"H2\",\n          \"VIRTUOSO\"\n        ],\n        \"required\": true,\n        \"value\": \"MYSQL\"\n      }\n    ],\n    \"type\": \"SCRIPT\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://covid19.richdataservices.com/rds/api/package/us/covidtracking_state/select?where=(us_state_postal=NY OR us_state_postal=CA OR us_state_postal=TX) AND (date_stamp=2020-06-17)&cols=us_state_postal,cnt_tested_pos,cnt_tested",
									"protocol": "https",
									"host": [
										"covid19",
										"richdataservices",
										"com"
									],
									"path": [
										"rds",
										"api",
										"package",
										"us",
										"covidtracking_state",
										"select"
									],
									"query": [
										{
											"key": "where",
											"value": "(us_state_postal=NY OR us_state_postal=CA OR us_state_postal=TX) AND (date_stamp=2020-06-17)"
										},
										{
											"key": "cols",
											"value": "us_state_postal,cnt_tested_pos,cnt_tested"
										},
										{
											"key": "format",
											"value": "amcharts",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Jun 2020 13:11:20 GMT"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "\"4955edec-1342-448d-84c4-607c4f051619\""
						},
						{
							"name": "Send packaging request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"formatType\": \"CSV Options\",\n    \"format\": \"data-delimited\",\n    \"id\": \"179a3759-24fa-4ad9-8ed4-a69e204394d4\",\n    \"options\": [\n      {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The name of the file that will be output after being packaged. The file name will default to the name of the data set if not specified here.\",\n        \"name\": \"File Name\",\n        \"required\": false\n      },\n      {\n        \"dataType\": \"BOOLEAN\",\n        \"description\": \"If this option is set to true there will be a header row in the file that contains the variable names, otherwise no header row will be included.\",\n        \"name\": \"header\",\n        \"required\": false,\n        \"value\": true\n      },\n      {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The desired format of the delimited file.\",\n        \"name\": \"format\",\n        \"options\": [\n          \"CSV\",\n          \"MySQL\",\n          \"Oracle\",\n          \"PostgreSQL\",\n          \"TDF\"\n        ],\n        \"required\": true,\n        \"value\": \"MySQL\"\n      },\n      {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The operating system that the file will be used on. This is used to determine how to write new lines in the file as this differs between Windows and Unix systems. This is a convenience feature and will not affect the content of the file, but may make it more usable in basic text editors.\",\n        \"name\": \"Operating System\",\n        \"options\": [\n          \"Windows\",\n          \"Unix\"\n        ],\n        \"required\": false\n      }\n    ],\n    \"type\": \"DATA\"\n  },\n  {\n    \"formatType\": \"SQL DataSet Options\",\n    \"format\": \"script-sql\",\n    \"id\": \"0aa55c22-26fc-4654-8020-d694cff73a84\",\n    \"options\": [\n      {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The name of the file that will be output after being packaged. The file name will default to the name of the data set if not specified here.\",\n        \"name\": \"File Name\",\n        \"required\": false\n      },\n      {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The operating system that the file will be used on. This is used to determine how to write new lines in the file as this differs between Windows and Unix systems. This is a convenience feature and will not affect the content of the file, but may make it more usable in basic text editors.\",\n        \"name\": \"Operating System\",\n        \"options\": [\n          \"Windows\",\n          \"Unix\"\n        ],\n        \"required\": false\n      },\n      {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The name of the database that the table should created in. If empty the data product name will be used.\",\n        \"name\": \"database name\",\n        \"required\": false,\n        \"value\": \"\"\n      },\n      {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The name of the the table that will be created. If empty the data product name will be used.\",\n        \"name\": \"table name\",\n        \"required\": false,\n        \"value\": \"\"\n      },\n      {\n        \"dataType\": \"BOOLEAN\",\n        \"description\": \"Indicates that dimension (lookup) tables should be created to store classifications in. If false only the data table will be written.\",\n        \"name\": \"dimension tables\",\n        \"required\": false,\n        \"value\": true\n      },\n      {\n        \"dataType\": \"BOOLEAN\",\n        \"description\": \"Indicates that insert statements should be used to load data into the created tables.\",\n        \"name\": \"insert statements\",\n        \"required\": false,\n        \"value\": false\n      },\n      {\n        \"dataType\": \"TEXT\",\n        \"description\": \"The syntax of the script.\",\n        \"name\": \"SQL type\",\n        \"options\": [\n          \"MICROSOFT\",\n          \"MONET\",\n          \"MYSQL\",\n          \"ORACLE\",\n          \"POSTGRE\",\n          \"VERTICA\",\n          \"H2\",\n          \"VIRTUOSO\"\n        ],\n        \"required\": true,\n        \"value\": \"MYSQL\"\n      }\n    ],\n    \"type\": \"SCRIPT\"\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://covid19.richdataservices.com/rds/api/package/us/covidtracking_state/select?where=(us_state_postal=NY OR us_state_postal=CA OR us_state_postal=TX) AND (date_stamp=2020-06-17)&cols=us_state_postal,cnt_tested_pos,cnt_tested&format=amcharts",
									"protocol": "https",
									"host": [
										"covid19",
										"richdataservices",
										"com"
									],
									"path": [
										"rds",
										"api",
										"package",
										"us",
										"covidtracking_state",
										"select"
									],
									"query": [
										{
											"key": "where",
											"value": "(us_state_postal=NY OR us_state_postal=CA OR us_state_postal=TX) AND (date_stamp=2020-06-17)"
										},
										{
											"key": "cols",
											"value": "us_state_postal,cnt_tested_pos,cnt_tested"
										},
										{
											"key": "format",
											"value": "amcharts"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Jun 2020 13:10:56 GMT"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "\"bad397fd-02c0-495f-9ca5-90a129a1f9f7\""
						}
					]
				},
				{
					"name": "Check packaging status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://covid19.richdataservices.com/rds/api/package/processdetails/{processId}",
							"protocol": "http",
							"host": [
								"covid19",
								"richdataservices",
								"com"
							],
							"path": [
								"rds",
								"api",
								"package",
								"processdetails",
								"{processId}"
							]
						},
						"description": "Use the processId that was returned from the `Send packaging request` process to check the status of the data packaging."
					},
					"response": [
						{
							"name": "Check packaging status",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://covid19.richdataservices.com/rds/api/package/processdetails/4955edec-1342-448d-84c4-607c4f051619",
									"protocol": "http",
									"host": [
										"covid19",
										"richdataservices",
										"com"
									],
									"path": [
										"rds",
										"api",
										"package",
										"processdetails",
										"4955edec-1342-448d-84c4-607c4f051619"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Fri, 19 Jun 2020 13:11:46 GMT"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json;charset=UTF-8"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"completed\": 100,\n    \"completionDetails\": {\n        \"detailsList\": [],\n        \"infoList\": []\n    },\n    \"id\": \"4955edec-1342-448d-84c4-607c4f051619\",\n    \"status\": \"COMPLETED\"\n}"
						}
					]
				},
				{
					"name": "Get data package",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://covid19.richdataservices.com/rds/api/package/{processId}",
							"protocol": "http",
							"host": [
								"covid19",
								"richdataservices",
								"com"
							],
							"path": [
								"rds",
								"api",
								"package",
								"{processId}"
							]
						},
						"description": "Use the processId returned from the packaging POST request to retrieve the packaged data once the process has completed. If you are in the Postman app, use the \"Send and Download\" button to download the data."
					},
					"response": []
				}
			],
			"description": "There are several options for packaging the data, once you have identified the query that meets your needs. RDS has several pre-built option bundles that contain typical packaging formats needed by Database Administrators (DBAs), Data Scientists, and those operating in Open Data environments. Users may choose a preconfigured bundle, or build up their own. Once the packaging formats are identified, pass them into the packaging call to begin the packaging process, then download your data. \n\nFor more help downloading and packaging data, check out [this walkthrough (with GIFs!)](https://mtnaus.atlassian.net/wiki/spaces/RDSHD/pages/956923905/Downloading+and+Packaging+Data). ",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "cee638cf-f440-4923-a43e-5762149be4f7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5bd59151-cc51-457d-ad07-a5de53e67bb5",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "8986079e-b9bf-452c-ace3-ca4b13037b16",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "05662101-1ed4-4f9b-87cb-fdb9eead08f4",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}