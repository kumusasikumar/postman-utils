{
  "info" : {
    "name" : "Canada",
    "_postman_id" : "cc5601490e88752490429de495dbf8b8",
    "description" : {
      "content" : "## Overview \n\nPopular public data products pertaining to Canada. For COVID-19 specific data, please visit <a href='https://covid19.richdataservices.com' target='_blank'>https://covid19.richdataservices.com</a>.\n\n## Collection Structure\n\nThe collection is organized by RDS data product, there will be a folder for every data product that is a part of the Canada catalog. These data product folders will contain example requests to query for metadata, record level data, and aggregate level data. \n\n### Visualizations\n\nEach request also has an associated visualization component that presents the returned data in a stylized format. To use this feature, import this collection into your workspace by clicking the orange \"Run in Postman\" button in the top right corner of the screen. You will then need to send the request, and toggle over to the \"Visualizer\" tab in the response pane.\n\n## Creator\n\nThe [Rich Data Services (RDS)](https://www.richdataservices.com) API was written by [Metadata Technology North America (MTNA)](https://mtna.us?utm_source=postman&utm_medium=postmanlabs) and is designed to provide data and metadata together in a unified API. MTNA is a business located in Knoxville, TN that provides high-level expertise around the technical management of statistical and scientific data. MTNA has worked with statistical agencies around the globe, creating solutions around comprehensive metadata management, data collection and ingestion, and data dissemination.\n\n## Resources\n\nThis collection serves as a quick start guide for querying Canada data using RDS. To see the full list of available APIs view the [full RDS documentation](https://documenter.getpostman.com/view/2220438/SzS5umZ3?version=latest#0e79e455-0ffc-4566-ab19-d9ecbf8b217f). For more information about the tool in general and to see a list of example applications using RDS, visit the [RDS website](http://www.richdataservices.com?utm_source=postman&utm_medium=postmanlabs). For other postman collections by MTNA, visit the [MTNA Postman page](https://explore.postman.com/3pbKKoXC7kjtrk).\n\n### RDS Open Source SDKs\n\nWant to integrate RDS into your current project? MTNA has open source SDKs to help you get started.\n* [RDS Javascript](https://github.com/mtna/rds-js)  \n* [RDS Python](https://github.com/mtna/rds-python)  \n* [RDS R](https://github.com/mtna/rds-r) \n\n### Support\n\nHave questions? Browse the [knowledge base](https://mtnaus.atlassian.net/wiki/spaces/RDSHD/overview) to find answers, or submit a ticket at our [service desk](https://mtnaus.atlassian.net/servicedesk/customer/portal/9).",
      "type" : "text/markdown"
    },
    "version" : {
      "major" : 0,
      "minor" : 0,
      "patch" : 1,
      "identifier" : "alpha-1"
    },
    "schema" : "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item" : [ {
    "@class" : "us.mtna.postman.model.ItemGroup",
    "name" : "PUMF: Aboriginal Peoples Survey, 2012",
    "description" : {
      "content" : "## Overview \n\n<p>The purpose of the Aboriginal Peoples Survey (APS) is to provide data on the social and economic conditions of Aboriginal people in Canada. More specifically, its purpose is to identify the needs of Aboriginal people and focus on issues such as education, employment, health, language, income, housing and mobility.</p>\n\n## Citation \n\nStatistics Canada. 2015. Aboriginal Peoples Survey, 2012 [public-use microdata file]. Ottawa, Ontario: Statistics Canada. Social and Aboriginal Statistics Division, Data Liberation Initiative [producer and distributor].\n\n## Provenance \n\nThis data product and metadata is sourced from CSV, DDI, and documentation files made available by <a href='https://odesi.ca/' target='_blank'>ODESI</a> and the <a href='https://www.statcan.gc.ca/eng/dli/dli' target='_blank'>Data Liberation Initative</a>.\n\n## RDS User Interfaces\n\nWant to play with the data before diving into the API? Try out some of our data exploration tools that were built entirely off the API to see what it's capable of.\n* The data and metadata can be explored using the [RDS Explorer](https://public.richdataservices.com/rds-explorer/explore/ca/pumf_aps_2012/data).\n* The data can be tabulated using the [RDS TabEngine](https://public.richdataservices.com/rds-tabengine/analysis/ca/pumf_aps_2012/custom-tables).\n",
      "type" : "text/markdown"
    },
    "variable" : [ ],
    "item" : [ {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "3cfd99bda2c666afda9f4c3e2398b402",
      "name" : "Data Product Overview",
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "0da0c687-c8a4-4a30-9f93-f31fa427dbe0",
          "type" : "text/javascript",
          "exec" : [ "var template = `\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <style type=\"text/css\">\n        .information-label {\n            color: rgba(0,0,0,0.54);\n            font-family: Roboto, sans-serif;\n            font-size: .75em;\n            font-style: normal;\n            font-weight: 900;\n            letter-spacing: 1px;\n            margin-top: 16px;\n            text-transform: uppercase;\n        }\n        .item-id {\n            color: rgba(0,0,0,0.54);\n            font-family: 'Roboto Mono', monospace;\n        }\n    </style>\n    <div class=\"rds-header\">\n        <h2 style=\"font-style: normal\">Data Product</h2>\n        <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div id=\"wrapper\">\n      <div id=\"main\">\n        <br />\n        <div class=\"textblock\">\n          <h3 id=\"startcontent\">\n            {{response.name}} <span class=\"item-id\">[{{response.id}}]</span>\n          </h3>\n\n          {{#if response.description}}\n          <h4 class=\"information-label\">Description</h4>\n          <div style=\"padding-left: 1.5%;\" class=\"product-information\"> \n            {{{response.description}}} \n          </div>\n          {{/if}}\n          {{#if response.citation}}\n          <h4 class=\"information-label\">Citation</h4>\n          <div style=\"padding-left: 1.5%;\" class=\"product-information\">\n            {{{response.citation}}}\n          </div>\n          {{/if}}\n          {{#if response.provenance}}\n          <h4 class=\"information-label\">Provenance</h4>\n          <div style=\"padding-left: 1.5%;\" class=\"product-information\">\n            {{{response.provenance}}}\n          </div>\n          {{/if}}\n          {{#if response.note}}\n          <h4 class=\"information-label\">Notes</h4>\n          <div id=\"notes\" style=\"padding-left: 1.5%;\" class=\"product-information\">\n            {{{response.note}}}\n          </div>\n          {{/if}}\n        </div>\n      </div>\n    </div>\n`;\n\n// Set visualizer\npm.visualizer.set(template, {\n    // Pass the response body parsed as JSON as `data`\n    response: pm.response.json()\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : "https://public.richdataservices.com/rds/api/catalog/ca/pumf_aps_2012",
        "method" : "GET",
        "description" : {
          "content" : "This request returns the data product from the RDS API. It contains descriptive properties such as the data product name, label, description, a citation of the source of the data, provenance information, when the product was last updated, and any additional notes that may be needed to further understand the data or how to use it.",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    }, {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "234499a379d2f2a129d8a406084b9c2c",
      "name" : "Data Dictionary",
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "cf2ea261-f0b5-4747-b90d-f4628b519d15",
          "type" : "text/javascript",
          "exec" : [ "var template = `\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <div class=\"rds-header\">\n        <h2 style=\"font-style: normal\">PUMF: Aboriginal Peoples Survey, 2012 - Dictionary</h2>\n        <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div id=\"wrapper\">\n      <div id=\"main\">\n        <div class=\"textblock\">\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Label</th>\n                <th class=\"description\">Description</th>\n                <th>Data Type</th>\n                <th>Has Classification</th>\n                <th>Is Dimension</th>\n                <th>Is Measure</th>\n              </tr>\n            </thead>\n            <tbody>\n              {{#each response}}\t\n                <tr>\n                    <td>{{{name}}}</td>\n                    <td>{{{label}}}</td>\n                    <td>{{{description}}}</td>\n                    <td>{{{dataType}}}</td>\n                    {{#if classificationUri}}\n                    <td class=\"icon-cell\"><mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">check_circle_outline</mat-icon></td>\n                    {{else}}\n                    <td></td>\n                    {{/if}}  \n                    {{#if isDimension}}\n                    <td class=\"icon-cell\"><mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">check_circle_outline</mat-icon></td>\n                    {{else}}\n                    <td></td>\n                    {{/if}}  \n                    {{#if isMeasure}}\n                    <td class=\"icon-cell\"><mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">check_circle_outline</mat-icon></td>\n                    {{else}}\n                    <td></td>\n                    {{/if}}  \n                </tr>\n                {{/each}}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n`;\n\n// Set visualizer\npm.visualizer.set(template, {\n    // Pass the response body parsed as JSON as `data`\n    response: pm.response.json()\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : "https://public.richdataservices.com/rds/api/catalog/ca/pumf_aps_2012/variables",
        "method" : "GET",
        "description" : {
          "content" : "This request returns the data dictionary for the data product. The data dictionary is a simple listing of all the variables that make up the data product. This should include descriptive properties of each variable including its name, label, description, question text (if captured as part of a survey / questionnare) and any associated classification references. This is not meant to provide a detailed view of any particular variable, but a general overview of the variables that are available as part of the product. ",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    }, {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "23bbcd22f35c2a3c7096d5f71ef6fe45",
      "name" : "Variable Details - GH2_05OT",
      "description" : {
        "content" : "",
        "type" : "text/markdown"
      },
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "3a072cb2-4d64-4640-82a8-fd7cd78d7fc3",
          "type" : "text/javascript",
          "exec" : [ "// get the variable from the postman response\nvar variable = pm.response.json();\n\n// get the frequencies formatted for amcharts\nvar frequencies = [];\nif (variable.frequencies !== undefined) {\n  var frequencySet = variable.frequencies.sets[0];\n  for (const [key, value] of Object.entries(frequencySet.map)) {\n    var entry = {\n      key: key,\n      value: value\n    };\n    frequencies.push(entry);\n  }\n}\n\n// get the populate vs missing values formatted for am charts\nvar populated = [];\nif (variable.summaryStatistics !== undefined) {\n  var statisticSet = variable.summaryStatistics.sets[0];\n  // populated entry\n  populated.push({\n    key: \"Populated\",\n    value: statisticSet.populated\n  });\n  // missing entry\n  populated.push({\n    key: \"Missing\",\n    value: statisticSet.missing\n  });\n}\n\n\nvar template = `\n    <link\n      rel=\"stylesheet\"\n      href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\"\n    />\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <link\n      href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\"\n    />\n    <style>\n      #frequencyChart {\n        width: 100%;\n        height: 275px;\n      }\n      #populatedChart {\n        width: 100%;\n        height: 100px;\n      }\n    </style>\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/core.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/charts.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/themes/animated.js\"></script>\n    <script>\n      pm.getData( function (error, data) {\n      // Themes begin\n      am4core.useTheme(am4themes_animated);\n      // Themes end\n\n      am4core.ready(function () {\n        // Create Populated / Missing Chart\n        var popChart = am4core.create(\"populatedChart\", am4charts.XYChart);\n\n        // Add data\n        popChart.data = data.populated;\n\n        // Create axes\n        var populatedCategoryAxis = popChart.yAxes.push(new am4charts.CategoryAxis());\n        populatedCategoryAxis.dataFields.category = \"key\";\n        populatedCategoryAxis.renderer.grid.template.location = 0;\n        populatedCategoryAxis.renderer.minGridDistance = 30;\n        var populatedValueAxis = popChart.xAxes.push(new am4charts.ValueAxis());\n\n        // Create series\n        var populatedSeries = popChart.series.push(new am4charts.ColumnSeries());\n        populatedSeries.columns.template.width = am4core.percent(20);\n        populatedSeries.dataFields.valueX = \"value\";\n        populatedSeries.dataFields.categoryY = \"key\";\n        populatedSeries.name = \"Populated and Missing\";\n        populatedSeries.columns.template.tooltipText = \"{categoryY}: [bold]{valueX}[/]\";\n        populatedSeries.columns.template.fillOpacity = 0.8;\n\n        // Create Frequency Chart\n        var chart = am4core.create(\"frequencyChart\", am4charts.XYChart);\n\n        // Add data\n        chart.data = data.frequencies;\n\n        // Create axes\n        var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());\n        categoryAxis.dataFields.category = \"key\";\n        categoryAxis.renderer.grid.template.location = 0;\n        categoryAxis.renderer.minGridDistance = 30;\n        var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());\n\n        // Create series\n        var series = chart.series.push(new am4charts.ColumnSeries());\n        series.dataFields.valueX = \"value\";\n        series.dataFields.categoryY = \"key\";\n        series.name = \"Value Frequencies\";\n        series.columns.template.tooltipText = \"{categoryY}: [bold]{valueX}[/]\";\n        series.columns.template.fillOpacity = 0.8;\n\n      });\n      });\n    </script>\n    <div class=\"rds-header\">\n      <h2 style=\"font-style: normal; font\">{{response.label}}</h2>\n      <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div style=\"margin: 32px\">\n      <h4>Details</h4>\n      {{#if response.label}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">short_text</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Label</h3>\n          <p id=\"variable-label\">{{{response.label}}}</p>\n        </div>\n      </div>\n      {{/if}}\n      {{#if response.description}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">notes</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Description</h3>\n          <p id=\"variable-description\">{{{response.description}}}</p>\n        </div>\n      </div>\n      {{/if}}\n      {{#if response.questionText}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">notes</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Question Text</h3>\n          <p id=\"variable-description\">{{{response.questionText}}}</p>\n        </div>\n      </div>\n      {{/if}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">storage</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Data Type</h3>\n          <p id=\"variable-type\">{{response.dataType}}</p>\n        </div>\n      </div>\n      <div style=\"margin-top: 32px\">\n        {{#if response.summaryStatistics}}\n        <div>\n          <div>\n            <h4>Populated and Missing</h4>\n            <div id=\"populatedChart\"></div>\n          </div> \n        </div>\n        {{/if}}\n        {{#if response.frequencies}}\n        <div>\n          <div>\n            <h4>Value Frequencies</h4>\n            <div id=\"frequencyChart\"></div>\n          </div>\n        </div>\n        {{/if}}\n      </div>\n    </div>\n`;\n\nconsole.log(frequencies)\n// Set visualizer\npm.visualizer.set(template, {\n  // Pass the response body parsed as JSON as `data`\n  response: pm.response.json(),\n  frequencies: frequencies,\n  populated: populated\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : "https://public.richdataservices.com/rds/api/catalog/ca/pumf_aps_2012/variable/GH2_05OT",
        "method" : "GET",
        "description" : {
          "content" : "This request returns detailed variable information for **GH2_05OT**. The variable ID or URI can be used in the path to get the details for any variable in the data product.",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    }, {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "8ddca7583b97c8a4db1817dec4101c7e",
      "name" : "Select All",
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "2c14cb28-5cee-4923-8572-aa83c2935bd3",
          "type" : "text/javascript",
          "exec" : [ "// get the data set from the postman response\nvar dataSet = pm.response.json();\n\n// get the variable ids\nvar variableNames = [];\nvar variables = {};\nfor(i = 0; i < dataSet.recordLayout.variables.length; i++){\n  var variable = dataSet.recordLayout.variables[i];\n  variableNames.push(variable.name)\n  variables[variable.id] = variable;\n}\n\n// build up some records based on the data and metadata\nvar nameRecords = [];\nvar codeRecords = [];\nvar bothRecords = [];\nfor (i = 0; i < dataSet.records.length; i++) {\n  var record = dataSet.records[i];\n  var nameRecord = [];\n  var codeRecord = [];\n  var bothRecord = [];\n  for (d = 0; d < record.data.length; d++) {\n    var data = record.data[d];\n    var value = data.value.value;\n    var nameValue = value;\n    var codeValue = value;\n    var bothValue = value;\n    if (value !== undefined && value.codeValue !== undefined) {\n      nameValue = value.name;\n      codeValue = value.codeValue;\n      bothValue = value.codeValue + \": \" + value.name;\n    }\n    nameRecord.push(nameValue);\n    codeRecord.push(codeValue);\n    bothRecord.push(bothValue);\n  }\n  nameRecords.push(nameRecord);\n  codeRecords.push(codeRecord);\n  bothRecords.push(bothRecord);\n}\n\n\nvar template = `\n    <link\n      rel=\"stylesheet\"\n      type=\"text/css\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.css\"\n    />\n    <link\n      rel=\"stylesheet\"\n      type=\"text/css\"\n      href=\"https://cdn.datatables.net/1.10.21/css/dataTables.bootstrap4.min.css\"\n    />\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <script\n      src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"\n      integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\"\n      crossorigin=\"anonymous\"\n    ></script>\n    <script\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\"\n      integrity=\"sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49\"\n      crossorigin=\"anonymous\"\n    ></script>\n    <script\n      type=\"text/javascript\"\n      src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\"\n    ></script>\n    <script>\n      $( document ).ready(function() {\n        pm.getData( function (error, data) {\n          // initialize data table\n          var table = document.getElementById(\"data\");\n\n          var tableHeader = table.getElementsByTagName('thead')[0]\n          var headerRow = tableHeader.insertRow();\n          for(i = 0; i < data.variableNames.length; i++){\n              var newTh = document.createElement('th');\n              newTh.innerHTML=data.variableNames[i];\n              newTh.setAttribute(\"onclick\",  \"updateVariable('\"+data.variableNames[i]+\"')\")\n              headerRow.appendChild(newTh)\n          }\n\n          var tableBody = table.getElementsByTagName('tbody')[0]\n          for(i = 0; i < data.nameRecords.length; i++){\n            var record = data.nameRecords[i];\n            var newRow = tableBody.insertRow();\n            for(d = 0; d < record.length; d++){\n              var newTd = document.createElement('td');\n              newTd.innerHTML=record[d];\n              newRow.appendChild(newTd)\n            }\n          }\n\n          // initialize variable details\n          var variable = data.variables[data.variableNames[0]];\n          updateVariableTable(variable);\n        });\n      });\n\n      function updateVariable(id) {\n        pm.getData( function (error, data) {\n          console.log(id)\n          var variable = data.variables[id];\n          updateVariableTable(variable);\n        });\n      }\n\n      function updateVariableTable(variable){\n          var variableLabel = document.getElementById(\"variable-label\");\n          variableLabel.innerHTML = variable.label;\n\n          var variableDescription = document.getElementById(\"variable-description\");\n          variableDescription.innerHTML = variable.description;\n\n          var variableType = document.getElementById(\"variable-type\");\n          variableType.innerHTML = variable.dataType;\n\n\n          createVariableRow(varTableBody, \"Label\", variable.label);\n          createVariableRow(varTableBody, \"Description\", variable.description);\n          createVariableRow(varTableBody, \"Question Text\", variable.questionText);\n          createVariableRow(varTableBody, \"Data Type\", variable.dataType);\n      }\n\n      function createVariableRow(tableBody, name, value){\n        if(value !== undefined){\n            var row = tableBody.insertRow();\n            var nameTd = document.createElement('td');\n            nameTd.innerHTML=name;\n            var valueTd = document.createElement('td');\n            valueTd.innerHTML=value;\n            row.appendChild(nameTd)\n            row.appendChild(valueTd)\n          }\n      }\n\n      function updateCodes(id) {\n        pm.getData( function (error, data) {\n          // refreshes the table \n          var table = document.getElementById(\"data\");\n          while (table.rows.length > 1) {\n            table.deleteRow(1);\n          }\n\n          var records;\n          if(id === 'name'){\n            records = data.nameRecords;\n          }else if(id === 'value'){\n            records = data.codeRecords;\n          }else{\n            records = data.bothRecords;\n          }\n\n          var tableBody = table.getElementsByTagName('tbody')[0]\n          for(i = 0; i < records.length; i++){\n            var record = records[i];\n            var newRow = tableBody.insertRow();\n            for(d = 0; d < record.length; d++){\n              var newTd = document.createElement('td');\n              newTd.innerHTML=record[d];\n              newRow.appendChild(newTd)\n            }\n          }\n        });\n      }\n    </script>\n    <style type=\"text/css\">\n      .btn-group {\n        border: 1px solid rgba(0,0,0,0.12);\n        border-radius: 8px;\n        display: -ms-inline-flexbox;\n        display: inline-flex;\n        margin-top: 8px;\n        overflow: hidden;\n        position: relative;\n        width: 100%;\n        white-space: nowrap;\n      }\n      .btn-secondary,\n      .btn-secondary:active {\n        background: #fff;\n        background-color: #fff;\n        border-left: 1px solid rgba(0,0,0,0.12);\n        border-top: none;\n        border-bottom: none;\n        border-right: none;\n        box-shadow: none !important;\n        color: rgba(0,0,0,0.87);\n        font-size: 16px;\n        font-family: Roboto,Helvetica Neue,sans-serif;\n        line-height: 48px;\n        padding: 0 12px;\n        white-space: nowrap;\n        width: 34%;\n      }\n      .btn-secondary:not(:disabled):not(.disabled).active,\n      .btn-secondary:not(:disabled):not(.disabled).active:active{\n        background-color: #e0e0e0;\n        border: 1px solid #e0e0e0;\n        color: rgba(0,0,0,0.87);\n      }\n      .btn-secondary:hover {\n        background-color: #ededed;\n        border-top: none;\n        border-bottom: none;\n        border-left: 1px solid rgba(0,0,0,.12);\n        border-right: none;\n        color: rgba(0,0,0,0.87); \n      }\n      .code-display-controls {\n        margin-right: 0;\n        width: 100%;\n      }\n      .content-container {\n        display:flex;\n        flex-direction: row;\n        padding: 10px;\n      }\n      h4 {\n        font-family: Roboto, sans-serif;\n        font-size: 12px;\n        font-weight: 400;\n        height: 13px;\n        letter-spacing: 1px;\n        line-height: 13px;\n        margin: 0;\n        text-transform: uppercase;\n      }\n      th {\n        cursor: pointer;\n      }\n      .table-information {\n        display: flex;\n        flex-direction: column;\n        margin-right: 32px;\n        margin-top: 24px;\n        min-width: 25%; \n        width: 25%;\n      }\n      @media screen and (max-width: 950px) {\n        .code-display-controls {\n          margin-right: 32px;\n          width: 25%;\n        }\n        .code-display-controls {\n          margin: 16px 0;\n          width: 100%;\n        }\n        .content-container {\n          flex-direction: column;\n        }\n        .table-information {\n          align-items: left;\n          flex-direction: column-reverse;\n          justify-content: space-around;\n          width: 100%;\n        }\n      }\n    </style>\n    <div class=\"rds-header\">\n      <h2 style=\"font-style: normal; font\">Data Explorer</h2>\n      <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div class=\"content-container\">\n      <div class=\"table-information\">\n        <div class=\"code-display-controls\">\n          <h4>Code Display</h4>\n          <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n            <label class=\"btn btn-secondary active\" \n            onclick=\"updateCodes('name')\">\n              <input\n                type=\"radio\"\n                name=\"options\"\n                id=\"codeName\"\n                autocomplete=\"off\"\n                checked\n              />\n              Name\n            </label>\n            <label class=\"btn btn-secondary\" onclick=\"updateCodes('value')\">\n              <input\n                type=\"radio\"\n                name=\"options\"\n                id=\"codeValue\"\n                autocomplete=\"off\"\n              />\n              Value\n            </label>\n            <label class=\"btn btn-secondary\" onclick=\"updateCodes('both')\">\n              <input\n                type=\"radio\"\n                name=\"options\"\n                id=\"both\"\n                autocomplete=\"off\"\n              />\n              Both\n            </label>\n          </div>\n        </div>\n        <div>\n          <br/>\n          <h4>Variable Details</h4>\n          <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n            <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">short_text</mat-icon>\n            <div sytle=\"display:flex; flex-direction: column;\">\n              <h3>Label</h3>\n              <p id=\"variable-label\"></p>\n            </div>\n          </div>\n          <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n            <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">notes</mat-icon>\n            <div sytle=\"display:flex; flex-direction: column;\">\n              <h3>Description</h3>\n              <p id=\"variable-description\"></p>\n            </div>\n          </div>\n          <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n            <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">storage</mat-icon>\n            <div sytle=\"display:flex; flex-direction: column;\">\n              <h3>Data Type</h3>\n              <p id=\"variable-type\"></p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <table\n        id=\"data\"\n        style=\"width: 100%;\">\n          <thead>\n          </thead>\n          <tbody>\n          </tbody>\n      </table>\n    </div>\n`;\n\n// Set visualizer\npm.visualizer.set(template, {\n  // Pass the response body parsed as JSON as `data`\n  response: pm.response.json(),\n  variableNames: variableNames,\n  nameRecords: nameRecords,\n  codeRecords: codeRecords,\n  bothRecords: bothRecords,\n  variables: variables\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : {"protocol":"https","host":"public.richdataservices.com","path":"/rds/api/query/ca/pumf_aps_2012/select","query":[{"key":"format","value":"MTNA","disabled":false,"description":{"content":"We will use the MTNA format for our response, this will include the variable metadata in the response. In addition, when combined with the inject parameter the records will contain code objects which will allow us to toggle between the code name, value, or both.","type":"text/markdown"}},{"key":"inject","disabled":false,"description":{"content":"Including the inject flag will specify that the raw values should be replaced with their codes if there are any associated with that value. In the MTNA format that we are using this will result in the code object being returned. In simpler formats the code name will be returned in place of the code value.","type":"text/markdown"}},{"key":"limit","value":"25","disabled":false,"description":{"content":"This will limit the number of rows returned.","type":"text/markdown"}},{"key":"collimit","value":"25","disabled":false,"description":{"content":"This will limit the number of columns returned.","type":"text/markdown"}}],"variable":[]},
        "method" : "GET",
        "description" : {
          "content" : "This query will select the first 25 variables and 25 records in the data product as a basic example of querying records. For a complete list of available parameters, please reference the <a href=\"https://documenter.getpostman.com/view/2220438/SzS5umZ3?version=latest#b11de492-633b-49cb-a422-47b90c0810dd\" target=\"_blank\">select query documentation</a>.",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    } ],
    "event" : [ ]
  }, {
    "@class" : "us.mtna.postman.model.ItemGroup",
    "name" : "PUMF: Canadian Community Health Survey, 2015-2016: Annual Component",
    "description" : {
      "content" : "## Overview \n\n<p>In 1991, the National Task Force on Health Information cited a number of issues and problems with the health information system. To respond to these issues, the Canadian Institute for Health Information (CIHI), Statistics Canada and Health Canada joined forces to create a Health Information Roadmap. From this mandate, the Canadian Community Health Survey (CCHS) was conceived.</p><p>The CCHS is a cross-sectional survey that collects information related to health status, health care utilization and health determinants for the Canadian population. The survey is offered in both official languages. It relies upon a large sample of respondents and is designed to provide reliable estimates at the health region level every 2 years.</p>The CCHS has the following objectives:<ul><li>Support health surveillance programs by providing health data at the national, provincial and intra-provincial levels;</li><li>Provide a single data source for health research on small populations and rare characteristics;</li><li>Timely release of information easily accessible to a diverse community of users;</li><li>Create a flexible survey instrument that includes a rapid response option to address emerging issues related to the health of the population.</li></ul><p>The CCHS produces an annual microdata file and a file combining two years of data. The CCHS collection years can also be combined by users to examine populations or rare characteristics.</p>\n\n## Citation \n\nStatistics Canada. Canadian Community Health Survey, 2015-2016: Annual Component  [Public use microdata file] Ottawa, Ontario: Health Statistics Division, Statistics Canada [producer] Ottawa, Ontario: Data Liberation Initiative, Statistics Canada [distributor]\n\n## Provenance \n\nThis data product and metadata is sourced from CSV, DDI, and documentation files made available by <a href='https://odesi.ca/' target='_blank'>ODESI</a> and the <a href='https://www.statcan.gc.ca/eng/dli/dli' target='_blank'>Data Liberation Initative</a>.\n\n## RDS User Interfaces\n\nWant to play with the data before diving into the API? Try out some of our data exploration tools that were built entirely off the API to see what it's capable of.\n* The data and metadata can be explored using the [RDS Explorer](https://public.richdataservices.com/rds-explorer/explore/ca/pumf_cchs_2015/data).\n* The data can be tabulated using the [RDS TabEngine](https://public.richdataservices.com/rds-tabengine/analysis/ca/pumf_cchs_2015/custom-tables).\n",
      "type" : "text/markdown"
    },
    "variable" : [ ],
    "item" : [ {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "cb244948d96661fb0f8b836ba6f0b411",
      "name" : "Data Product Overview",
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "deb50bd8-f961-4ee3-9549-92f942b0792d",
          "type" : "text/javascript",
          "exec" : [ "var template = `\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <style type=\"text/css\">\n        .information-label {\n            color: rgba(0,0,0,0.54);\n            font-family: Roboto, sans-serif;\n            font-size: .75em;\n            font-style: normal;\n            font-weight: 900;\n            letter-spacing: 1px;\n            margin-top: 16px;\n            text-transform: uppercase;\n        }\n        .item-id {\n            color: rgba(0,0,0,0.54);\n            font-family: 'Roboto Mono', monospace;\n        }\n    </style>\n    <div class=\"rds-header\">\n        <h2 style=\"font-style: normal\">Data Product</h2>\n        <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div id=\"wrapper\">\n      <div id=\"main\">\n        <br />\n        <div class=\"textblock\">\n          <h3 id=\"startcontent\">\n            {{response.name}} <span class=\"item-id\">[{{response.id}}]</span>\n          </h3>\n\n          {{#if response.description}}\n          <h4 class=\"information-label\">Description</h4>\n          <div style=\"padding-left: 1.5%;\" class=\"product-information\"> \n            {{{response.description}}} \n          </div>\n          {{/if}}\n          {{#if response.citation}}\n          <h4 class=\"information-label\">Citation</h4>\n          <div style=\"padding-left: 1.5%;\" class=\"product-information\">\n            {{{response.citation}}}\n          </div>\n          {{/if}}\n          {{#if response.provenance}}\n          <h4 class=\"information-label\">Provenance</h4>\n          <div style=\"padding-left: 1.5%;\" class=\"product-information\">\n            {{{response.provenance}}}\n          </div>\n          {{/if}}\n          {{#if response.note}}\n          <h4 class=\"information-label\">Notes</h4>\n          <div id=\"notes\" style=\"padding-left: 1.5%;\" class=\"product-information\">\n            {{{response.note}}}\n          </div>\n          {{/if}}\n        </div>\n      </div>\n    </div>\n`;\n\n// Set visualizer\npm.visualizer.set(template, {\n    // Pass the response body parsed as JSON as `data`\n    response: pm.response.json()\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : "https://public.richdataservices.com/rds/api/catalog/ca/pumf_cchs_2015",
        "method" : "GET",
        "description" : {
          "content" : "This request returns the data product from the RDS API. It contains descriptive properties such as the data product name, label, description, a citation of the source of the data, provenance information, when the product was last updated, and any additional notes that may be needed to further understand the data or how to use it.",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    }, {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "37295f915cd250b54e18a02a002f2940",
      "name" : "Data Dictionary",
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "7ce489d3-1a92-4f07-a6b8-7158a5af27b4",
          "type" : "text/javascript",
          "exec" : [ "var template = `\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <div class=\"rds-header\">\n        <h2 style=\"font-style: normal\">PUMF: Canadian Community Health Survey, 2015-2016: Annual Component - Dictionary</h2>\n        <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div id=\"wrapper\">\n      <div id=\"main\">\n        <div class=\"textblock\">\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Label</th>\n                <th class=\"description\">Description</th>\n                <th>Data Type</th>\n                <th>Has Classification</th>\n                <th>Is Dimension</th>\n                <th>Is Measure</th>\n              </tr>\n            </thead>\n            <tbody>\n              {{#each response}}\t\n                <tr>\n                    <td>{{{name}}}</td>\n                    <td>{{{label}}}</td>\n                    <td>{{{description}}}</td>\n                    <td>{{{dataType}}}</td>\n                    {{#if classificationUri}}\n                    <td class=\"icon-cell\"><mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">check_circle_outline</mat-icon></td>\n                    {{else}}\n                    <td></td>\n                    {{/if}}  \n                    {{#if isDimension}}\n                    <td class=\"icon-cell\"><mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">check_circle_outline</mat-icon></td>\n                    {{else}}\n                    <td></td>\n                    {{/if}}  \n                    {{#if isMeasure}}\n                    <td class=\"icon-cell\"><mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">check_circle_outline</mat-icon></td>\n                    {{else}}\n                    <td></td>\n                    {{/if}}  \n                </tr>\n                {{/each}}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n`;\n\n// Set visualizer\npm.visualizer.set(template, {\n    // Pass the response body parsed as JSON as `data`\n    response: pm.response.json()\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : "https://public.richdataservices.com/rds/api/catalog/ca/pumf_cchs_2015/variables",
        "method" : "GET",
        "description" : {
          "content" : "This request returns the data dictionary for the data product. The data dictionary is a simple listing of all the variables that make up the data product. This should include descriptive properties of each variable including its name, label, description, question text (if captured as part of a survey / questionnare) and any associated classification references. This is not meant to provide a detailed view of any particular variable, but a general overview of the variables that are available as part of the product. ",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    }, {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "2304785dccf7476eb7b8c2408da5b156",
      "name" : "Variable Details - PAYDVTWD",
      "description" : {
        "content" : "",
        "type" : "text/markdown"
      },
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "c07a10d8-e170-49e8-9b5b-0147ec4621df",
          "type" : "text/javascript",
          "exec" : [ "// get the variable from the postman response\nvar variable = pm.response.json();\n\n// get the frequencies formatted for amcharts\nvar frequencies = [];\nif (variable.frequencies !== undefined) {\n  var frequencySet = variable.frequencies.sets[0];\n  for (const [key, value] of Object.entries(frequencySet.map)) {\n    var entry = {\n      key: key,\n      value: value\n    };\n    frequencies.push(entry);\n  }\n}\n\n// get the populate vs missing values formatted for am charts\nvar populated = [];\nif (variable.summaryStatistics !== undefined) {\n  var statisticSet = variable.summaryStatistics.sets[0];\n  // populated entry\n  populated.push({\n    key: \"Populated\",\n    value: statisticSet.populated\n  });\n  // missing entry\n  populated.push({\n    key: \"Missing\",\n    value: statisticSet.missing\n  });\n}\n\n\nvar template = `\n    <link\n      rel=\"stylesheet\"\n      href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\"\n    />\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <link\n      href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\"\n    />\n    <style>\n      #frequencyChart {\n        width: 100%;\n        height: 275px;\n      }\n      #populatedChart {\n        width: 100%;\n        height: 100px;\n      }\n    </style>\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/core.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/charts.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/themes/animated.js\"></script>\n    <script>\n      pm.getData( function (error, data) {\n      // Themes begin\n      am4core.useTheme(am4themes_animated);\n      // Themes end\n\n      am4core.ready(function () {\n        // Create Populated / Missing Chart\n        var popChart = am4core.create(\"populatedChart\", am4charts.XYChart);\n\n        // Add data\n        popChart.data = data.populated;\n\n        // Create axes\n        var populatedCategoryAxis = popChart.yAxes.push(new am4charts.CategoryAxis());\n        populatedCategoryAxis.dataFields.category = \"key\";\n        populatedCategoryAxis.renderer.grid.template.location = 0;\n        populatedCategoryAxis.renderer.minGridDistance = 30;\n        var populatedValueAxis = popChart.xAxes.push(new am4charts.ValueAxis());\n\n        // Create series\n        var populatedSeries = popChart.series.push(new am4charts.ColumnSeries());\n        populatedSeries.columns.template.width = am4core.percent(20);\n        populatedSeries.dataFields.valueX = \"value\";\n        populatedSeries.dataFields.categoryY = \"key\";\n        populatedSeries.name = \"Populated and Missing\";\n        populatedSeries.columns.template.tooltipText = \"{categoryY}: [bold]{valueX}[/]\";\n        populatedSeries.columns.template.fillOpacity = 0.8;\n\n        // Create Frequency Chart\n        var chart = am4core.create(\"frequencyChart\", am4charts.XYChart);\n\n        // Add data\n        chart.data = data.frequencies;\n\n        // Create axes\n        var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());\n        categoryAxis.dataFields.category = \"key\";\n        categoryAxis.renderer.grid.template.location = 0;\n        categoryAxis.renderer.minGridDistance = 30;\n        var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());\n\n        // Create series\n        var series = chart.series.push(new am4charts.ColumnSeries());\n        series.dataFields.valueX = \"value\";\n        series.dataFields.categoryY = \"key\";\n        series.name = \"Value Frequencies\";\n        series.columns.template.tooltipText = \"{categoryY}: [bold]{valueX}[/]\";\n        series.columns.template.fillOpacity = 0.8;\n\n      });\n      });\n    </script>\n    <div class=\"rds-header\">\n      <h2 style=\"font-style: normal; font\">{{response.label}}</h2>\n      <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div style=\"margin: 32px\">\n      <h4>Details</h4>\n      {{#if response.label}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">short_text</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Label</h3>\n          <p id=\"variable-label\">{{{response.label}}}</p>\n        </div>\n      </div>\n      {{/if}}\n      {{#if response.description}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">notes</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Description</h3>\n          <p id=\"variable-description\">{{{response.description}}}</p>\n        </div>\n      </div>\n      {{/if}}\n      {{#if response.questionText}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">notes</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Question Text</h3>\n          <p id=\"variable-description\">{{{response.questionText}}}</p>\n        </div>\n      </div>\n      {{/if}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">storage</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Data Type</h3>\n          <p id=\"variable-type\">{{response.dataType}}</p>\n        </div>\n      </div>\n      <div style=\"margin-top: 32px\">\n        {{#if response.summaryStatistics}}\n        <div>\n          <div>\n            <h4>Populated and Missing</h4>\n            <div id=\"populatedChart\"></div>\n          </div> \n        </div>\n        {{/if}}\n        {{#if response.frequencies}}\n        <div>\n          <div>\n            <h4>Value Frequencies</h4>\n            <div id=\"frequencyChart\"></div>\n          </div>\n        </div>\n        {{/if}}\n      </div>\n    </div>\n`;\n\nconsole.log(frequencies)\n// Set visualizer\npm.visualizer.set(template, {\n  // Pass the response body parsed as JSON as `data`\n  response: pm.response.json(),\n  frequencies: frequencies,\n  populated: populated\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : "https://public.richdataservices.com/rds/api/catalog/ca/pumf_cchs_2015/variable/PAYDVTWD",
        "method" : "GET",
        "description" : {
          "content" : "This request returns detailed variable information for **PAYDVTWD**. The variable ID or URI can be used in the path to get the details for any variable in the data product.",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    }, {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "7c9423a2ee2338780dfd4f7d92440dbe",
      "name" : "Select All",
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "bc216239-232d-47c3-913c-d42020516821",
          "type" : "text/javascript",
          "exec" : [ "// get the data set from the postman response\nvar dataSet = pm.response.json();\n\n// get the variable ids\nvar variableNames = [];\nvar variables = {};\nfor(i = 0; i < dataSet.recordLayout.variables.length; i++){\n  var variable = dataSet.recordLayout.variables[i];\n  variableNames.push(variable.name)\n  variables[variable.id] = variable;\n}\n\n// build up some records based on the data and metadata\nvar nameRecords = [];\nvar codeRecords = [];\nvar bothRecords = [];\nfor (i = 0; i < dataSet.records.length; i++) {\n  var record = dataSet.records[i];\n  var nameRecord = [];\n  var codeRecord = [];\n  var bothRecord = [];\n  for (d = 0; d < record.data.length; d++) {\n    var data = record.data[d];\n    var value = data.value.value;\n    var nameValue = value;\n    var codeValue = value;\n    var bothValue = value;\n    if (value !== undefined && value.codeValue !== undefined) {\n      nameValue = value.name;\n      codeValue = value.codeValue;\n      bothValue = value.codeValue + \": \" + value.name;\n    }\n    nameRecord.push(nameValue);\n    codeRecord.push(codeValue);\n    bothRecord.push(bothValue);\n  }\n  nameRecords.push(nameRecord);\n  codeRecords.push(codeRecord);\n  bothRecords.push(bothRecord);\n}\n\n\nvar template = `\n    <link\n      rel=\"stylesheet\"\n      type=\"text/css\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.css\"\n    />\n    <link\n      rel=\"stylesheet\"\n      type=\"text/css\"\n      href=\"https://cdn.datatables.net/1.10.21/css/dataTables.bootstrap4.min.css\"\n    />\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <script\n      src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"\n      integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\"\n      crossorigin=\"anonymous\"\n    ></script>\n    <script\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\"\n      integrity=\"sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49\"\n      crossorigin=\"anonymous\"\n    ></script>\n    <script\n      type=\"text/javascript\"\n      src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\"\n    ></script>\n    <script>\n      $( document ).ready(function() {\n        pm.getData( function (error, data) {\n          // initialize data table\n          var table = document.getElementById(\"data\");\n\n          var tableHeader = table.getElementsByTagName('thead')[0]\n          var headerRow = tableHeader.insertRow();\n          for(i = 0; i < data.variableNames.length; i++){\n              var newTh = document.createElement('th');\n              newTh.innerHTML=data.variableNames[i];\n              newTh.setAttribute(\"onclick\",  \"updateVariable('\"+data.variableNames[i]+\"')\")\n              headerRow.appendChild(newTh)\n          }\n\n          var tableBody = table.getElementsByTagName('tbody')[0]\n          for(i = 0; i < data.nameRecords.length; i++){\n            var record = data.nameRecords[i];\n            var newRow = tableBody.insertRow();\n            for(d = 0; d < record.length; d++){\n              var newTd = document.createElement('td');\n              newTd.innerHTML=record[d];\n              newRow.appendChild(newTd)\n            }\n          }\n\n          // initialize variable details\n          var variable = data.variables[data.variableNames[0]];\n          updateVariableTable(variable);\n        });\n      });\n\n      function updateVariable(id) {\n        pm.getData( function (error, data) {\n          console.log(id)\n          var variable = data.variables[id];\n          updateVariableTable(variable);\n        });\n      }\n\n      function updateVariableTable(variable){\n          var variableLabel = document.getElementById(\"variable-label\");\n          variableLabel.innerHTML = variable.label;\n\n          var variableDescription = document.getElementById(\"variable-description\");\n          variableDescription.innerHTML = variable.description;\n\n          var variableType = document.getElementById(\"variable-type\");\n          variableType.innerHTML = variable.dataType;\n\n\n          createVariableRow(varTableBody, \"Label\", variable.label);\n          createVariableRow(varTableBody, \"Description\", variable.description);\n          createVariableRow(varTableBody, \"Question Text\", variable.questionText);\n          createVariableRow(varTableBody, \"Data Type\", variable.dataType);\n      }\n\n      function createVariableRow(tableBody, name, value){\n        if(value !== undefined){\n            var row = tableBody.insertRow();\n            var nameTd = document.createElement('td');\n            nameTd.innerHTML=name;\n            var valueTd = document.createElement('td');\n            valueTd.innerHTML=value;\n            row.appendChild(nameTd)\n            row.appendChild(valueTd)\n          }\n      }\n\n      function updateCodes(id) {\n        pm.getData( function (error, data) {\n          // refreshes the table \n          var table = document.getElementById(\"data\");\n          while (table.rows.length > 1) {\n            table.deleteRow(1);\n          }\n\n          var records;\n          if(id === 'name'){\n            records = data.nameRecords;\n          }else if(id === 'value'){\n            records = data.codeRecords;\n          }else{\n            records = data.bothRecords;\n          }\n\n          var tableBody = table.getElementsByTagName('tbody')[0]\n          for(i = 0; i < records.length; i++){\n            var record = records[i];\n            var newRow = tableBody.insertRow();\n            for(d = 0; d < record.length; d++){\n              var newTd = document.createElement('td');\n              newTd.innerHTML=record[d];\n              newRow.appendChild(newTd)\n            }\n          }\n        });\n      }\n    </script>\n    <style type=\"text/css\">\n      .btn-group {\n        border: 1px solid rgba(0,0,0,0.12);\n        border-radius: 8px;\n        display: -ms-inline-flexbox;\n        display: inline-flex;\n        margin-top: 8px;\n        overflow: hidden;\n        position: relative;\n        width: 100%;\n        white-space: nowrap;\n      }\n      .btn-secondary,\n      .btn-secondary:active {\n        background: #fff;\n        background-color: #fff;\n        border-left: 1px solid rgba(0,0,0,0.12);\n        border-top: none;\n        border-bottom: none;\n        border-right: none;\n        box-shadow: none !important;\n        color: rgba(0,0,0,0.87);\n        font-size: 16px;\n        font-family: Roboto,Helvetica Neue,sans-serif;\n        line-height: 48px;\n        padding: 0 12px;\n        white-space: nowrap;\n        width: 34%;\n      }\n      .btn-secondary:not(:disabled):not(.disabled).active,\n      .btn-secondary:not(:disabled):not(.disabled).active:active{\n        background-color: #e0e0e0;\n        border: 1px solid #e0e0e0;\n        color: rgba(0,0,0,0.87);\n      }\n      .btn-secondary:hover {\n        background-color: #ededed;\n        border-top: none;\n        border-bottom: none;\n        border-left: 1px solid rgba(0,0,0,.12);\n        border-right: none;\n        color: rgba(0,0,0,0.87); \n      }\n      .code-display-controls {\n        margin-right: 0;\n        width: 100%;\n      }\n      .content-container {\n        display:flex;\n        flex-direction: row;\n        padding: 10px;\n      }\n      h4 {\n        font-family: Roboto, sans-serif;\n        font-size: 12px;\n        font-weight: 400;\n        height: 13px;\n        letter-spacing: 1px;\n        line-height: 13px;\n        margin: 0;\n        text-transform: uppercase;\n      }\n      th {\n        cursor: pointer;\n      }\n      .table-information {\n        display: flex;\n        flex-direction: column;\n        margin-right: 32px;\n        margin-top: 24px;\n        min-width: 25%; \n        width: 25%;\n      }\n      @media screen and (max-width: 950px) {\n        .code-display-controls {\n          margin-right: 32px;\n          width: 25%;\n        }\n        .code-display-controls {\n          margin: 16px 0;\n          width: 100%;\n        }\n        .content-container {\n          flex-direction: column;\n        }\n        .table-information {\n          align-items: left;\n          flex-direction: column-reverse;\n          justify-content: space-around;\n          width: 100%;\n        }\n      }\n    </style>\n    <div class=\"rds-header\">\n      <h2 style=\"font-style: normal; font\">Data Explorer</h2>\n      <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div class=\"content-container\">\n      <div class=\"table-information\">\n        <div class=\"code-display-controls\">\n          <h4>Code Display</h4>\n          <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n            <label class=\"btn btn-secondary active\" \n            onclick=\"updateCodes('name')\">\n              <input\n                type=\"radio\"\n                name=\"options\"\n                id=\"codeName\"\n                autocomplete=\"off\"\n                checked\n              />\n              Name\n            </label>\n            <label class=\"btn btn-secondary\" onclick=\"updateCodes('value')\">\n              <input\n                type=\"radio\"\n                name=\"options\"\n                id=\"codeValue\"\n                autocomplete=\"off\"\n              />\n              Value\n            </label>\n            <label class=\"btn btn-secondary\" onclick=\"updateCodes('both')\">\n              <input\n                type=\"radio\"\n                name=\"options\"\n                id=\"both\"\n                autocomplete=\"off\"\n              />\n              Both\n            </label>\n          </div>\n        </div>\n        <div>\n          <br/>\n          <h4>Variable Details</h4>\n          <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n            <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">short_text</mat-icon>\n            <div sytle=\"display:flex; flex-direction: column;\">\n              <h3>Label</h3>\n              <p id=\"variable-label\"></p>\n            </div>\n          </div>\n          <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n            <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">notes</mat-icon>\n            <div sytle=\"display:flex; flex-direction: column;\">\n              <h3>Description</h3>\n              <p id=\"variable-description\"></p>\n            </div>\n          </div>\n          <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n            <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">storage</mat-icon>\n            <div sytle=\"display:flex; flex-direction: column;\">\n              <h3>Data Type</h3>\n              <p id=\"variable-type\"></p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <table\n        id=\"data\"\n        style=\"width: 100%;\">\n          <thead>\n          </thead>\n          <tbody>\n          </tbody>\n      </table>\n    </div>\n`;\n\n// Set visualizer\npm.visualizer.set(template, {\n  // Pass the response body parsed as JSON as `data`\n  response: pm.response.json(),\n  variableNames: variableNames,\n  nameRecords: nameRecords,\n  codeRecords: codeRecords,\n  bothRecords: bothRecords,\n  variables: variables\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : {"protocol":"https","host":"public.richdataservices.com","path":"/rds/api/query/ca/pumf_cchs_2015/select","query":[{"key":"format","value":"MTNA","disabled":false,"description":{"content":"We will use the MTNA format for our response, this will include the variable metadata in the response. In addition, when combined with the inject parameter the records will contain code objects which will allow us to toggle between the code name, value, or both.","type":"text/markdown"}},{"key":"inject","disabled":false,"description":{"content":"Including the inject flag will specify that the raw values should be replaced with their codes if there are any associated with that value. In the MTNA format that we are using this will result in the code object being returned. In simpler formats the code name will be returned in place of the code value.","type":"text/markdown"}},{"key":"limit","value":"25","disabled":false,"description":{"content":"This will limit the number of rows returned.","type":"text/markdown"}},{"key":"collimit","value":"25","disabled":false,"description":{"content":"This will limit the number of columns returned.","type":"text/markdown"}}],"variable":[]},
        "method" : "GET",
        "description" : {
          "content" : "This query will select the first 25 variables and 25 records in the data product as a basic example of querying records. For a complete list of available parameters, please reference the <a href=\"https://documenter.getpostman.com/view/2220438/SzS5umZ3?version=latest#b11de492-633b-49cb-a422-47b90c0810dd\" target=\"_blank\">select query documentation</a>.",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    } ],
    "event" : [ ]
  }, {
    "@class" : "us.mtna.postman.model.ItemGroup",
    "name" : "PUMF: Canadian Community Health Survey, 2017-2018: Annual Component",
    "description" : {
      "content" : "## Overview \n\n<p>In 1991, the National Task Force on Health Information cited a number of issues and problems with the health information system. To respond to these issues, the Canadian Institute for Health Information (CIHI), Statistics Canada and Health Canada joined forces to create a Health Information Roadmap. From this mandate, the Canadian Community Health Survey (CCHS) was conceived.</p><p>The CCHS is a cross-sectional survey that collects information related to health status, health care utilization and health determinants for the Canadian population. The survey is offered in both official languages. It relies upon a large sample of respondents and is designed to provide reliable estimates at the health region level every 2 years.</p>The CCHS has the following objectives:<ul><li>Support health surveillance programs by providing health data at the national, provincial and intra-provincial levels;</li><li>Provide a single data source for health research on small populations and rare characteristics;</li><li>Timely release of information easily accessible to a diverse community of users;</li><li>Create a flexible survey instrument that includes a rapid response option to address emerging issues related to the health of the population.</li></ul><p>The CCHS produces an annual microdata file and a file combining two years of data. The CCHS collection years can also be combined by users to examine populations or rare characteristics.</p>\n\n## Citation \n\nStatistics Canada. Canadian Community Health Survey, 2017-2018: Annual Component  [Public use microdata file] Ottawa, Ontario: Health Statistics Division, Statistics Canada [producer] Ottawa, Ontario: Data Liberation Initiative, Statistics Canada [distributor]\n\n## Provenance \n\nThis data product and metadata is sourced from CSV, DDI, and documentation files made available by <a href='https://odesi.ca/' target='_blank'>ODESI</a> and the <a href='https://www.statcan.gc.ca/eng/dli/dli' target='_blank'>Data Liberation Initative</a>.\n\n## RDS User Interfaces\n\nWant to play with the data before diving into the API? Try out some of our data exploration tools that were built entirely off the API to see what it's capable of.\n* The data and metadata can be explored using the [RDS Explorer](https://public.richdataservices.com/rds-explorer/explore/ca/pumf_cchs_2017/data).\n* The data can be tabulated using the [RDS TabEngine](https://public.richdataservices.com/rds-tabengine/analysis/ca/pumf_cchs_2017/custom-tables).\n",
      "type" : "text/markdown"
    },
    "variable" : [ ],
    "item" : [ {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "a08e0874177b52abcb9620679be7df34",
      "name" : "Data Product Overview",
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "12cb6785-ced6-4944-88db-3a07e5fd0438",
          "type" : "text/javascript",
          "exec" : [ "var template = `\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <style type=\"text/css\">\n        .information-label {\n            color: rgba(0,0,0,0.54);\n            font-family: Roboto, sans-serif;\n            font-size: .75em;\n            font-style: normal;\n            font-weight: 900;\n            letter-spacing: 1px;\n            margin-top: 16px;\n            text-transform: uppercase;\n        }\n        .item-id {\n            color: rgba(0,0,0,0.54);\n            font-family: 'Roboto Mono', monospace;\n        }\n    </style>\n    <div class=\"rds-header\">\n        <h2 style=\"font-style: normal\">Data Product</h2>\n        <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div id=\"wrapper\">\n      <div id=\"main\">\n        <br />\n        <div class=\"textblock\">\n          <h3 id=\"startcontent\">\n            {{response.name}} <span class=\"item-id\">[{{response.id}}]</span>\n          </h3>\n\n          {{#if response.description}}\n          <h4 class=\"information-label\">Description</h4>\n          <div style=\"padding-left: 1.5%;\" class=\"product-information\"> \n            {{{response.description}}} \n          </div>\n          {{/if}}\n          {{#if response.citation}}\n          <h4 class=\"information-label\">Citation</h4>\n          <div style=\"padding-left: 1.5%;\" class=\"product-information\">\n            {{{response.citation}}}\n          </div>\n          {{/if}}\n          {{#if response.provenance}}\n          <h4 class=\"information-label\">Provenance</h4>\n          <div style=\"padding-left: 1.5%;\" class=\"product-information\">\n            {{{response.provenance}}}\n          </div>\n          {{/if}}\n          {{#if response.note}}\n          <h4 class=\"information-label\">Notes</h4>\n          <div id=\"notes\" style=\"padding-left: 1.5%;\" class=\"product-information\">\n            {{{response.note}}}\n          </div>\n          {{/if}}\n        </div>\n      </div>\n    </div>\n`;\n\n// Set visualizer\npm.visualizer.set(template, {\n    // Pass the response body parsed as JSON as `data`\n    response: pm.response.json()\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : "https://public.richdataservices.com/rds/api/catalog/ca/pumf_cchs_2017",
        "method" : "GET",
        "description" : {
          "content" : "This request returns the data product from the RDS API. It contains descriptive properties such as the data product name, label, description, a citation of the source of the data, provenance information, when the product was last updated, and any additional notes that may be needed to further understand the data or how to use it.",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    }, {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "99da28bbe4a8900f393ea0e29ab46ae7",
      "name" : "Data Dictionary",
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "1a6c68de-4cb0-4434-ae21-8ea0321333dd",
          "type" : "text/javascript",
          "exec" : [ "var template = `\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <div class=\"rds-header\">\n        <h2 style=\"font-style: normal\">PUMF: Canadian Community Health Survey, 2017-2018: Annual Component - Dictionary</h2>\n        <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div id=\"wrapper\">\n      <div id=\"main\">\n        <div class=\"textblock\">\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Label</th>\n                <th class=\"description\">Description</th>\n                <th>Data Type</th>\n                <th>Has Classification</th>\n                <th>Is Dimension</th>\n                <th>Is Measure</th>\n              </tr>\n            </thead>\n            <tbody>\n              {{#each response}}\t\n                <tr>\n                    <td>{{{name}}}</td>\n                    <td>{{{label}}}</td>\n                    <td>{{{description}}}</td>\n                    <td>{{{dataType}}}</td>\n                    {{#if classificationUri}}\n                    <td class=\"icon-cell\"><mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">check_circle_outline</mat-icon></td>\n                    {{else}}\n                    <td></td>\n                    {{/if}}  \n                    {{#if isDimension}}\n                    <td class=\"icon-cell\"><mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">check_circle_outline</mat-icon></td>\n                    {{else}}\n                    <td></td>\n                    {{/if}}  \n                    {{#if isMeasure}}\n                    <td class=\"icon-cell\"><mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">check_circle_outline</mat-icon></td>\n                    {{else}}\n                    <td></td>\n                    {{/if}}  \n                </tr>\n                {{/each}}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n`;\n\n// Set visualizer\npm.visualizer.set(template, {\n    // Pass the response body parsed as JSON as `data`\n    response: pm.response.json()\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : "https://public.richdataservices.com/rds/api/catalog/ca/pumf_cchs_2017/variables",
        "method" : "GET",
        "description" : {
          "content" : "This request returns the data dictionary for the data product. The data dictionary is a simple listing of all the variables that make up the data product. This should include descriptive properties of each variable including its name, label, description, question text (if captured as part of a survey / questionnare) and any associated classification references. This is not meant to provide a detailed view of any particular variable, but a general overview of the variables that are available as part of the product. ",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    }, {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "0445cf9cf39aedc3a7ae1ebb49d59323",
      "name" : "Variable Details - ACC_090G",
      "description" : {
        "content" : "",
        "type" : "text/markdown"
      },
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "d1cc63bb-c592-40fe-a9b5-722a76e96e4c",
          "type" : "text/javascript",
          "exec" : [ "// get the variable from the postman response\nvar variable = pm.response.json();\n\n// get the frequencies formatted for amcharts\nvar frequencies = [];\nif (variable.frequencies !== undefined) {\n  var frequencySet = variable.frequencies.sets[0];\n  for (const [key, value] of Object.entries(frequencySet.map)) {\n    var entry = {\n      key: key,\n      value: value\n    };\n    frequencies.push(entry);\n  }\n}\n\n// get the populate vs missing values formatted for am charts\nvar populated = [];\nif (variable.summaryStatistics !== undefined) {\n  var statisticSet = variable.summaryStatistics.sets[0];\n  // populated entry\n  populated.push({\n    key: \"Populated\",\n    value: statisticSet.populated\n  });\n  // missing entry\n  populated.push({\n    key: \"Missing\",\n    value: statisticSet.missing\n  });\n}\n\n\nvar template = `\n    <link\n      rel=\"stylesheet\"\n      href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\"\n    />\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <link\n      href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\"\n    />\n    <style>\n      #frequencyChart {\n        width: 100%;\n        height: 275px;\n      }\n      #populatedChart {\n        width: 100%;\n        height: 100px;\n      }\n    </style>\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/core.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/charts.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/themes/animated.js\"></script>\n    <script>\n      pm.getData( function (error, data) {\n      // Themes begin\n      am4core.useTheme(am4themes_animated);\n      // Themes end\n\n      am4core.ready(function () {\n        // Create Populated / Missing Chart\n        var popChart = am4core.create(\"populatedChart\", am4charts.XYChart);\n\n        // Add data\n        popChart.data = data.populated;\n\n        // Create axes\n        var populatedCategoryAxis = popChart.yAxes.push(new am4charts.CategoryAxis());\n        populatedCategoryAxis.dataFields.category = \"key\";\n        populatedCategoryAxis.renderer.grid.template.location = 0;\n        populatedCategoryAxis.renderer.minGridDistance = 30;\n        var populatedValueAxis = popChart.xAxes.push(new am4charts.ValueAxis());\n\n        // Create series\n        var populatedSeries = popChart.series.push(new am4charts.ColumnSeries());\n        populatedSeries.columns.template.width = am4core.percent(20);\n        populatedSeries.dataFields.valueX = \"value\";\n        populatedSeries.dataFields.categoryY = \"key\";\n        populatedSeries.name = \"Populated and Missing\";\n        populatedSeries.columns.template.tooltipText = \"{categoryY}: [bold]{valueX}[/]\";\n        populatedSeries.columns.template.fillOpacity = 0.8;\n\n        // Create Frequency Chart\n        var chart = am4core.create(\"frequencyChart\", am4charts.XYChart);\n\n        // Add data\n        chart.data = data.frequencies;\n\n        // Create axes\n        var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());\n        categoryAxis.dataFields.category = \"key\";\n        categoryAxis.renderer.grid.template.location = 0;\n        categoryAxis.renderer.minGridDistance = 30;\n        var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());\n\n        // Create series\n        var series = chart.series.push(new am4charts.ColumnSeries());\n        series.dataFields.valueX = \"value\";\n        series.dataFields.categoryY = \"key\";\n        series.name = \"Value Frequencies\";\n        series.columns.template.tooltipText = \"{categoryY}: [bold]{valueX}[/]\";\n        series.columns.template.fillOpacity = 0.8;\n\n      });\n      });\n    </script>\n    <div class=\"rds-header\">\n      <h2 style=\"font-style: normal; font\">{{response.label}}</h2>\n      <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div style=\"margin: 32px\">\n      <h4>Details</h4>\n      {{#if response.label}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">short_text</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Label</h3>\n          <p id=\"variable-label\">{{{response.label}}}</p>\n        </div>\n      </div>\n      {{/if}}\n      {{#if response.description}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">notes</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Description</h3>\n          <p id=\"variable-description\">{{{response.description}}}</p>\n        </div>\n      </div>\n      {{/if}}\n      {{#if response.questionText}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">notes</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Question Text</h3>\n          <p id=\"variable-description\">{{{response.questionText}}}</p>\n        </div>\n      </div>\n      {{/if}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">storage</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Data Type</h3>\n          <p id=\"variable-type\">{{response.dataType}}</p>\n        </div>\n      </div>\n      <div style=\"margin-top: 32px\">\n        {{#if response.summaryStatistics}}\n        <div>\n          <div>\n            <h4>Populated and Missing</h4>\n            <div id=\"populatedChart\"></div>\n          </div> \n        </div>\n        {{/if}}\n        {{#if response.frequencies}}\n        <div>\n          <div>\n            <h4>Value Frequencies</h4>\n            <div id=\"frequencyChart\"></div>\n          </div>\n        </div>\n        {{/if}}\n      </div>\n    </div>\n`;\n\nconsole.log(frequencies)\n// Set visualizer\npm.visualizer.set(template, {\n  // Pass the response body parsed as JSON as `data`\n  response: pm.response.json(),\n  frequencies: frequencies,\n  populated: populated\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : "https://public.richdataservices.com/rds/api/catalog/ca/pumf_cchs_2017/variable/ACC_090G",
        "method" : "GET",
        "description" : {
          "content" : "This request returns detailed variable information for **ACC_090G**. The variable ID or URI can be used in the path to get the details for any variable in the data product.",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    }, {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "d8632cdd3defca64d602a04ac04829b3",
      "name" : "Select All",
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "9de9f018-9721-457d-9e99-b2a1230030de",
          "type" : "text/javascript",
          "exec" : [ "// get the data set from the postman response\nvar dataSet = pm.response.json();\n\n// get the variable ids\nvar variableNames = [];\nvar variables = {};\nfor(i = 0; i < dataSet.recordLayout.variables.length; i++){\n  var variable = dataSet.recordLayout.variables[i];\n  variableNames.push(variable.name)\n  variables[variable.id] = variable;\n}\n\n// build up some records based on the data and metadata\nvar nameRecords = [];\nvar codeRecords = [];\nvar bothRecords = [];\nfor (i = 0; i < dataSet.records.length; i++) {\n  var record = dataSet.records[i];\n  var nameRecord = [];\n  var codeRecord = [];\n  var bothRecord = [];\n  for (d = 0; d < record.data.length; d++) {\n    var data = record.data[d];\n    var value = data.value.value;\n    var nameValue = value;\n    var codeValue = value;\n    var bothValue = value;\n    if (value !== undefined && value.codeValue !== undefined) {\n      nameValue = value.name;\n      codeValue = value.codeValue;\n      bothValue = value.codeValue + \": \" + value.name;\n    }\n    nameRecord.push(nameValue);\n    codeRecord.push(codeValue);\n    bothRecord.push(bothValue);\n  }\n  nameRecords.push(nameRecord);\n  codeRecords.push(codeRecord);\n  bothRecords.push(bothRecord);\n}\n\n\nvar template = `\n    <link\n      rel=\"stylesheet\"\n      type=\"text/css\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.css\"\n    />\n    <link\n      rel=\"stylesheet\"\n      type=\"text/css\"\n      href=\"https://cdn.datatables.net/1.10.21/css/dataTables.bootstrap4.min.css\"\n    />\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <script\n      src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"\n      integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\"\n      crossorigin=\"anonymous\"\n    ></script>\n    <script\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\"\n      integrity=\"sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49\"\n      crossorigin=\"anonymous\"\n    ></script>\n    <script\n      type=\"text/javascript\"\n      src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\"\n    ></script>\n    <script>\n      $( document ).ready(function() {\n        pm.getData( function (error, data) {\n          // initialize data table\n          var table = document.getElementById(\"data\");\n\n          var tableHeader = table.getElementsByTagName('thead')[0]\n          var headerRow = tableHeader.insertRow();\n          for(i = 0; i < data.variableNames.length; i++){\n              var newTh = document.createElement('th');\n              newTh.innerHTML=data.variableNames[i];\n              newTh.setAttribute(\"onclick\",  \"updateVariable('\"+data.variableNames[i]+\"')\")\n              headerRow.appendChild(newTh)\n          }\n\n          var tableBody = table.getElementsByTagName('tbody')[0]\n          for(i = 0; i < data.nameRecords.length; i++){\n            var record = data.nameRecords[i];\n            var newRow = tableBody.insertRow();\n            for(d = 0; d < record.length; d++){\n              var newTd = document.createElement('td');\n              newTd.innerHTML=record[d];\n              newRow.appendChild(newTd)\n            }\n          }\n\n          // initialize variable details\n          var variable = data.variables[data.variableNames[0]];\n          updateVariableTable(variable);\n        });\n      });\n\n      function updateVariable(id) {\n        pm.getData( function (error, data) {\n          console.log(id)\n          var variable = data.variables[id];\n          updateVariableTable(variable);\n        });\n      }\n\n      function updateVariableTable(variable){\n          var variableLabel = document.getElementById(\"variable-label\");\n          variableLabel.innerHTML = variable.label;\n\n          var variableDescription = document.getElementById(\"variable-description\");\n          variableDescription.innerHTML = variable.description;\n\n          var variableType = document.getElementById(\"variable-type\");\n          variableType.innerHTML = variable.dataType;\n\n\n          createVariableRow(varTableBody, \"Label\", variable.label);\n          createVariableRow(varTableBody, \"Description\", variable.description);\n          createVariableRow(varTableBody, \"Question Text\", variable.questionText);\n          createVariableRow(varTableBody, \"Data Type\", variable.dataType);\n      }\n\n      function createVariableRow(tableBody, name, value){\n        if(value !== undefined){\n            var row = tableBody.insertRow();\n            var nameTd = document.createElement('td');\n            nameTd.innerHTML=name;\n            var valueTd = document.createElement('td');\n            valueTd.innerHTML=value;\n            row.appendChild(nameTd)\n            row.appendChild(valueTd)\n          }\n      }\n\n      function updateCodes(id) {\n        pm.getData( function (error, data) {\n          // refreshes the table \n          var table = document.getElementById(\"data\");\n          while (table.rows.length > 1) {\n            table.deleteRow(1);\n          }\n\n          var records;\n          if(id === 'name'){\n            records = data.nameRecords;\n          }else if(id === 'value'){\n            records = data.codeRecords;\n          }else{\n            records = data.bothRecords;\n          }\n\n          var tableBody = table.getElementsByTagName('tbody')[0]\n          for(i = 0; i < records.length; i++){\n            var record = records[i];\n            var newRow = tableBody.insertRow();\n            for(d = 0; d < record.length; d++){\n              var newTd = document.createElement('td');\n              newTd.innerHTML=record[d];\n              newRow.appendChild(newTd)\n            }\n          }\n        });\n      }\n    </script>\n    <style type=\"text/css\">\n      .btn-group {\n        border: 1px solid rgba(0,0,0,0.12);\n        border-radius: 8px;\n        display: -ms-inline-flexbox;\n        display: inline-flex;\n        margin-top: 8px;\n        overflow: hidden;\n        position: relative;\n        width: 100%;\n        white-space: nowrap;\n      }\n      .btn-secondary,\n      .btn-secondary:active {\n        background: #fff;\n        background-color: #fff;\n        border-left: 1px solid rgba(0,0,0,0.12);\n        border-top: none;\n        border-bottom: none;\n        border-right: none;\n        box-shadow: none !important;\n        color: rgba(0,0,0,0.87);\n        font-size: 16px;\n        font-family: Roboto,Helvetica Neue,sans-serif;\n        line-height: 48px;\n        padding: 0 12px;\n        white-space: nowrap;\n        width: 34%;\n      }\n      .btn-secondary:not(:disabled):not(.disabled).active,\n      .btn-secondary:not(:disabled):not(.disabled).active:active{\n        background-color: #e0e0e0;\n        border: 1px solid #e0e0e0;\n        color: rgba(0,0,0,0.87);\n      }\n      .btn-secondary:hover {\n        background-color: #ededed;\n        border-top: none;\n        border-bottom: none;\n        border-left: 1px solid rgba(0,0,0,.12);\n        border-right: none;\n        color: rgba(0,0,0,0.87); \n      }\n      .code-display-controls {\n        margin-right: 0;\n        width: 100%;\n      }\n      .content-container {\n        display:flex;\n        flex-direction: row;\n        padding: 10px;\n      }\n      h4 {\n        font-family: Roboto, sans-serif;\n        font-size: 12px;\n        font-weight: 400;\n        height: 13px;\n        letter-spacing: 1px;\n        line-height: 13px;\n        margin: 0;\n        text-transform: uppercase;\n      }\n      th {\n        cursor: pointer;\n      }\n      .table-information {\n        display: flex;\n        flex-direction: column;\n        margin-right: 32px;\n        margin-top: 24px;\n        min-width: 25%; \n        width: 25%;\n      }\n      @media screen and (max-width: 950px) {\n        .code-display-controls {\n          margin-right: 32px;\n          width: 25%;\n        }\n        .code-display-controls {\n          margin: 16px 0;\n          width: 100%;\n        }\n        .content-container {\n          flex-direction: column;\n        }\n        .table-information {\n          align-items: left;\n          flex-direction: column-reverse;\n          justify-content: space-around;\n          width: 100%;\n        }\n      }\n    </style>\n    <div class=\"rds-header\">\n      <h2 style=\"font-style: normal; font\">Data Explorer</h2>\n      <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div class=\"content-container\">\n      <div class=\"table-information\">\n        <div class=\"code-display-controls\">\n          <h4>Code Display</h4>\n          <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n            <label class=\"btn btn-secondary active\" \n            onclick=\"updateCodes('name')\">\n              <input\n                type=\"radio\"\n                name=\"options\"\n                id=\"codeName\"\n                autocomplete=\"off\"\n                checked\n              />\n              Name\n            </label>\n            <label class=\"btn btn-secondary\" onclick=\"updateCodes('value')\">\n              <input\n                type=\"radio\"\n                name=\"options\"\n                id=\"codeValue\"\n                autocomplete=\"off\"\n              />\n              Value\n            </label>\n            <label class=\"btn btn-secondary\" onclick=\"updateCodes('both')\">\n              <input\n                type=\"radio\"\n                name=\"options\"\n                id=\"both\"\n                autocomplete=\"off\"\n              />\n              Both\n            </label>\n          </div>\n        </div>\n        <div>\n          <br/>\n          <h4>Variable Details</h4>\n          <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n            <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">short_text</mat-icon>\n            <div sytle=\"display:flex; flex-direction: column;\">\n              <h3>Label</h3>\n              <p id=\"variable-label\"></p>\n            </div>\n          </div>\n          <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n            <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">notes</mat-icon>\n            <div sytle=\"display:flex; flex-direction: column;\">\n              <h3>Description</h3>\n              <p id=\"variable-description\"></p>\n            </div>\n          </div>\n          <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n            <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">storage</mat-icon>\n            <div sytle=\"display:flex; flex-direction: column;\">\n              <h3>Data Type</h3>\n              <p id=\"variable-type\"></p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <table\n        id=\"data\"\n        style=\"width: 100%;\">\n          <thead>\n          </thead>\n          <tbody>\n          </tbody>\n      </table>\n    </div>\n`;\n\n// Set visualizer\npm.visualizer.set(template, {\n  // Pass the response body parsed as JSON as `data`\n  response: pm.response.json(),\n  variableNames: variableNames,\n  nameRecords: nameRecords,\n  codeRecords: codeRecords,\n  bothRecords: bothRecords,\n  variables: variables\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : {"protocol":"https","host":"public.richdataservices.com","path":"/rds/api/query/ca/pumf_cchs_2017/select","query":[{"key":"format","value":"MTNA","disabled":false,"description":{"content":"We will use the MTNA format for our response, this will include the variable metadata in the response. In addition, when combined with the inject parameter the records will contain code objects which will allow us to toggle between the code name, value, or both.","type":"text/markdown"}},{"key":"inject","disabled":false,"description":{"content":"Including the inject flag will specify that the raw values should be replaced with their codes if there are any associated with that value. In the MTNA format that we are using this will result in the code object being returned. In simpler formats the code name will be returned in place of the code value.","type":"text/markdown"}},{"key":"limit","value":"25","disabled":false,"description":{"content":"This will limit the number of rows returned.","type":"text/markdown"}},{"key":"collimit","value":"25","disabled":false,"description":{"content":"This will limit the number of columns returned.","type":"text/markdown"}}],"variable":[]},
        "method" : "GET",
        "description" : {
          "content" : "This query will select the first 25 variables and 25 records in the data product as a basic example of querying records. For a complete list of available parameters, please reference the <a href=\"https://documenter.getpostman.com/view/2220438/SzS5umZ3?version=latest#b11de492-633b-49cb-a422-47b90c0810dd\" target=\"_blank\">select query documentation</a>.",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    } ],
    "event" : [ ]
  }, {
    "@class" : "us.mtna.postman.model.ItemGroup",
    "name" : "PUMF: Impacts of COVID-19, 2020:  Mental Health (ICC-MH): Crowdsource file",
    "description" : {
      "content" : "## Overview \n\n<p>The data collection series Crowdsourcing: Impacts of COVID-19 on Canadians is designed to assess the quality and viability of a more timely collection model using willing participants and web-only collection. The Crowdsourcing: Impacts of COVID-19 on Canadians - Your Mental Health is the second iteration in the continuing series of crowdsourcing cycles. The overall goal of the crowdsourcing initiative is to invite all members of the Canadian population to participate in a data collection exercise on a voluntary basis. The main topic of this second crowdsourcing was to determine how Canadians are reacting to the COVID-19 crisis and the impact it has had on their mental health.</p><p>In the context of this product, the term crowdsourcing refers to the process of collecting information via an online questionnaire.</p>\n\n## Citation \n\nICC 2020:  Mental Health (ICC-MH): Crowdsource file [Public use microdata file] Ottawa, Ontario: Statistics Canada [producer] Ottawa, Ontario: Data Liberation Initiative, Statistics Canada [distributor].\n\n## Provenance \n\nThis data product and metadata is sourced from CSV, DDI, and documentation files made available by <a href='https://odesi.ca/' target='_blank'>ODESI</a> and the <a href='https://www.statcan.gc.ca/eng/dli/dli' target='_blank'>Data Liberation Initative</a>.\n\n## RDS User Interfaces\n\nWant to play with the data before diving into the API? Try out some of our data exploration tools that were built entirely off the API to see what it's capable of.\n* The data and metadata can be explored using the [RDS Explorer](https://public.richdataservices.com/rds-explorer/explore/ca/pumf_icc_mh_2020/data).\n* The data can be tabulated using the [RDS TabEngine](https://public.richdataservices.com/rds-tabengine/analysis/ca/pumf_icc_mh_2020/custom-tables).\n",
      "type" : "text/markdown"
    },
    "variable" : [ ],
    "item" : [ {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "0921dcd9fc58d7476934f49c14eebd33",
      "name" : "Data Product Overview",
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "ba8cd1c7-3f0e-4653-ad99-e64e63574845",
          "type" : "text/javascript",
          "exec" : [ "var template = `\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <style type=\"text/css\">\n        .information-label {\n            color: rgba(0,0,0,0.54);\n            font-family: Roboto, sans-serif;\n            font-size: .75em;\n            font-style: normal;\n            font-weight: 900;\n            letter-spacing: 1px;\n            margin-top: 16px;\n            text-transform: uppercase;\n        }\n        .item-id {\n            color: rgba(0,0,0,0.54);\n            font-family: 'Roboto Mono', monospace;\n        }\n    </style>\n    <div class=\"rds-header\">\n        <h2 style=\"font-style: normal\">Data Product</h2>\n        <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div id=\"wrapper\">\n      <div id=\"main\">\n        <br />\n        <div class=\"textblock\">\n          <h3 id=\"startcontent\">\n            {{response.name}} <span class=\"item-id\">[{{response.id}}]</span>\n          </h3>\n\n          {{#if response.description}}\n          <h4 class=\"information-label\">Description</h4>\n          <div style=\"padding-left: 1.5%;\" class=\"product-information\"> \n            {{{response.description}}} \n          </div>\n          {{/if}}\n          {{#if response.citation}}\n          <h4 class=\"information-label\">Citation</h4>\n          <div style=\"padding-left: 1.5%;\" class=\"product-information\">\n            {{{response.citation}}}\n          </div>\n          {{/if}}\n          {{#if response.provenance}}\n          <h4 class=\"information-label\">Provenance</h4>\n          <div style=\"padding-left: 1.5%;\" class=\"product-information\">\n            {{{response.provenance}}}\n          </div>\n          {{/if}}\n          {{#if response.note}}\n          <h4 class=\"information-label\">Notes</h4>\n          <div id=\"notes\" style=\"padding-left: 1.5%;\" class=\"product-information\">\n            {{{response.note}}}\n          </div>\n          {{/if}}\n        </div>\n      </div>\n    </div>\n`;\n\n// Set visualizer\npm.visualizer.set(template, {\n    // Pass the response body parsed as JSON as `data`\n    response: pm.response.json()\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : "https://public.richdataservices.com/rds/api/catalog/ca/pumf_icc_mh_2020",
        "method" : "GET",
        "description" : {
          "content" : "This request returns the data product from the RDS API. It contains descriptive properties such as the data product name, label, description, a citation of the source of the data, provenance information, when the product was last updated, and any additional notes that may be needed to further understand the data or how to use it.",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    }, {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "9a4c8f9820a4cecb9b22ff2946881dd1",
      "name" : "Data Dictionary",
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "2eb408be-9ea0-4e8a-a980-2eb67e4de0ce",
          "type" : "text/javascript",
          "exec" : [ "var template = `\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <div class=\"rds-header\">\n        <h2 style=\"font-style: normal\">PUMF: Impacts of COVID-19, 2020:  Mental Health (ICC-MH): Crowdsource file - Dictionary</h2>\n        <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div id=\"wrapper\">\n      <div id=\"main\">\n        <div class=\"textblock\">\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Label</th>\n                <th class=\"description\">Description</th>\n                <th>Data Type</th>\n                <th>Has Classification</th>\n                <th>Is Dimension</th>\n                <th>Is Measure</th>\n              </tr>\n            </thead>\n            <tbody>\n              {{#each response}}\t\n                <tr>\n                    <td>{{{name}}}</td>\n                    <td>{{{label}}}</td>\n                    <td>{{{description}}}</td>\n                    <td>{{{dataType}}}</td>\n                    {{#if classificationUri}}\n                    <td class=\"icon-cell\"><mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">check_circle_outline</mat-icon></td>\n                    {{else}}\n                    <td></td>\n                    {{/if}}  \n                    {{#if isDimension}}\n                    <td class=\"icon-cell\"><mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">check_circle_outline</mat-icon></td>\n                    {{else}}\n                    <td></td>\n                    {{/if}}  \n                    {{#if isMeasure}}\n                    <td class=\"icon-cell\"><mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">check_circle_outline</mat-icon></td>\n                    {{else}}\n                    <td></td>\n                    {{/if}}  \n                </tr>\n                {{/each}}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n`;\n\n// Set visualizer\npm.visualizer.set(template, {\n    // Pass the response body parsed as JSON as `data`\n    response: pm.response.json()\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : "https://public.richdataservices.com/rds/api/catalog/ca/pumf_icc_mh_2020/variables",
        "method" : "GET",
        "description" : {
          "content" : "This request returns the data dictionary for the data product. The data dictionary is a simple listing of all the variables that make up the data product. This should include descriptive properties of each variable including its name, label, description, question text (if captured as part of a survey / questionnare) and any associated classification references. This is not meant to provide a detailed view of any particular variable, but a general overview of the variables that are available as part of the product. ",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    }, {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "2ec3f231d061c2be8df6be1f5ede12c8",
      "name" : "Variable Details - PLM_40",
      "description" : {
        "content" : "",
        "type" : "text/markdown"
      },
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "a33ed609-1634-4f3c-a9de-1c42dcf8c5cb",
          "type" : "text/javascript",
          "exec" : [ "// get the variable from the postman response\nvar variable = pm.response.json();\n\n// get the frequencies formatted for amcharts\nvar frequencies = [];\nif (variable.frequencies !== undefined) {\n  var frequencySet = variable.frequencies.sets[0];\n  for (const [key, value] of Object.entries(frequencySet.map)) {\n    var entry = {\n      key: key,\n      value: value\n    };\n    frequencies.push(entry);\n  }\n}\n\n// get the populate vs missing values formatted for am charts\nvar populated = [];\nif (variable.summaryStatistics !== undefined) {\n  var statisticSet = variable.summaryStatistics.sets[0];\n  // populated entry\n  populated.push({\n    key: \"Populated\",\n    value: statisticSet.populated\n  });\n  // missing entry\n  populated.push({\n    key: \"Missing\",\n    value: statisticSet.missing\n  });\n}\n\n\nvar template = `\n    <link\n      rel=\"stylesheet\"\n      href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\"\n    />\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <link\n      href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\"\n    />\n    <style>\n      #frequencyChart {\n        width: 100%;\n        height: 275px;\n      }\n      #populatedChart {\n        width: 100%;\n        height: 100px;\n      }\n    </style>\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/core.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/charts.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/themes/animated.js\"></script>\n    <script>\n      pm.getData( function (error, data) {\n      // Themes begin\n      am4core.useTheme(am4themes_animated);\n      // Themes end\n\n      am4core.ready(function () {\n        // Create Populated / Missing Chart\n        var popChart = am4core.create(\"populatedChart\", am4charts.XYChart);\n\n        // Add data\n        popChart.data = data.populated;\n\n        // Create axes\n        var populatedCategoryAxis = popChart.yAxes.push(new am4charts.CategoryAxis());\n        populatedCategoryAxis.dataFields.category = \"key\";\n        populatedCategoryAxis.renderer.grid.template.location = 0;\n        populatedCategoryAxis.renderer.minGridDistance = 30;\n        var populatedValueAxis = popChart.xAxes.push(new am4charts.ValueAxis());\n\n        // Create series\n        var populatedSeries = popChart.series.push(new am4charts.ColumnSeries());\n        populatedSeries.columns.template.width = am4core.percent(20);\n        populatedSeries.dataFields.valueX = \"value\";\n        populatedSeries.dataFields.categoryY = \"key\";\n        populatedSeries.name = \"Populated and Missing\";\n        populatedSeries.columns.template.tooltipText = \"{categoryY}: [bold]{valueX}[/]\";\n        populatedSeries.columns.template.fillOpacity = 0.8;\n\n        // Create Frequency Chart\n        var chart = am4core.create(\"frequencyChart\", am4charts.XYChart);\n\n        // Add data\n        chart.data = data.frequencies;\n\n        // Create axes\n        var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());\n        categoryAxis.dataFields.category = \"key\";\n        categoryAxis.renderer.grid.template.location = 0;\n        categoryAxis.renderer.minGridDistance = 30;\n        var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());\n\n        // Create series\n        var series = chart.series.push(new am4charts.ColumnSeries());\n        series.dataFields.valueX = \"value\";\n        series.dataFields.categoryY = \"key\";\n        series.name = \"Value Frequencies\";\n        series.columns.template.tooltipText = \"{categoryY}: [bold]{valueX}[/]\";\n        series.columns.template.fillOpacity = 0.8;\n\n      });\n      });\n    </script>\n    <div class=\"rds-header\">\n      <h2 style=\"font-style: normal; font\">{{response.label}}</h2>\n      <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div style=\"margin: 32px\">\n      <h4>Details</h4>\n      {{#if response.label}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">short_text</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Label</h3>\n          <p id=\"variable-label\">{{{response.label}}}</p>\n        </div>\n      </div>\n      {{/if}}\n      {{#if response.description}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">notes</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Description</h3>\n          <p id=\"variable-description\">{{{response.description}}}</p>\n        </div>\n      </div>\n      {{/if}}\n      {{#if response.questionText}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">notes</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Question Text</h3>\n          <p id=\"variable-description\">{{{response.questionText}}}</p>\n        </div>\n      </div>\n      {{/if}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">storage</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Data Type</h3>\n          <p id=\"variable-type\">{{response.dataType}}</p>\n        </div>\n      </div>\n      <div style=\"margin-top: 32px\">\n        {{#if response.summaryStatistics}}\n        <div>\n          <div>\n            <h4>Populated and Missing</h4>\n            <div id=\"populatedChart\"></div>\n          </div> \n        </div>\n        {{/if}}\n        {{#if response.frequencies}}\n        <div>\n          <div>\n            <h4>Value Frequencies</h4>\n            <div id=\"frequencyChart\"></div>\n          </div>\n        </div>\n        {{/if}}\n      </div>\n    </div>\n`;\n\nconsole.log(frequencies)\n// Set visualizer\npm.visualizer.set(template, {\n  // Pass the response body parsed as JSON as `data`\n  response: pm.response.json(),\n  frequencies: frequencies,\n  populated: populated\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : "https://public.richdataservices.com/rds/api/catalog/ca/pumf_icc_mh_2020/variable/PLM_40",
        "method" : "GET",
        "description" : {
          "content" : "This request returns detailed variable information for **PLM_40**. The variable ID or URI can be used in the path to get the details for any variable in the data product.",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    }, {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "4559377979f85cc743a331259524f492",
      "name" : "Select All",
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "a4ce5bb2-99e0-41fb-8463-34ae0ade388e",
          "type" : "text/javascript",
          "exec" : [ "// get the data set from the postman response\nvar dataSet = pm.response.json();\n\n// get the variable ids\nvar variableNames = [];\nvar variables = {};\nfor(i = 0; i < dataSet.recordLayout.variables.length; i++){\n  var variable = dataSet.recordLayout.variables[i];\n  variableNames.push(variable.name)\n  variables[variable.id] = variable;\n}\n\n// build up some records based on the data and metadata\nvar nameRecords = [];\nvar codeRecords = [];\nvar bothRecords = [];\nfor (i = 0; i < dataSet.records.length; i++) {\n  var record = dataSet.records[i];\n  var nameRecord = [];\n  var codeRecord = [];\n  var bothRecord = [];\n  for (d = 0; d < record.data.length; d++) {\n    var data = record.data[d];\n    var value = data.value.value;\n    var nameValue = value;\n    var codeValue = value;\n    var bothValue = value;\n    if (value !== undefined && value.codeValue !== undefined) {\n      nameValue = value.name;\n      codeValue = value.codeValue;\n      bothValue = value.codeValue + \": \" + value.name;\n    }\n    nameRecord.push(nameValue);\n    codeRecord.push(codeValue);\n    bothRecord.push(bothValue);\n  }\n  nameRecords.push(nameRecord);\n  codeRecords.push(codeRecord);\n  bothRecords.push(bothRecord);\n}\n\n\nvar template = `\n    <link\n      rel=\"stylesheet\"\n      type=\"text/css\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.css\"\n    />\n    <link\n      rel=\"stylesheet\"\n      type=\"text/css\"\n      href=\"https://cdn.datatables.net/1.10.21/css/dataTables.bootstrap4.min.css\"\n    />\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <script\n      src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"\n      integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\"\n      crossorigin=\"anonymous\"\n    ></script>\n    <script\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\"\n      integrity=\"sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49\"\n      crossorigin=\"anonymous\"\n    ></script>\n    <script\n      type=\"text/javascript\"\n      src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\"\n    ></script>\n    <script>\n      $( document ).ready(function() {\n        pm.getData( function (error, data) {\n          // initialize data table\n          var table = document.getElementById(\"data\");\n\n          var tableHeader = table.getElementsByTagName('thead')[0]\n          var headerRow = tableHeader.insertRow();\n          for(i = 0; i < data.variableNames.length; i++){\n              var newTh = document.createElement('th');\n              newTh.innerHTML=data.variableNames[i];\n              newTh.setAttribute(\"onclick\",  \"updateVariable('\"+data.variableNames[i]+\"')\")\n              headerRow.appendChild(newTh)\n          }\n\n          var tableBody = table.getElementsByTagName('tbody')[0]\n          for(i = 0; i < data.nameRecords.length; i++){\n            var record = data.nameRecords[i];\n            var newRow = tableBody.insertRow();\n            for(d = 0; d < record.length; d++){\n              var newTd = document.createElement('td');\n              newTd.innerHTML=record[d];\n              newRow.appendChild(newTd)\n            }\n          }\n\n          // initialize variable details\n          var variable = data.variables[data.variableNames[0]];\n          updateVariableTable(variable);\n        });\n      });\n\n      function updateVariable(id) {\n        pm.getData( function (error, data) {\n          console.log(id)\n          var variable = data.variables[id];\n          updateVariableTable(variable);\n        });\n      }\n\n      function updateVariableTable(variable){\n          var variableLabel = document.getElementById(\"variable-label\");\n          variableLabel.innerHTML = variable.label;\n\n          var variableDescription = document.getElementById(\"variable-description\");\n          variableDescription.innerHTML = variable.description;\n\n          var variableType = document.getElementById(\"variable-type\");\n          variableType.innerHTML = variable.dataType;\n\n\n          createVariableRow(varTableBody, \"Label\", variable.label);\n          createVariableRow(varTableBody, \"Description\", variable.description);\n          createVariableRow(varTableBody, \"Question Text\", variable.questionText);\n          createVariableRow(varTableBody, \"Data Type\", variable.dataType);\n      }\n\n      function createVariableRow(tableBody, name, value){\n        if(value !== undefined){\n            var row = tableBody.insertRow();\n            var nameTd = document.createElement('td');\n            nameTd.innerHTML=name;\n            var valueTd = document.createElement('td');\n            valueTd.innerHTML=value;\n            row.appendChild(nameTd)\n            row.appendChild(valueTd)\n          }\n      }\n\n      function updateCodes(id) {\n        pm.getData( function (error, data) {\n          // refreshes the table \n          var table = document.getElementById(\"data\");\n          while (table.rows.length > 1) {\n            table.deleteRow(1);\n          }\n\n          var records;\n          if(id === 'name'){\n            records = data.nameRecords;\n          }else if(id === 'value'){\n            records = data.codeRecords;\n          }else{\n            records = data.bothRecords;\n          }\n\n          var tableBody = table.getElementsByTagName('tbody')[0]\n          for(i = 0; i < records.length; i++){\n            var record = records[i];\n            var newRow = tableBody.insertRow();\n            for(d = 0; d < record.length; d++){\n              var newTd = document.createElement('td');\n              newTd.innerHTML=record[d];\n              newRow.appendChild(newTd)\n            }\n          }\n        });\n      }\n    </script>\n    <style type=\"text/css\">\n      .btn-group {\n        border: 1px solid rgba(0,0,0,0.12);\n        border-radius: 8px;\n        display: -ms-inline-flexbox;\n        display: inline-flex;\n        margin-top: 8px;\n        overflow: hidden;\n        position: relative;\n        width: 100%;\n        white-space: nowrap;\n      }\n      .btn-secondary,\n      .btn-secondary:active {\n        background: #fff;\n        background-color: #fff;\n        border-left: 1px solid rgba(0,0,0,0.12);\n        border-top: none;\n        border-bottom: none;\n        border-right: none;\n        box-shadow: none !important;\n        color: rgba(0,0,0,0.87);\n        font-size: 16px;\n        font-family: Roboto,Helvetica Neue,sans-serif;\n        line-height: 48px;\n        padding: 0 12px;\n        white-space: nowrap;\n        width: 34%;\n      }\n      .btn-secondary:not(:disabled):not(.disabled).active,\n      .btn-secondary:not(:disabled):not(.disabled).active:active{\n        background-color: #e0e0e0;\n        border: 1px solid #e0e0e0;\n        color: rgba(0,0,0,0.87);\n      }\n      .btn-secondary:hover {\n        background-color: #ededed;\n        border-top: none;\n        border-bottom: none;\n        border-left: 1px solid rgba(0,0,0,.12);\n        border-right: none;\n        color: rgba(0,0,0,0.87); \n      }\n      .code-display-controls {\n        margin-right: 0;\n        width: 100%;\n      }\n      .content-container {\n        display:flex;\n        flex-direction: row;\n        padding: 10px;\n      }\n      h4 {\n        font-family: Roboto, sans-serif;\n        font-size: 12px;\n        font-weight: 400;\n        height: 13px;\n        letter-spacing: 1px;\n        line-height: 13px;\n        margin: 0;\n        text-transform: uppercase;\n      }\n      th {\n        cursor: pointer;\n      }\n      .table-information {\n        display: flex;\n        flex-direction: column;\n        margin-right: 32px;\n        margin-top: 24px;\n        min-width: 25%; \n        width: 25%;\n      }\n      @media screen and (max-width: 950px) {\n        .code-display-controls {\n          margin-right: 32px;\n          width: 25%;\n        }\n        .code-display-controls {\n          margin: 16px 0;\n          width: 100%;\n        }\n        .content-container {\n          flex-direction: column;\n        }\n        .table-information {\n          align-items: left;\n          flex-direction: column-reverse;\n          justify-content: space-around;\n          width: 100%;\n        }\n      }\n    </style>\n    <div class=\"rds-header\">\n      <h2 style=\"font-style: normal; font\">Data Explorer</h2>\n      <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div class=\"content-container\">\n      <div class=\"table-information\">\n        <div class=\"code-display-controls\">\n          <h4>Code Display</h4>\n          <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n            <label class=\"btn btn-secondary active\" \n            onclick=\"updateCodes('name')\">\n              <input\n                type=\"radio\"\n                name=\"options\"\n                id=\"codeName\"\n                autocomplete=\"off\"\n                checked\n              />\n              Name\n            </label>\n            <label class=\"btn btn-secondary\" onclick=\"updateCodes('value')\">\n              <input\n                type=\"radio\"\n                name=\"options\"\n                id=\"codeValue\"\n                autocomplete=\"off\"\n              />\n              Value\n            </label>\n            <label class=\"btn btn-secondary\" onclick=\"updateCodes('both')\">\n              <input\n                type=\"radio\"\n                name=\"options\"\n                id=\"both\"\n                autocomplete=\"off\"\n              />\n              Both\n            </label>\n          </div>\n        </div>\n        <div>\n          <br/>\n          <h4>Variable Details</h4>\n          <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n            <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">short_text</mat-icon>\n            <div sytle=\"display:flex; flex-direction: column;\">\n              <h3>Label</h3>\n              <p id=\"variable-label\"></p>\n            </div>\n          </div>\n          <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n            <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">notes</mat-icon>\n            <div sytle=\"display:flex; flex-direction: column;\">\n              <h3>Description</h3>\n              <p id=\"variable-description\"></p>\n            </div>\n          </div>\n          <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n            <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">storage</mat-icon>\n            <div sytle=\"display:flex; flex-direction: column;\">\n              <h3>Data Type</h3>\n              <p id=\"variable-type\"></p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <table\n        id=\"data\"\n        style=\"width: 100%;\">\n          <thead>\n          </thead>\n          <tbody>\n          </tbody>\n      </table>\n    </div>\n`;\n\n// Set visualizer\npm.visualizer.set(template, {\n  // Pass the response body parsed as JSON as `data`\n  response: pm.response.json(),\n  variableNames: variableNames,\n  nameRecords: nameRecords,\n  codeRecords: codeRecords,\n  bothRecords: bothRecords,\n  variables: variables\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : {"protocol":"https","host":"public.richdataservices.com","path":"/rds/api/query/ca/pumf_icc_mh_2020/select","query":[{"key":"format","value":"MTNA","disabled":false,"description":{"content":"We will use the MTNA format for our response, this will include the variable metadata in the response. In addition, when combined with the inject parameter the records will contain code objects which will allow us to toggle between the code name, value, or both.","type":"text/markdown"}},{"key":"inject","disabled":false,"description":{"content":"Including the inject flag will specify that the raw values should be replaced with their codes if there are any associated with that value. In the MTNA format that we are using this will result in the code object being returned. In simpler formats the code name will be returned in place of the code value.","type":"text/markdown"}},{"key":"limit","value":"25","disabled":false,"description":{"content":"This will limit the number of rows returned.","type":"text/markdown"}},{"key":"collimit","value":"25","disabled":false,"description":{"content":"This will limit the number of columns returned.","type":"text/markdown"}}],"variable":[]},
        "method" : "GET",
        "description" : {
          "content" : "This query will select the first 25 variables and 25 records in the data product as a basic example of querying records. For a complete list of available parameters, please reference the <a href=\"https://documenter.getpostman.com/view/2220438/SzS5umZ3?version=latest#b11de492-633b-49cb-a422-47b90c0810dd\" target=\"_blank\">select query documentation</a>.",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    } ],
    "event" : [ ]
  }, {
    "@class" : "us.mtna.postman.model.ItemGroup",
    "name" : "PUMF: Labour Force Survey (2018-01 to Latest)",
    "description" : {
      "content" : "## Overview \n\nThe Labour Force Survey provides estimates of employment and unemployment which are among the timeliest and important measures of performance of the Canadian economy. With the release of the survey results only 10 days after the completion of data collection, the LFS estimates are the first of the major monthly economic data series to be released. The Canadian Labour Force Survey was developed following the Second World War to satisfy a need for reliable and timely data on the labour market. Information was urgently required on the massive labour market changes involved in the transition from a war to a peace-time economy. The main objective of the LFS is to divide the working-age population into three mutually exclusive classifications - employed, unemployed, and not in the labour force - and to provide descriptive and explanatory data on each of these. LFS data are used to produce the well-known unemployment rate as well as other standard labour market indicators such as the employment rate and the participation rate. The LFS also provides employment estimates by industry, occupation, public and private sector, hours worked and much more, all cross-classifiable by a variety of demographic characteristics. Estimates are produced for Canada, the provinces, the territories and a large number of sub-provincial regions. For employees, wage rates, union status, job permanency and workplace size are also produced. These data are used by different levels of government for evaluation and planning of employment programs in Canada. Regional unemployment rates are used by Employment and Social Development Canada to determine eligibility, level and duration of insurance benefits for persons living within a particular employment insurance region. The data are also used by labour market analysts, economists, consultants, planners, forecasters and academics in both the private and public sector.\n\n## Citation \n\nStatistics Canada. 2020. Labour Force Surveys 2018-2020 [Canada] [public-use microdata file]. Ottawa, Ontario: Statistics Canada. Labour Statistics Division [producer and distributor].\n\n## Provenance \n\nThis data product and metadata is sourced from CSV, DDI, and documentation files made available by <a href='https://odesi.ca/' target='_blank'>ODESI</a> and the <a href='https://www.statcan.gc.ca/eng/dli/dli' target='_blank'>Data Liberation Initative</a>.\n\n## RDS User Interfaces\n\nWant to play with the data before diving into the API? Try out some of our data exploration tools that were built entirely off the API to see what it's capable of.\n* The data and metadata can be explored using the [RDS Explorer](https://public.richdataservices.com/rds-explorer/explore/ca/pumf_lfs/data).\n* The data can be tabulated using the [RDS TabEngine](https://public.richdataservices.com/rds-tabengine/analysis/ca/pumf_lfs/custom-tables).\n",
      "type" : "text/markdown"
    },
    "variable" : [ ],
    "item" : [ {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "2192fc5c8934bea3a66e664c20f65940",
      "name" : "Data Product Overview",
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "75d1dddf-1c10-4983-a111-cba11e1dbc64",
          "type" : "text/javascript",
          "exec" : [ "var template = `\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <style type=\"text/css\">\n        .information-label {\n            color: rgba(0,0,0,0.54);\n            font-family: Roboto, sans-serif;\n            font-size: .75em;\n            font-style: normal;\n            font-weight: 900;\n            letter-spacing: 1px;\n            margin-top: 16px;\n            text-transform: uppercase;\n        }\n        .item-id {\n            color: rgba(0,0,0,0.54);\n            font-family: 'Roboto Mono', monospace;\n        }\n    </style>\n    <div class=\"rds-header\">\n        <h2 style=\"font-style: normal\">Data Product</h2>\n        <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div id=\"wrapper\">\n      <div id=\"main\">\n        <br />\n        <div class=\"textblock\">\n          <h3 id=\"startcontent\">\n            {{response.name}} <span class=\"item-id\">[{{response.id}}]</span>\n          </h3>\n\n          {{#if response.description}}\n          <h4 class=\"information-label\">Description</h4>\n          <div style=\"padding-left: 1.5%;\" class=\"product-information\"> \n            {{{response.description}}} \n          </div>\n          {{/if}}\n          {{#if response.citation}}\n          <h4 class=\"information-label\">Citation</h4>\n          <div style=\"padding-left: 1.5%;\" class=\"product-information\">\n            {{{response.citation}}}\n          </div>\n          {{/if}}\n          {{#if response.provenance}}\n          <h4 class=\"information-label\">Provenance</h4>\n          <div style=\"padding-left: 1.5%;\" class=\"product-information\">\n            {{{response.provenance}}}\n          </div>\n          {{/if}}\n          {{#if response.note}}\n          <h4 class=\"information-label\">Notes</h4>\n          <div id=\"notes\" style=\"padding-left: 1.5%;\" class=\"product-information\">\n            {{{response.note}}}\n          </div>\n          {{/if}}\n        </div>\n      </div>\n    </div>\n`;\n\n// Set visualizer\npm.visualizer.set(template, {\n    // Pass the response body parsed as JSON as `data`\n    response: pm.response.json()\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : "https://public.richdataservices.com/rds/api/catalog/ca/pumf_lfs",
        "method" : "GET",
        "description" : {
          "content" : "This request returns the data product from the RDS API. It contains descriptive properties such as the data product name, label, description, a citation of the source of the data, provenance information, when the product was last updated, and any additional notes that may be needed to further understand the data or how to use it.",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    }, {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "cad986ef57d4ff892ddba82479156722",
      "name" : "Data Dictionary",
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "99ef4ab8-73c6-4f3c-a3b6-76ad0a4da979",
          "type" : "text/javascript",
          "exec" : [ "var template = `\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <div class=\"rds-header\">\n        <h2 style=\"font-style: normal\">PUMF: Labour Force Survey (2018-01 to Latest) - Dictionary</h2>\n        <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div id=\"wrapper\">\n      <div id=\"main\">\n        <div class=\"textblock\">\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Label</th>\n                <th class=\"description\">Description</th>\n                <th>Data Type</th>\n                <th>Has Classification</th>\n                <th>Is Dimension</th>\n                <th>Is Measure</th>\n              </tr>\n            </thead>\n            <tbody>\n              {{#each response}}\t\n                <tr>\n                    <td>{{{name}}}</td>\n                    <td>{{{label}}}</td>\n                    <td>{{{description}}}</td>\n                    <td>{{{dataType}}}</td>\n                    {{#if classificationUri}}\n                    <td class=\"icon-cell\"><mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">check_circle_outline</mat-icon></td>\n                    {{else}}\n                    <td></td>\n                    {{/if}}  \n                    {{#if isDimension}}\n                    <td class=\"icon-cell\"><mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">check_circle_outline</mat-icon></td>\n                    {{else}}\n                    <td></td>\n                    {{/if}}  \n                    {{#if isMeasure}}\n                    <td class=\"icon-cell\"><mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">check_circle_outline</mat-icon></td>\n                    {{else}}\n                    <td></td>\n                    {{/if}}  \n                </tr>\n                {{/each}}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n`;\n\n// Set visualizer\npm.visualizer.set(template, {\n    // Pass the response body parsed as JSON as `data`\n    response: pm.response.json()\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : "https://public.richdataservices.com/rds/api/catalog/ca/pumf_lfs/variables",
        "method" : "GET",
        "description" : {
          "content" : "This request returns the data dictionary for the data product. The data dictionary is a simple listing of all the variables that make up the data product. This should include descriptive properties of each variable including its name, label, description, question text (if captured as part of a survey / questionnare) and any associated classification references. This is not meant to provide a detailed view of any particular variable, but a general overview of the variables that are available as part of the product. ",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    }, {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "c7f4452a76cf8c2938f9552cf20ca587",
      "name" : "Variable Details - WHYLEFTO",
      "description" : {
        "content" : "",
        "type" : "text/markdown"
      },
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "e176be9c-ebd3-4f01-9455-6cc52993a53a",
          "type" : "text/javascript",
          "exec" : [ "// get the variable from the postman response\nvar variable = pm.response.json();\n\n// get the frequencies formatted for amcharts\nvar frequencies = [];\nif (variable.frequencies !== undefined) {\n  var frequencySet = variable.frequencies.sets[0];\n  for (const [key, value] of Object.entries(frequencySet.map)) {\n    var entry = {\n      key: key,\n      value: value\n    };\n    frequencies.push(entry);\n  }\n}\n\n// get the populate vs missing values formatted for am charts\nvar populated = [];\nif (variable.summaryStatistics !== undefined) {\n  var statisticSet = variable.summaryStatistics.sets[0];\n  // populated entry\n  populated.push({\n    key: \"Populated\",\n    value: statisticSet.populated\n  });\n  // missing entry\n  populated.push({\n    key: \"Missing\",\n    value: statisticSet.missing\n  });\n}\n\n\nvar template = `\n    <link\n      rel=\"stylesheet\"\n      href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\"\n    />\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <link\n      href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\"\n    />\n    <style>\n      #frequencyChart {\n        width: 100%;\n        height: 275px;\n      }\n      #populatedChart {\n        width: 100%;\n        height: 100px;\n      }\n    </style>\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/core.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/charts.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/themes/animated.js\"></script>\n    <script>\n      pm.getData( function (error, data) {\n      // Themes begin\n      am4core.useTheme(am4themes_animated);\n      // Themes end\n\n      am4core.ready(function () {\n        // Create Populated / Missing Chart\n        var popChart = am4core.create(\"populatedChart\", am4charts.XYChart);\n\n        // Add data\n        popChart.data = data.populated;\n\n        // Create axes\n        var populatedCategoryAxis = popChart.yAxes.push(new am4charts.CategoryAxis());\n        populatedCategoryAxis.dataFields.category = \"key\";\n        populatedCategoryAxis.renderer.grid.template.location = 0;\n        populatedCategoryAxis.renderer.minGridDistance = 30;\n        var populatedValueAxis = popChart.xAxes.push(new am4charts.ValueAxis());\n\n        // Create series\n        var populatedSeries = popChart.series.push(new am4charts.ColumnSeries());\n        populatedSeries.columns.template.width = am4core.percent(20);\n        populatedSeries.dataFields.valueX = \"value\";\n        populatedSeries.dataFields.categoryY = \"key\";\n        populatedSeries.name = \"Populated and Missing\";\n        populatedSeries.columns.template.tooltipText = \"{categoryY}: [bold]{valueX}[/]\";\n        populatedSeries.columns.template.fillOpacity = 0.8;\n\n        // Create Frequency Chart\n        var chart = am4core.create(\"frequencyChart\", am4charts.XYChart);\n\n        // Add data\n        chart.data = data.frequencies;\n\n        // Create axes\n        var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());\n        categoryAxis.dataFields.category = \"key\";\n        categoryAxis.renderer.grid.template.location = 0;\n        categoryAxis.renderer.minGridDistance = 30;\n        var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());\n\n        // Create series\n        var series = chart.series.push(new am4charts.ColumnSeries());\n        series.dataFields.valueX = \"value\";\n        series.dataFields.categoryY = \"key\";\n        series.name = \"Value Frequencies\";\n        series.columns.template.tooltipText = \"{categoryY}: [bold]{valueX}[/]\";\n        series.columns.template.fillOpacity = 0.8;\n\n      });\n      });\n    </script>\n    <div class=\"rds-header\">\n      <h2 style=\"font-style: normal; font\">{{response.label}}</h2>\n      <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div style=\"margin: 32px\">\n      <h4>Details</h4>\n      {{#if response.label}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">short_text</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Label</h3>\n          <p id=\"variable-label\">{{{response.label}}}</p>\n        </div>\n      </div>\n      {{/if}}\n      {{#if response.description}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">notes</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Description</h3>\n          <p id=\"variable-description\">{{{response.description}}}</p>\n        </div>\n      </div>\n      {{/if}}\n      {{#if response.questionText}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">notes</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Question Text</h3>\n          <p id=\"variable-description\">{{{response.questionText}}}</p>\n        </div>\n      </div>\n      {{/if}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">storage</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Data Type</h3>\n          <p id=\"variable-type\">{{response.dataType}}</p>\n        </div>\n      </div>\n      <div style=\"margin-top: 32px\">\n        {{#if response.summaryStatistics}}\n        <div>\n          <div>\n            <h4>Populated and Missing</h4>\n            <div id=\"populatedChart\"></div>\n          </div> \n        </div>\n        {{/if}}\n        {{#if response.frequencies}}\n        <div>\n          <div>\n            <h4>Value Frequencies</h4>\n            <div id=\"frequencyChart\"></div>\n          </div>\n        </div>\n        {{/if}}\n      </div>\n    </div>\n`;\n\nconsole.log(frequencies)\n// Set visualizer\npm.visualizer.set(template, {\n  // Pass the response body parsed as JSON as `data`\n  response: pm.response.json(),\n  frequencies: frequencies,\n  populated: populated\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : "https://public.richdataservices.com/rds/api/catalog/ca/pumf_lfs/variable/WHYLEFTO",
        "method" : "GET",
        "description" : {
          "content" : "This request returns detailed variable information for **WHYLEFTO**. The variable ID or URI can be used in the path to get the details for any variable in the data product.",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    }, {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "51d19452863b40782e3009d18db431c6",
      "name" : "Select All",
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "ba7b3018-6c06-49c2-9c1c-83dd0d5df38f",
          "type" : "text/javascript",
          "exec" : [ "// get the data set from the postman response\nvar dataSet = pm.response.json();\n\n// get the variable ids\nvar variableNames = [];\nvar variables = {};\nfor(i = 0; i < dataSet.recordLayout.variables.length; i++){\n  var variable = dataSet.recordLayout.variables[i];\n  variableNames.push(variable.name)\n  variables[variable.id] = variable;\n}\n\n// build up some records based on the data and metadata\nvar nameRecords = [];\nvar codeRecords = [];\nvar bothRecords = [];\nfor (i = 0; i < dataSet.records.length; i++) {\n  var record = dataSet.records[i];\n  var nameRecord = [];\n  var codeRecord = [];\n  var bothRecord = [];\n  for (d = 0; d < record.data.length; d++) {\n    var data = record.data[d];\n    var value = data.value.value;\n    var nameValue = value;\n    var codeValue = value;\n    var bothValue = value;\n    if (value !== undefined && value.codeValue !== undefined) {\n      nameValue = value.name;\n      codeValue = value.codeValue;\n      bothValue = value.codeValue + \": \" + value.name;\n    }\n    nameRecord.push(nameValue);\n    codeRecord.push(codeValue);\n    bothRecord.push(bothValue);\n  }\n  nameRecords.push(nameRecord);\n  codeRecords.push(codeRecord);\n  bothRecords.push(bothRecord);\n}\n\n\nvar template = `\n    <link\n      rel=\"stylesheet\"\n      type=\"text/css\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.css\"\n    />\n    <link\n      rel=\"stylesheet\"\n      type=\"text/css\"\n      href=\"https://cdn.datatables.net/1.10.21/css/dataTables.bootstrap4.min.css\"\n    />\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <script\n      src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"\n      integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\"\n      crossorigin=\"anonymous\"\n    ></script>\n    <script\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\"\n      integrity=\"sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49\"\n      crossorigin=\"anonymous\"\n    ></script>\n    <script\n      type=\"text/javascript\"\n      src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\"\n    ></script>\n    <script>\n      $( document ).ready(function() {\n        pm.getData( function (error, data) {\n          // initialize data table\n          var table = document.getElementById(\"data\");\n\n          var tableHeader = table.getElementsByTagName('thead')[0]\n          var headerRow = tableHeader.insertRow();\n          for(i = 0; i < data.variableNames.length; i++){\n              var newTh = document.createElement('th');\n              newTh.innerHTML=data.variableNames[i];\n              newTh.setAttribute(\"onclick\",  \"updateVariable('\"+data.variableNames[i]+\"')\")\n              headerRow.appendChild(newTh)\n          }\n\n          var tableBody = table.getElementsByTagName('tbody')[0]\n          for(i = 0; i < data.nameRecords.length; i++){\n            var record = data.nameRecords[i];\n            var newRow = tableBody.insertRow();\n            for(d = 0; d < record.length; d++){\n              var newTd = document.createElement('td');\n              newTd.innerHTML=record[d];\n              newRow.appendChild(newTd)\n            }\n          }\n\n          // initialize variable details\n          var variable = data.variables[data.variableNames[0]];\n          updateVariableTable(variable);\n        });\n      });\n\n      function updateVariable(id) {\n        pm.getData( function (error, data) {\n          console.log(id)\n          var variable = data.variables[id];\n          updateVariableTable(variable);\n        });\n      }\n\n      function updateVariableTable(variable){\n          var variableLabel = document.getElementById(\"variable-label\");\n          variableLabel.innerHTML = variable.label;\n\n          var variableDescription = document.getElementById(\"variable-description\");\n          variableDescription.innerHTML = variable.description;\n\n          var variableType = document.getElementById(\"variable-type\");\n          variableType.innerHTML = variable.dataType;\n\n\n          createVariableRow(varTableBody, \"Label\", variable.label);\n          createVariableRow(varTableBody, \"Description\", variable.description);\n          createVariableRow(varTableBody, \"Question Text\", variable.questionText);\n          createVariableRow(varTableBody, \"Data Type\", variable.dataType);\n      }\n\n      function createVariableRow(tableBody, name, value){\n        if(value !== undefined){\n            var row = tableBody.insertRow();\n            var nameTd = document.createElement('td');\n            nameTd.innerHTML=name;\n            var valueTd = document.createElement('td');\n            valueTd.innerHTML=value;\n            row.appendChild(nameTd)\n            row.appendChild(valueTd)\n          }\n      }\n\n      function updateCodes(id) {\n        pm.getData( function (error, data) {\n          // refreshes the table \n          var table = document.getElementById(\"data\");\n          while (table.rows.length > 1) {\n            table.deleteRow(1);\n          }\n\n          var records;\n          if(id === 'name'){\n            records = data.nameRecords;\n          }else if(id === 'value'){\n            records = data.codeRecords;\n          }else{\n            records = data.bothRecords;\n          }\n\n          var tableBody = table.getElementsByTagName('tbody')[0]\n          for(i = 0; i < records.length; i++){\n            var record = records[i];\n            var newRow = tableBody.insertRow();\n            for(d = 0; d < record.length; d++){\n              var newTd = document.createElement('td');\n              newTd.innerHTML=record[d];\n              newRow.appendChild(newTd)\n            }\n          }\n        });\n      }\n    </script>\n    <style type=\"text/css\">\n      .btn-group {\n        border: 1px solid rgba(0,0,0,0.12);\n        border-radius: 8px;\n        display: -ms-inline-flexbox;\n        display: inline-flex;\n        margin-top: 8px;\n        overflow: hidden;\n        position: relative;\n        width: 100%;\n        white-space: nowrap;\n      }\n      .btn-secondary,\n      .btn-secondary:active {\n        background: #fff;\n        background-color: #fff;\n        border-left: 1px solid rgba(0,0,0,0.12);\n        border-top: none;\n        border-bottom: none;\n        border-right: none;\n        box-shadow: none !important;\n        color: rgba(0,0,0,0.87);\n        font-size: 16px;\n        font-family: Roboto,Helvetica Neue,sans-serif;\n        line-height: 48px;\n        padding: 0 12px;\n        white-space: nowrap;\n        width: 34%;\n      }\n      .btn-secondary:not(:disabled):not(.disabled).active,\n      .btn-secondary:not(:disabled):not(.disabled).active:active{\n        background-color: #e0e0e0;\n        border: 1px solid #e0e0e0;\n        color: rgba(0,0,0,0.87);\n      }\n      .btn-secondary:hover {\n        background-color: #ededed;\n        border-top: none;\n        border-bottom: none;\n        border-left: 1px solid rgba(0,0,0,.12);\n        border-right: none;\n        color: rgba(0,0,0,0.87); \n      }\n      .code-display-controls {\n        margin-right: 0;\n        width: 100%;\n      }\n      .content-container {\n        display:flex;\n        flex-direction: row;\n        padding: 10px;\n      }\n      h4 {\n        font-family: Roboto, sans-serif;\n        font-size: 12px;\n        font-weight: 400;\n        height: 13px;\n        letter-spacing: 1px;\n        line-height: 13px;\n        margin: 0;\n        text-transform: uppercase;\n      }\n      th {\n        cursor: pointer;\n      }\n      .table-information {\n        display: flex;\n        flex-direction: column;\n        margin-right: 32px;\n        margin-top: 24px;\n        min-width: 25%; \n        width: 25%;\n      }\n      @media screen and (max-width: 950px) {\n        .code-display-controls {\n          margin-right: 32px;\n          width: 25%;\n        }\n        .code-display-controls {\n          margin: 16px 0;\n          width: 100%;\n        }\n        .content-container {\n          flex-direction: column;\n        }\n        .table-information {\n          align-items: left;\n          flex-direction: column-reverse;\n          justify-content: space-around;\n          width: 100%;\n        }\n      }\n    </style>\n    <div class=\"rds-header\">\n      <h2 style=\"font-style: normal; font\">Data Explorer</h2>\n      <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div class=\"content-container\">\n      <div class=\"table-information\">\n        <div class=\"code-display-controls\">\n          <h4>Code Display</h4>\n          <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n            <label class=\"btn btn-secondary active\" \n            onclick=\"updateCodes('name')\">\n              <input\n                type=\"radio\"\n                name=\"options\"\n                id=\"codeName\"\n                autocomplete=\"off\"\n                checked\n              />\n              Name\n            </label>\n            <label class=\"btn btn-secondary\" onclick=\"updateCodes('value')\">\n              <input\n                type=\"radio\"\n                name=\"options\"\n                id=\"codeValue\"\n                autocomplete=\"off\"\n              />\n              Value\n            </label>\n            <label class=\"btn btn-secondary\" onclick=\"updateCodes('both')\">\n              <input\n                type=\"radio\"\n                name=\"options\"\n                id=\"both\"\n                autocomplete=\"off\"\n              />\n              Both\n            </label>\n          </div>\n        </div>\n        <div>\n          <br/>\n          <h4>Variable Details</h4>\n          <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n            <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">short_text</mat-icon>\n            <div sytle=\"display:flex; flex-direction: column;\">\n              <h3>Label</h3>\n              <p id=\"variable-label\"></p>\n            </div>\n          </div>\n          <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n            <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">notes</mat-icon>\n            <div sytle=\"display:flex; flex-direction: column;\">\n              <h3>Description</h3>\n              <p id=\"variable-description\"></p>\n            </div>\n          </div>\n          <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n            <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">storage</mat-icon>\n            <div sytle=\"display:flex; flex-direction: column;\">\n              <h3>Data Type</h3>\n              <p id=\"variable-type\"></p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <table\n        id=\"data\"\n        style=\"width: 100%;\">\n          <thead>\n          </thead>\n          <tbody>\n          </tbody>\n      </table>\n    </div>\n`;\n\n// Set visualizer\npm.visualizer.set(template, {\n  // Pass the response body parsed as JSON as `data`\n  response: pm.response.json(),\n  variableNames: variableNames,\n  nameRecords: nameRecords,\n  codeRecords: codeRecords,\n  bothRecords: bothRecords,\n  variables: variables\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : {"protocol":"https","host":"public.richdataservices.com","path":"/rds/api/query/ca/pumf_lfs/select","query":[{"key":"format","value":"MTNA","disabled":false,"description":{"content":"We will use the MTNA format for our response, this will include the variable metadata in the response. In addition, when combined with the inject parameter the records will contain code objects which will allow us to toggle between the code name, value, or both.","type":"text/markdown"}},{"key":"inject","disabled":false,"description":{"content":"Including the inject flag will specify that the raw values should be replaced with their codes if there are any associated with that value. In the MTNA format that we are using this will result in the code object being returned. In simpler formats the code name will be returned in place of the code value.","type":"text/markdown"}},{"key":"limit","value":"25","disabled":false,"description":{"content":"This will limit the number of rows returned.","type":"text/markdown"}},{"key":"collimit","value":"25","disabled":false,"description":{"content":"This will limit the number of columns returned.","type":"text/markdown"}}],"variable":[]},
        "method" : "GET",
        "description" : {
          "content" : "This query will select the first 25 variables and 25 records in the data product as a basic example of querying records. For a complete list of available parameters, please reference the <a href=\"https://documenter.getpostman.com/view/2220438/SzS5umZ3?version=latest#b11de492-633b-49cb-a422-47b90c0810dd\" target=\"_blank\">select query documentation</a>.",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    } ],
    "event" : [ ]
  }, {
    "@class" : "us.mtna.postman.model.ItemGroup",
    "name" : "PUMF: Survey of Financial Security, 2012",
    "description" : {
      "content" : "## Overview \n\n<p>The purpose of the survey is to collect information from a sample of Canadian families on their assets, debts, employment, income and education. This helps in understanding how family finances change because of economic pressures. The SFS provides a comprehensive picture of the net worth of Canadians. Information is collected on the value of all major financial and non-financial assets and on the money owing on mortgages, vehicles, credit cards, student loans and other debts. A family's net worth can be thought of as the amount of money they would be left with if they sold all of their assets and paid off all of their debts. The survey data are used by government departments to help formulate policy, the private sector and by individuals and families to compare their wealth with those of similar types of families.</p>\n\n## Citation \n\nStatistics Canada. 2015. Survey of Financial Security, 2012 [public-use microdata file]. Ottawa, Ontario: Statistics Canada. Income Statistics Division, Data Liberation Initiative [producer and distributor].\n\n## Provenance \n\nThis data product and metadata is sourced from CSV, DDI, and documentation files made available by <a href='https://odesi.ca/' target='_blank'>ODESI</a> and the <a href='https://www.statcan.gc.ca/eng/dli/dli' target='_blank'>Data Liberation Initative</a>.\n\n## RDS User Interfaces\n\nWant to play with the data before diving into the API? Try out some of our data exploration tools that were built entirely off the API to see what it's capable of.\n* The data and metadata can be explored using the [RDS Explorer](https://public.richdataservices.com/rds-explorer/explore/ca/pumf_sfs_2012/data).\n* The data can be tabulated using the [RDS TabEngine](https://public.richdataservices.com/rds-tabengine/analysis/ca/pumf_sfs_2012/custom-tables).\n",
      "type" : "text/markdown"
    },
    "variable" : [ ],
    "item" : [ {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "21e360315037cf916d3da5c56b6a05ac",
      "name" : "Data Product Overview",
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "67b5a225-bdba-4898-ad3e-347d4fbcb403",
          "type" : "text/javascript",
          "exec" : [ "var template = `\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <style type=\"text/css\">\n        .information-label {\n            color: rgba(0,0,0,0.54);\n            font-family: Roboto, sans-serif;\n            font-size: .75em;\n            font-style: normal;\n            font-weight: 900;\n            letter-spacing: 1px;\n            margin-top: 16px;\n            text-transform: uppercase;\n        }\n        .item-id {\n            color: rgba(0,0,0,0.54);\n            font-family: 'Roboto Mono', monospace;\n        }\n    </style>\n    <div class=\"rds-header\">\n        <h2 style=\"font-style: normal\">Data Product</h2>\n        <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div id=\"wrapper\">\n      <div id=\"main\">\n        <br />\n        <div class=\"textblock\">\n          <h3 id=\"startcontent\">\n            {{response.name}} <span class=\"item-id\">[{{response.id}}]</span>\n          </h3>\n\n          {{#if response.description}}\n          <h4 class=\"information-label\">Description</h4>\n          <div style=\"padding-left: 1.5%;\" class=\"product-information\"> \n            {{{response.description}}} \n          </div>\n          {{/if}}\n          {{#if response.citation}}\n          <h4 class=\"information-label\">Citation</h4>\n          <div style=\"padding-left: 1.5%;\" class=\"product-information\">\n            {{{response.citation}}}\n          </div>\n          {{/if}}\n          {{#if response.provenance}}\n          <h4 class=\"information-label\">Provenance</h4>\n          <div style=\"padding-left: 1.5%;\" class=\"product-information\">\n            {{{response.provenance}}}\n          </div>\n          {{/if}}\n          {{#if response.note}}\n          <h4 class=\"information-label\">Notes</h4>\n          <div id=\"notes\" style=\"padding-left: 1.5%;\" class=\"product-information\">\n            {{{response.note}}}\n          </div>\n          {{/if}}\n        </div>\n      </div>\n    </div>\n`;\n\n// Set visualizer\npm.visualizer.set(template, {\n    // Pass the response body parsed as JSON as `data`\n    response: pm.response.json()\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : "https://public.richdataservices.com/rds/api/catalog/ca/pumf_sfs_2012",
        "method" : "GET",
        "description" : {
          "content" : "This request returns the data product from the RDS API. It contains descriptive properties such as the data product name, label, description, a citation of the source of the data, provenance information, when the product was last updated, and any additional notes that may be needed to further understand the data or how to use it.",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    }, {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "64e2fab6c703c40acaebc2e97977be73",
      "name" : "Data Dictionary",
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "a327f5ff-5fd4-49b4-9fde-fc009109076f",
          "type" : "text/javascript",
          "exec" : [ "var template = `\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <div class=\"rds-header\">\n        <h2 style=\"font-style: normal\">PUMF: Survey of Financial Security, 2012 - Dictionary</h2>\n        <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div id=\"wrapper\">\n      <div id=\"main\">\n        <div class=\"textblock\">\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Label</th>\n                <th class=\"description\">Description</th>\n                <th>Data Type</th>\n                <th>Has Classification</th>\n                <th>Is Dimension</th>\n                <th>Is Measure</th>\n              </tr>\n            </thead>\n            <tbody>\n              {{#each response}}\t\n                <tr>\n                    <td>{{{name}}}</td>\n                    <td>{{{label}}}</td>\n                    <td>{{{description}}}</td>\n                    <td>{{{dataType}}}</td>\n                    {{#if classificationUri}}\n                    <td class=\"icon-cell\"><mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">check_circle_outline</mat-icon></td>\n                    {{else}}\n                    <td></td>\n                    {{/if}}  \n                    {{#if isDimension}}\n                    <td class=\"icon-cell\"><mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">check_circle_outline</mat-icon></td>\n                    {{else}}\n                    <td></td>\n                    {{/if}}  \n                    {{#if isMeasure}}\n                    <td class=\"icon-cell\"><mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">check_circle_outline</mat-icon></td>\n                    {{else}}\n                    <td></td>\n                    {{/if}}  \n                </tr>\n                {{/each}}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n`;\n\n// Set visualizer\npm.visualizer.set(template, {\n    // Pass the response body parsed as JSON as `data`\n    response: pm.response.json()\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : "https://public.richdataservices.com/rds/api/catalog/ca/pumf_sfs_2012/variables",
        "method" : "GET",
        "description" : {
          "content" : "This request returns the data dictionary for the data product. The data dictionary is a simple listing of all the variables that make up the data product. This should include descriptive properties of each variable including its name, label, description, question text (if captured as part of a survey / questionnare) and any associated classification references. This is not meant to provide a detailed view of any particular variable, but a general overview of the variables that are available as part of the product. ",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    }, {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "ee7df1e9395b8473f78d7d21761a2871",
      "name" : "Variable Details - PEFMJSIF",
      "description" : {
        "content" : "",
        "type" : "text/markdown"
      },
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "4d5ce70a-eca4-4ac4-b67c-106dc50c847b",
          "type" : "text/javascript",
          "exec" : [ "// get the variable from the postman response\nvar variable = pm.response.json();\n\n// get the frequencies formatted for amcharts\nvar frequencies = [];\nif (variable.frequencies !== undefined) {\n  var frequencySet = variable.frequencies.sets[0];\n  for (const [key, value] of Object.entries(frequencySet.map)) {\n    var entry = {\n      key: key,\n      value: value\n    };\n    frequencies.push(entry);\n  }\n}\n\n// get the populate vs missing values formatted for am charts\nvar populated = [];\nif (variable.summaryStatistics !== undefined) {\n  var statisticSet = variable.summaryStatistics.sets[0];\n  // populated entry\n  populated.push({\n    key: \"Populated\",\n    value: statisticSet.populated\n  });\n  // missing entry\n  populated.push({\n    key: \"Missing\",\n    value: statisticSet.missing\n  });\n}\n\n\nvar template = `\n    <link\n      rel=\"stylesheet\"\n      href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\"\n    />\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <link\n      href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\"\n    />\n    <style>\n      #frequencyChart {\n        width: 100%;\n        height: 275px;\n      }\n      #populatedChart {\n        width: 100%;\n        height: 100px;\n      }\n    </style>\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/core.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/charts.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/themes/animated.js\"></script>\n    <script>\n      pm.getData( function (error, data) {\n      // Themes begin\n      am4core.useTheme(am4themes_animated);\n      // Themes end\n\n      am4core.ready(function () {\n        // Create Populated / Missing Chart\n        var popChart = am4core.create(\"populatedChart\", am4charts.XYChart);\n\n        // Add data\n        popChart.data = data.populated;\n\n        // Create axes\n        var populatedCategoryAxis = popChart.yAxes.push(new am4charts.CategoryAxis());\n        populatedCategoryAxis.dataFields.category = \"key\";\n        populatedCategoryAxis.renderer.grid.template.location = 0;\n        populatedCategoryAxis.renderer.minGridDistance = 30;\n        var populatedValueAxis = popChart.xAxes.push(new am4charts.ValueAxis());\n\n        // Create series\n        var populatedSeries = popChart.series.push(new am4charts.ColumnSeries());\n        populatedSeries.columns.template.width = am4core.percent(20);\n        populatedSeries.dataFields.valueX = \"value\";\n        populatedSeries.dataFields.categoryY = \"key\";\n        populatedSeries.name = \"Populated and Missing\";\n        populatedSeries.columns.template.tooltipText = \"{categoryY}: [bold]{valueX}[/]\";\n        populatedSeries.columns.template.fillOpacity = 0.8;\n\n        // Create Frequency Chart\n        var chart = am4core.create(\"frequencyChart\", am4charts.XYChart);\n\n        // Add data\n        chart.data = data.frequencies;\n\n        // Create axes\n        var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());\n        categoryAxis.dataFields.category = \"key\";\n        categoryAxis.renderer.grid.template.location = 0;\n        categoryAxis.renderer.minGridDistance = 30;\n        var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());\n\n        // Create series\n        var series = chart.series.push(new am4charts.ColumnSeries());\n        series.dataFields.valueX = \"value\";\n        series.dataFields.categoryY = \"key\";\n        series.name = \"Value Frequencies\";\n        series.columns.template.tooltipText = \"{categoryY}: [bold]{valueX}[/]\";\n        series.columns.template.fillOpacity = 0.8;\n\n      });\n      });\n    </script>\n    <div class=\"rds-header\">\n      <h2 style=\"font-style: normal; font\">{{response.label}}</h2>\n      <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div style=\"margin: 32px\">\n      <h4>Details</h4>\n      {{#if response.label}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">short_text</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Label</h3>\n          <p id=\"variable-label\">{{{response.label}}}</p>\n        </div>\n      </div>\n      {{/if}}\n      {{#if response.description}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">notes</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Description</h3>\n          <p id=\"variable-description\">{{{response.description}}}</p>\n        </div>\n      </div>\n      {{/if}}\n      {{#if response.questionText}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">notes</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Question Text</h3>\n          <p id=\"variable-description\">{{{response.questionText}}}</p>\n        </div>\n      </div>\n      {{/if}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">storage</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Data Type</h3>\n          <p id=\"variable-type\">{{response.dataType}}</p>\n        </div>\n      </div>\n      <div style=\"margin-top: 32px\">\n        {{#if response.summaryStatistics}}\n        <div>\n          <div>\n            <h4>Populated and Missing</h4>\n            <div id=\"populatedChart\"></div>\n          </div> \n        </div>\n        {{/if}}\n        {{#if response.frequencies}}\n        <div>\n          <div>\n            <h4>Value Frequencies</h4>\n            <div id=\"frequencyChart\"></div>\n          </div>\n        </div>\n        {{/if}}\n      </div>\n    </div>\n`;\n\nconsole.log(frequencies)\n// Set visualizer\npm.visualizer.set(template, {\n  // Pass the response body parsed as JSON as `data`\n  response: pm.response.json(),\n  frequencies: frequencies,\n  populated: populated\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : "https://public.richdataservices.com/rds/api/catalog/ca/pumf_sfs_2012/variable/PEFMJSIF",
        "method" : "GET",
        "description" : {
          "content" : "This request returns detailed variable information for **PEFMJSIF**. The variable ID or URI can be used in the path to get the details for any variable in the data product.",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    }, {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "398cbcff15ac5253645ea98fc76c26da",
      "name" : "Select All",
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "d445980c-1643-4a6f-85a4-1f33a851ca47",
          "type" : "text/javascript",
          "exec" : [ "// get the data set from the postman response\nvar dataSet = pm.response.json();\n\n// get the variable ids\nvar variableNames = [];\nvar variables = {};\nfor(i = 0; i < dataSet.recordLayout.variables.length; i++){\n  var variable = dataSet.recordLayout.variables[i];\n  variableNames.push(variable.name)\n  variables[variable.id] = variable;\n}\n\n// build up some records based on the data and metadata\nvar nameRecords = [];\nvar codeRecords = [];\nvar bothRecords = [];\nfor (i = 0; i < dataSet.records.length; i++) {\n  var record = dataSet.records[i];\n  var nameRecord = [];\n  var codeRecord = [];\n  var bothRecord = [];\n  for (d = 0; d < record.data.length; d++) {\n    var data = record.data[d];\n    var value = data.value.value;\n    var nameValue = value;\n    var codeValue = value;\n    var bothValue = value;\n    if (value !== undefined && value.codeValue !== undefined) {\n      nameValue = value.name;\n      codeValue = value.codeValue;\n      bothValue = value.codeValue + \": \" + value.name;\n    }\n    nameRecord.push(nameValue);\n    codeRecord.push(codeValue);\n    bothRecord.push(bothValue);\n  }\n  nameRecords.push(nameRecord);\n  codeRecords.push(codeRecord);\n  bothRecords.push(bothRecord);\n}\n\n\nvar template = `\n    <link\n      rel=\"stylesheet\"\n      type=\"text/css\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.css\"\n    />\n    <link\n      rel=\"stylesheet\"\n      type=\"text/css\"\n      href=\"https://cdn.datatables.net/1.10.21/css/dataTables.bootstrap4.min.css\"\n    />\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <script\n      src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"\n      integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\"\n      crossorigin=\"anonymous\"\n    ></script>\n    <script\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\"\n      integrity=\"sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49\"\n      crossorigin=\"anonymous\"\n    ></script>\n    <script\n      type=\"text/javascript\"\n      src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\"\n    ></script>\n    <script>\n      $( document ).ready(function() {\n        pm.getData( function (error, data) {\n          // initialize data table\n          var table = document.getElementById(\"data\");\n\n          var tableHeader = table.getElementsByTagName('thead')[0]\n          var headerRow = tableHeader.insertRow();\n          for(i = 0; i < data.variableNames.length; i++){\n              var newTh = document.createElement('th');\n              newTh.innerHTML=data.variableNames[i];\n              newTh.setAttribute(\"onclick\",  \"updateVariable('\"+data.variableNames[i]+\"')\")\n              headerRow.appendChild(newTh)\n          }\n\n          var tableBody = table.getElementsByTagName('tbody')[0]\n          for(i = 0; i < data.nameRecords.length; i++){\n            var record = data.nameRecords[i];\n            var newRow = tableBody.insertRow();\n            for(d = 0; d < record.length; d++){\n              var newTd = document.createElement('td');\n              newTd.innerHTML=record[d];\n              newRow.appendChild(newTd)\n            }\n          }\n\n          // initialize variable details\n          var variable = data.variables[data.variableNames[0]];\n          updateVariableTable(variable);\n        });\n      });\n\n      function updateVariable(id) {\n        pm.getData( function (error, data) {\n          console.log(id)\n          var variable = data.variables[id];\n          updateVariableTable(variable);\n        });\n      }\n\n      function updateVariableTable(variable){\n          var variableLabel = document.getElementById(\"variable-label\");\n          variableLabel.innerHTML = variable.label;\n\n          var variableDescription = document.getElementById(\"variable-description\");\n          variableDescription.innerHTML = variable.description;\n\n          var variableType = document.getElementById(\"variable-type\");\n          variableType.innerHTML = variable.dataType;\n\n\n          createVariableRow(varTableBody, \"Label\", variable.label);\n          createVariableRow(varTableBody, \"Description\", variable.description);\n          createVariableRow(varTableBody, \"Question Text\", variable.questionText);\n          createVariableRow(varTableBody, \"Data Type\", variable.dataType);\n      }\n\n      function createVariableRow(tableBody, name, value){\n        if(value !== undefined){\n            var row = tableBody.insertRow();\n            var nameTd = document.createElement('td');\n            nameTd.innerHTML=name;\n            var valueTd = document.createElement('td');\n            valueTd.innerHTML=value;\n            row.appendChild(nameTd)\n            row.appendChild(valueTd)\n          }\n      }\n\n      function updateCodes(id) {\n        pm.getData( function (error, data) {\n          // refreshes the table \n          var table = document.getElementById(\"data\");\n          while (table.rows.length > 1) {\n            table.deleteRow(1);\n          }\n\n          var records;\n          if(id === 'name'){\n            records = data.nameRecords;\n          }else if(id === 'value'){\n            records = data.codeRecords;\n          }else{\n            records = data.bothRecords;\n          }\n\n          var tableBody = table.getElementsByTagName('tbody')[0]\n          for(i = 0; i < records.length; i++){\n            var record = records[i];\n            var newRow = tableBody.insertRow();\n            for(d = 0; d < record.length; d++){\n              var newTd = document.createElement('td');\n              newTd.innerHTML=record[d];\n              newRow.appendChild(newTd)\n            }\n          }\n        });\n      }\n    </script>\n    <style type=\"text/css\">\n      .btn-group {\n        border: 1px solid rgba(0,0,0,0.12);\n        border-radius: 8px;\n        display: -ms-inline-flexbox;\n        display: inline-flex;\n        margin-top: 8px;\n        overflow: hidden;\n        position: relative;\n        width: 100%;\n        white-space: nowrap;\n      }\n      .btn-secondary,\n      .btn-secondary:active {\n        background: #fff;\n        background-color: #fff;\n        border-left: 1px solid rgba(0,0,0,0.12);\n        border-top: none;\n        border-bottom: none;\n        border-right: none;\n        box-shadow: none !important;\n        color: rgba(0,0,0,0.87);\n        font-size: 16px;\n        font-family: Roboto,Helvetica Neue,sans-serif;\n        line-height: 48px;\n        padding: 0 12px;\n        white-space: nowrap;\n        width: 34%;\n      }\n      .btn-secondary:not(:disabled):not(.disabled).active,\n      .btn-secondary:not(:disabled):not(.disabled).active:active{\n        background-color: #e0e0e0;\n        border: 1px solid #e0e0e0;\n        color: rgba(0,0,0,0.87);\n      }\n      .btn-secondary:hover {\n        background-color: #ededed;\n        border-top: none;\n        border-bottom: none;\n        border-left: 1px solid rgba(0,0,0,.12);\n        border-right: none;\n        color: rgba(0,0,0,0.87); \n      }\n      .code-display-controls {\n        margin-right: 0;\n        width: 100%;\n      }\n      .content-container {\n        display:flex;\n        flex-direction: row;\n        padding: 10px;\n      }\n      h4 {\n        font-family: Roboto, sans-serif;\n        font-size: 12px;\n        font-weight: 400;\n        height: 13px;\n        letter-spacing: 1px;\n        line-height: 13px;\n        margin: 0;\n        text-transform: uppercase;\n      }\n      th {\n        cursor: pointer;\n      }\n      .table-information {\n        display: flex;\n        flex-direction: column;\n        margin-right: 32px;\n        margin-top: 24px;\n        min-width: 25%; \n        width: 25%;\n      }\n      @media screen and (max-width: 950px) {\n        .code-display-controls {\n          margin-right: 32px;\n          width: 25%;\n        }\n        .code-display-controls {\n          margin: 16px 0;\n          width: 100%;\n        }\n        .content-container {\n          flex-direction: column;\n        }\n        .table-information {\n          align-items: left;\n          flex-direction: column-reverse;\n          justify-content: space-around;\n          width: 100%;\n        }\n      }\n    </style>\n    <div class=\"rds-header\">\n      <h2 style=\"font-style: normal; font\">Data Explorer</h2>\n      <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div class=\"content-container\">\n      <div class=\"table-information\">\n        <div class=\"code-display-controls\">\n          <h4>Code Display</h4>\n          <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n            <label class=\"btn btn-secondary active\" \n            onclick=\"updateCodes('name')\">\n              <input\n                type=\"radio\"\n                name=\"options\"\n                id=\"codeName\"\n                autocomplete=\"off\"\n                checked\n              />\n              Name\n            </label>\n            <label class=\"btn btn-secondary\" onclick=\"updateCodes('value')\">\n              <input\n                type=\"radio\"\n                name=\"options\"\n                id=\"codeValue\"\n                autocomplete=\"off\"\n              />\n              Value\n            </label>\n            <label class=\"btn btn-secondary\" onclick=\"updateCodes('both')\">\n              <input\n                type=\"radio\"\n                name=\"options\"\n                id=\"both\"\n                autocomplete=\"off\"\n              />\n              Both\n            </label>\n          </div>\n        </div>\n        <div>\n          <br/>\n          <h4>Variable Details</h4>\n          <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n            <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">short_text</mat-icon>\n            <div sytle=\"display:flex; flex-direction: column;\">\n              <h3>Label</h3>\n              <p id=\"variable-label\"></p>\n            </div>\n          </div>\n          <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n            <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">notes</mat-icon>\n            <div sytle=\"display:flex; flex-direction: column;\">\n              <h3>Description</h3>\n              <p id=\"variable-description\"></p>\n            </div>\n          </div>\n          <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n            <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">storage</mat-icon>\n            <div sytle=\"display:flex; flex-direction: column;\">\n              <h3>Data Type</h3>\n              <p id=\"variable-type\"></p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <table\n        id=\"data\"\n        style=\"width: 100%;\">\n          <thead>\n          </thead>\n          <tbody>\n          </tbody>\n      </table>\n    </div>\n`;\n\n// Set visualizer\npm.visualizer.set(template, {\n  // Pass the response body parsed as JSON as `data`\n  response: pm.response.json(),\n  variableNames: variableNames,\n  nameRecords: nameRecords,\n  codeRecords: codeRecords,\n  bothRecords: bothRecords,\n  variables: variables\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : {"protocol":"https","host":"public.richdataservices.com","path":"/rds/api/query/ca/pumf_sfs_2012/select","query":[{"key":"format","value":"MTNA","disabled":false,"description":{"content":"We will use the MTNA format for our response, this will include the variable metadata in the response. In addition, when combined with the inject parameter the records will contain code objects which will allow us to toggle between the code name, value, or both.","type":"text/markdown"}},{"key":"inject","disabled":false,"description":{"content":"Including the inject flag will specify that the raw values should be replaced with their codes if there are any associated with that value. In the MTNA format that we are using this will result in the code object being returned. In simpler formats the code name will be returned in place of the code value.","type":"text/markdown"}},{"key":"limit","value":"25","disabled":false,"description":{"content":"This will limit the number of rows returned.","type":"text/markdown"}},{"key":"collimit","value":"25","disabled":false,"description":{"content":"This will limit the number of columns returned.","type":"text/markdown"}}],"variable":[]},
        "method" : "GET",
        "description" : {
          "content" : "This query will select the first 25 variables and 25 records in the data product as a basic example of querying records. For a complete list of available parameters, please reference the <a href=\"https://documenter.getpostman.com/view/2220438/SzS5umZ3?version=latest#b11de492-633b-49cb-a422-47b90c0810dd\" target=\"_blank\">select query documentation</a>.",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    } ],
    "event" : [ ]
  }, {
    "@class" : "us.mtna.postman.model.ItemGroup",
    "name" : "PUMF: Survey of Financial Security, 2016",
    "description" : {
      "content" : "## Overview \n\n<p>The purpose of the survey is to collect information from a sample of Canadian families on their assets, debts, employment, income and education. This helps in understanding how family finances change because of economic pressures. The SFS provides a comprehensive picture of the net worth of Canadians. Information is collected on the value of all major financial and non-financial assets and on the money owing on mortgages, vehicles, credit cards, student loans and other debts. A family's net worth can be thought of as the amount of money they would be left with if they sold all of their assets and paid off all of their debts. The survey data are used by government departments to help formulate policy, the private sector and by individuals and families to compare their wealth with those of similar types of families.</p>\n\n## Citation \n\nStatistics Canada. 2018. Survey of Financial Security, 2016 [public-use microdata file]. Ottawa, Ontario: Statistics Canada [producer and distributor].\n\n## Provenance \n\nThis data product and metadata is sourced from CSV, DDI, and documentation files made available by <a href='https://odesi.ca/' target='_blank'>ODESI</a> and the <a href='https://www.statcan.gc.ca/eng/dli/dli' target='_blank'>Data Liberation Initative</a>.\n\n## RDS User Interfaces\n\nWant to play with the data before diving into the API? Try out some of our data exploration tools that were built entirely off the API to see what it's capable of.\n* The data and metadata can be explored using the [RDS Explorer](https://public.richdataservices.com/rds-explorer/explore/ca/pumf_sfs_2016/data).\n* The data can be tabulated using the [RDS TabEngine](https://public.richdataservices.com/rds-tabengine/analysis/ca/pumf_sfs_2016/custom-tables).\n",
      "type" : "text/markdown"
    },
    "variable" : [ ],
    "item" : [ {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "f6ccbce3eb053511fb9fc902770f149d",
      "name" : "Data Product Overview",
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "03b792f4-491f-4ff2-8e73-a32ea5308c78",
          "type" : "text/javascript",
          "exec" : [ "var template = `\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <style type=\"text/css\">\n        .information-label {\n            color: rgba(0,0,0,0.54);\n            font-family: Roboto, sans-serif;\n            font-size: .75em;\n            font-style: normal;\n            font-weight: 900;\n            letter-spacing: 1px;\n            margin-top: 16px;\n            text-transform: uppercase;\n        }\n        .item-id {\n            color: rgba(0,0,0,0.54);\n            font-family: 'Roboto Mono', monospace;\n        }\n    </style>\n    <div class=\"rds-header\">\n        <h2 style=\"font-style: normal\">Data Product</h2>\n        <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div id=\"wrapper\">\n      <div id=\"main\">\n        <br />\n        <div class=\"textblock\">\n          <h3 id=\"startcontent\">\n            {{response.name}} <span class=\"item-id\">[{{response.id}}]</span>\n          </h3>\n\n          {{#if response.description}}\n          <h4 class=\"information-label\">Description</h4>\n          <div style=\"padding-left: 1.5%;\" class=\"product-information\"> \n            {{{response.description}}} \n          </div>\n          {{/if}}\n          {{#if response.citation}}\n          <h4 class=\"information-label\">Citation</h4>\n          <div style=\"padding-left: 1.5%;\" class=\"product-information\">\n            {{{response.citation}}}\n          </div>\n          {{/if}}\n          {{#if response.provenance}}\n          <h4 class=\"information-label\">Provenance</h4>\n          <div style=\"padding-left: 1.5%;\" class=\"product-information\">\n            {{{response.provenance}}}\n          </div>\n          {{/if}}\n          {{#if response.note}}\n          <h4 class=\"information-label\">Notes</h4>\n          <div id=\"notes\" style=\"padding-left: 1.5%;\" class=\"product-information\">\n            {{{response.note}}}\n          </div>\n          {{/if}}\n        </div>\n      </div>\n    </div>\n`;\n\n// Set visualizer\npm.visualizer.set(template, {\n    // Pass the response body parsed as JSON as `data`\n    response: pm.response.json()\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : "https://public.richdataservices.com/rds/api/catalog/ca/pumf_sfs_2016",
        "method" : "GET",
        "description" : {
          "content" : "This request returns the data product from the RDS API. It contains descriptive properties such as the data product name, label, description, a citation of the source of the data, provenance information, when the product was last updated, and any additional notes that may be needed to further understand the data or how to use it.",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    }, {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "71486235b0c1c7499d5a3b6bb26a7a51",
      "name" : "Data Dictionary",
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "9f4e8473-aa46-4a74-a3a8-943aa56c0ce1",
          "type" : "text/javascript",
          "exec" : [ "var template = `\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <div class=\"rds-header\">\n        <h2 style=\"font-style: normal\">PUMF: Survey of Financial Security, 2016 - Dictionary</h2>\n        <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div id=\"wrapper\">\n      <div id=\"main\">\n        <div class=\"textblock\">\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Label</th>\n                <th class=\"description\">Description</th>\n                <th>Data Type</th>\n                <th>Has Classification</th>\n                <th>Is Dimension</th>\n                <th>Is Measure</th>\n              </tr>\n            </thead>\n            <tbody>\n              {{#each response}}\t\n                <tr>\n                    <td>{{{name}}}</td>\n                    <td>{{{label}}}</td>\n                    <td>{{{description}}}</td>\n                    <td>{{{dataType}}}</td>\n                    {{#if classificationUri}}\n                    <td class=\"icon-cell\"><mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">check_circle_outline</mat-icon></td>\n                    {{else}}\n                    <td></td>\n                    {{/if}}  \n                    {{#if isDimension}}\n                    <td class=\"icon-cell\"><mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">check_circle_outline</mat-icon></td>\n                    {{else}}\n                    <td></td>\n                    {{/if}}  \n                    {{#if isMeasure}}\n                    <td class=\"icon-cell\"><mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">check_circle_outline</mat-icon></td>\n                    {{else}}\n                    <td></td>\n                    {{/if}}  \n                </tr>\n                {{/each}}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n`;\n\n// Set visualizer\npm.visualizer.set(template, {\n    // Pass the response body parsed as JSON as `data`\n    response: pm.response.json()\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : "https://public.richdataservices.com/rds/api/catalog/ca/pumf_sfs_2016/variables",
        "method" : "GET",
        "description" : {
          "content" : "This request returns the data dictionary for the data product. The data dictionary is a simple listing of all the variables that make up the data product. This should include descriptive properties of each variable including its name, label, description, question text (if captured as part of a survey / questionnare) and any associated classification references. This is not meant to provide a detailed view of any particular variable, but a general overview of the variables that are available as part of the product. ",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    }, {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "8ff85b166491832990d885680ba4b726",
      "name" : "Variable Details - PASRDPO4",
      "description" : {
        "content" : "",
        "type" : "text/markdown"
      },
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "4a536516-ad73-475b-a13c-59ed34e7eea9",
          "type" : "text/javascript",
          "exec" : [ "// get the variable from the postman response\nvar variable = pm.response.json();\n\n// get the frequencies formatted for amcharts\nvar frequencies = [];\nif (variable.frequencies !== undefined) {\n  var frequencySet = variable.frequencies.sets[0];\n  for (const [key, value] of Object.entries(frequencySet.map)) {\n    var entry = {\n      key: key,\n      value: value\n    };\n    frequencies.push(entry);\n  }\n}\n\n// get the populate vs missing values formatted for am charts\nvar populated = [];\nif (variable.summaryStatistics !== undefined) {\n  var statisticSet = variable.summaryStatistics.sets[0];\n  // populated entry\n  populated.push({\n    key: \"Populated\",\n    value: statisticSet.populated\n  });\n  // missing entry\n  populated.push({\n    key: \"Missing\",\n    value: statisticSet.missing\n  });\n}\n\n\nvar template = `\n    <link\n      rel=\"stylesheet\"\n      href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\"\n    />\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <link\n      href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\"\n    />\n    <style>\n      #frequencyChart {\n        width: 100%;\n        height: 275px;\n      }\n      #populatedChart {\n        width: 100%;\n        height: 100px;\n      }\n    </style>\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/core.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/charts.js\"></script>\n    <script src=\"https://cdn.amcharts.com/lib/4/themes/animated.js\"></script>\n    <script>\n      pm.getData( function (error, data) {\n      // Themes begin\n      am4core.useTheme(am4themes_animated);\n      // Themes end\n\n      am4core.ready(function () {\n        // Create Populated / Missing Chart\n        var popChart = am4core.create(\"populatedChart\", am4charts.XYChart);\n\n        // Add data\n        popChart.data = data.populated;\n\n        // Create axes\n        var populatedCategoryAxis = popChart.yAxes.push(new am4charts.CategoryAxis());\n        populatedCategoryAxis.dataFields.category = \"key\";\n        populatedCategoryAxis.renderer.grid.template.location = 0;\n        populatedCategoryAxis.renderer.minGridDistance = 30;\n        var populatedValueAxis = popChart.xAxes.push(new am4charts.ValueAxis());\n\n        // Create series\n        var populatedSeries = popChart.series.push(new am4charts.ColumnSeries());\n        populatedSeries.columns.template.width = am4core.percent(20);\n        populatedSeries.dataFields.valueX = \"value\";\n        populatedSeries.dataFields.categoryY = \"key\";\n        populatedSeries.name = \"Populated and Missing\";\n        populatedSeries.columns.template.tooltipText = \"{categoryY}: [bold]{valueX}[/]\";\n        populatedSeries.columns.template.fillOpacity = 0.8;\n\n        // Create Frequency Chart\n        var chart = am4core.create(\"frequencyChart\", am4charts.XYChart);\n\n        // Add data\n        chart.data = data.frequencies;\n\n        // Create axes\n        var categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());\n        categoryAxis.dataFields.category = \"key\";\n        categoryAxis.renderer.grid.template.location = 0;\n        categoryAxis.renderer.minGridDistance = 30;\n        var valueAxis = chart.xAxes.push(new am4charts.ValueAxis());\n\n        // Create series\n        var series = chart.series.push(new am4charts.ColumnSeries());\n        series.dataFields.valueX = \"value\";\n        series.dataFields.categoryY = \"key\";\n        series.name = \"Value Frequencies\";\n        series.columns.template.tooltipText = \"{categoryY}: [bold]{valueX}[/]\";\n        series.columns.template.fillOpacity = 0.8;\n\n      });\n      });\n    </script>\n    <div class=\"rds-header\">\n      <h2 style=\"font-style: normal; font\">{{response.label}}</h2>\n      <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div style=\"margin: 32px\">\n      <h4>Details</h4>\n      {{#if response.label}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">short_text</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Label</h3>\n          <p id=\"variable-label\">{{{response.label}}}</p>\n        </div>\n      </div>\n      {{/if}}\n      {{#if response.description}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">notes</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Description</h3>\n          <p id=\"variable-description\">{{{response.description}}}</p>\n        </div>\n      </div>\n      {{/if}}\n      {{#if response.questionText}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">notes</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Question Text</h3>\n          <p id=\"variable-description\">{{{response.questionText}}}</p>\n        </div>\n      </div>\n      {{/if}}\n      <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n        <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">storage</mat-icon>\n        <div sytle=\"display:flex; flex-direction: column;\">\n          <h3>Data Type</h3>\n          <p id=\"variable-type\">{{response.dataType}}</p>\n        </div>\n      </div>\n      <div style=\"margin-top: 32px\">\n        {{#if response.summaryStatistics}}\n        <div>\n          <div>\n            <h4>Populated and Missing</h4>\n            <div id=\"populatedChart\"></div>\n          </div> \n        </div>\n        {{/if}}\n        {{#if response.frequencies}}\n        <div>\n          <div>\n            <h4>Value Frequencies</h4>\n            <div id=\"frequencyChart\"></div>\n          </div>\n        </div>\n        {{/if}}\n      </div>\n    </div>\n`;\n\nconsole.log(frequencies)\n// Set visualizer\npm.visualizer.set(template, {\n  // Pass the response body parsed as JSON as `data`\n  response: pm.response.json(),\n  frequencies: frequencies,\n  populated: populated\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : "https://public.richdataservices.com/rds/api/catalog/ca/pumf_sfs_2016/variable/PASRDPO4",
        "method" : "GET",
        "description" : {
          "content" : "This request returns detailed variable information for **PASRDPO4**. The variable ID or URI can be used in the path to get the details for any variable in the data product.",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    }, {
      "@class" : "us.mtna.postman.model.ItemImpl",
      "id" : "ff570515900957c4d359538c6906b0d0",
      "name" : "Select All",
      "variable" : [ ],
      "event" : [ {
        "listen" : "test",
        "script" : {
          "id" : "e029ff2e-18cb-496e-84b3-a997be63b2e0",
          "type" : "text/javascript",
          "exec" : [ "// get the data set from the postman response\nvar dataSet = pm.response.json();\n\n// get the variable ids\nvar variableNames = [];\nvar variables = {};\nfor(i = 0; i < dataSet.recordLayout.variables.length; i++){\n  var variable = dataSet.recordLayout.variables[i];\n  variableNames.push(variable.name)\n  variables[variable.id] = variable;\n}\n\n// build up some records based on the data and metadata\nvar nameRecords = [];\nvar codeRecords = [];\nvar bothRecords = [];\nfor (i = 0; i < dataSet.records.length; i++) {\n  var record = dataSet.records[i];\n  var nameRecord = [];\n  var codeRecord = [];\n  var bothRecord = [];\n  for (d = 0; d < record.data.length; d++) {\n    var data = record.data[d];\n    var value = data.value.value;\n    var nameValue = value;\n    var codeValue = value;\n    var bothValue = value;\n    if (value !== undefined && value.codeValue !== undefined) {\n      nameValue = value.name;\n      codeValue = value.codeValue;\n      bothValue = value.codeValue + \": \" + value.name;\n    }\n    nameRecord.push(nameValue);\n    codeRecord.push(codeValue);\n    bothRecord.push(bothValue);\n  }\n  nameRecords.push(nameRecord);\n  codeRecords.push(codeRecord);\n  bothRecords.push(bothRecord);\n}\n\n\nvar template = `\n    <link\n      rel=\"stylesheet\"\n      type=\"text/css\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.css\"\n    />\n    <link\n      rel=\"stylesheet\"\n      type=\"text/css\"\n      href=\"https://cdn.datatables.net/1.10.21/css/dataTables.bootstrap4.min.css\"\n    />\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://mtna.s3.amazonaws.com/rds/images/Postman/styles.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n    <script\n      src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\"\n      integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\"\n      crossorigin=\"anonymous\"\n    ></script>\n    <script\n      src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js\"\n      integrity=\"sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49\"\n      crossorigin=\"anonymous\"\n    ></script>\n    <script\n      type=\"text/javascript\"\n      src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js\"\n    ></script>\n    <script>\n      $( document ).ready(function() {\n        pm.getData( function (error, data) {\n          // initialize data table\n          var table = document.getElementById(\"data\");\n\n          var tableHeader = table.getElementsByTagName('thead')[0]\n          var headerRow = tableHeader.insertRow();\n          for(i = 0; i < data.variableNames.length; i++){\n              var newTh = document.createElement('th');\n              newTh.innerHTML=data.variableNames[i];\n              newTh.setAttribute(\"onclick\",  \"updateVariable('\"+data.variableNames[i]+\"')\")\n              headerRow.appendChild(newTh)\n          }\n\n          var tableBody = table.getElementsByTagName('tbody')[0]\n          for(i = 0; i < data.nameRecords.length; i++){\n            var record = data.nameRecords[i];\n            var newRow = tableBody.insertRow();\n            for(d = 0; d < record.length; d++){\n              var newTd = document.createElement('td');\n              newTd.innerHTML=record[d];\n              newRow.appendChild(newTd)\n            }\n          }\n\n          // initialize variable details\n          var variable = data.variables[data.variableNames[0]];\n          updateVariableTable(variable);\n        });\n      });\n\n      function updateVariable(id) {\n        pm.getData( function (error, data) {\n          console.log(id)\n          var variable = data.variables[id];\n          updateVariableTable(variable);\n        });\n      }\n\n      function updateVariableTable(variable){\n          var variableLabel = document.getElementById(\"variable-label\");\n          variableLabel.innerHTML = variable.label;\n\n          var variableDescription = document.getElementById(\"variable-description\");\n          variableDescription.innerHTML = variable.description;\n\n          var variableType = document.getElementById(\"variable-type\");\n          variableType.innerHTML = variable.dataType;\n\n\n          createVariableRow(varTableBody, \"Label\", variable.label);\n          createVariableRow(varTableBody, \"Description\", variable.description);\n          createVariableRow(varTableBody, \"Question Text\", variable.questionText);\n          createVariableRow(varTableBody, \"Data Type\", variable.dataType);\n      }\n\n      function createVariableRow(tableBody, name, value){\n        if(value !== undefined){\n            var row = tableBody.insertRow();\n            var nameTd = document.createElement('td');\n            nameTd.innerHTML=name;\n            var valueTd = document.createElement('td');\n            valueTd.innerHTML=value;\n            row.appendChild(nameTd)\n            row.appendChild(valueTd)\n          }\n      }\n\n      function updateCodes(id) {\n        pm.getData( function (error, data) {\n          // refreshes the table \n          var table = document.getElementById(\"data\");\n          while (table.rows.length > 1) {\n            table.deleteRow(1);\n          }\n\n          var records;\n          if(id === 'name'){\n            records = data.nameRecords;\n          }else if(id === 'value'){\n            records = data.codeRecords;\n          }else{\n            records = data.bothRecords;\n          }\n\n          var tableBody = table.getElementsByTagName('tbody')[0]\n          for(i = 0; i < records.length; i++){\n            var record = records[i];\n            var newRow = tableBody.insertRow();\n            for(d = 0; d < record.length; d++){\n              var newTd = document.createElement('td');\n              newTd.innerHTML=record[d];\n              newRow.appendChild(newTd)\n            }\n          }\n        });\n      }\n    </script>\n    <style type=\"text/css\">\n      .btn-group {\n        border: 1px solid rgba(0,0,0,0.12);\n        border-radius: 8px;\n        display: -ms-inline-flexbox;\n        display: inline-flex;\n        margin-top: 8px;\n        overflow: hidden;\n        position: relative;\n        width: 100%;\n        white-space: nowrap;\n      }\n      .btn-secondary,\n      .btn-secondary:active {\n        background: #fff;\n        background-color: #fff;\n        border-left: 1px solid rgba(0,0,0,0.12);\n        border-top: none;\n        border-bottom: none;\n        border-right: none;\n        box-shadow: none !important;\n        color: rgba(0,0,0,0.87);\n        font-size: 16px;\n        font-family: Roboto,Helvetica Neue,sans-serif;\n        line-height: 48px;\n        padding: 0 12px;\n        white-space: nowrap;\n        width: 34%;\n      }\n      .btn-secondary:not(:disabled):not(.disabled).active,\n      .btn-secondary:not(:disabled):not(.disabled).active:active{\n        background-color: #e0e0e0;\n        border: 1px solid #e0e0e0;\n        color: rgba(0,0,0,0.87);\n      }\n      .btn-secondary:hover {\n        background-color: #ededed;\n        border-top: none;\n        border-bottom: none;\n        border-left: 1px solid rgba(0,0,0,.12);\n        border-right: none;\n        color: rgba(0,0,0,0.87); \n      }\n      .code-display-controls {\n        margin-right: 0;\n        width: 100%;\n      }\n      .content-container {\n        display:flex;\n        flex-direction: row;\n        padding: 10px;\n      }\n      h4 {\n        font-family: Roboto, sans-serif;\n        font-size: 12px;\n        font-weight: 400;\n        height: 13px;\n        letter-spacing: 1px;\n        line-height: 13px;\n        margin: 0;\n        text-transform: uppercase;\n      }\n      th {\n        cursor: pointer;\n      }\n      .table-information {\n        display: flex;\n        flex-direction: column;\n        margin-right: 32px;\n        margin-top: 24px;\n        min-width: 25%; \n        width: 25%;\n      }\n      @media screen and (max-width: 950px) {\n        .code-display-controls {\n          margin-right: 32px;\n          width: 25%;\n        }\n        .code-display-controls {\n          margin: 16px 0;\n          width: 100%;\n        }\n        .content-container {\n          flex-direction: column;\n        }\n        .table-information {\n          align-items: left;\n          flex-direction: column-reverse;\n          justify-content: space-around;\n          width: 100%;\n        }\n      }\n    </style>\n    <div class=\"rds-header\">\n      <h2 style=\"font-style: normal; font\">Data Explorer</h2>\n      <img style=\"max-width: 200px; max-height: 85px\" src=\"https://mtna.s3.amazonaws.com/rds/images/RDS_2020/Web/Logo/RDS-Logo.png\"/>\n    </div>\n    <hr/>\n    <div class=\"content-container\">\n      <div class=\"table-information\">\n        <div class=\"code-display-controls\">\n          <h4>Code Display</h4>\n          <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n            <label class=\"btn btn-secondary active\" \n            onclick=\"updateCodes('name')\">\n              <input\n                type=\"radio\"\n                name=\"options\"\n                id=\"codeName\"\n                autocomplete=\"off\"\n                checked\n              />\n              Name\n            </label>\n            <label class=\"btn btn-secondary\" onclick=\"updateCodes('value')\">\n              <input\n                type=\"radio\"\n                name=\"options\"\n                id=\"codeValue\"\n                autocomplete=\"off\"\n              />\n              Value\n            </label>\n            <label class=\"btn btn-secondary\" onclick=\"updateCodes('both')\">\n              <input\n                type=\"radio\"\n                name=\"options\"\n                id=\"both\"\n                autocomplete=\"off\"\n              />\n              Both\n            </label>\n          </div>\n        </div>\n        <div>\n          <br/>\n          <h4>Variable Details</h4>\n          <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n            <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">short_text</mat-icon>\n            <div sytle=\"display:flex; flex-direction: column;\">\n              <h3>Label</h3>\n              <p id=\"variable-label\"></p>\n            </div>\n          </div>\n          <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n            <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">notes</mat-icon>\n            <div sytle=\"display:flex; flex-direction: column;\">\n              <h3>Description</h3>\n              <p id=\"variable-description\"></p>\n            </div>\n          </div>\n          <div style=\"display:flex; flex-direction: row;width: 100%; align-items: center\" class=\"variable-detail-text\">\n            <mat-icon role=\"img\" class=\"mat-icon notranslate material-icons mat-icon-no-color ng-star-inserted\" aria-hidden=\"true\">storage</mat-icon>\n            <div sytle=\"display:flex; flex-direction: column;\">\n              <h3>Data Type</h3>\n              <p id=\"variable-type\"></p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <table\n        id=\"data\"\n        style=\"width: 100%;\">\n          <thead>\n          </thead>\n          <tbody>\n          </tbody>\n      </table>\n    </div>\n`;\n\n// Set visualizer\npm.visualizer.set(template, {\n  // Pass the response body parsed as JSON as `data`\n  response: pm.response.json(),\n  variableNames: variableNames,\n  nameRecords: nameRecords,\n  codeRecords: codeRecords,\n  bothRecords: bothRecords,\n  variables: variables\n});" ]
        },
        "disabled" : false
      } ],
      "request" : {
        "url" : {"protocol":"https","host":"public.richdataservices.com","path":"/rds/api/query/ca/pumf_sfs_2016/select","query":[{"key":"format","value":"MTNA","disabled":false,"description":{"content":"We will use the MTNA format for our response, this will include the variable metadata in the response. In addition, when combined with the inject parameter the records will contain code objects which will allow us to toggle between the code name, value, or both.","type":"text/markdown"}},{"key":"inject","disabled":false,"description":{"content":"Including the inject flag will specify that the raw values should be replaced with their codes if there are any associated with that value. In the MTNA format that we are using this will result in the code object being returned. In simpler formats the code name will be returned in place of the code value.","type":"text/markdown"}},{"key":"limit","value":"25","disabled":false,"description":{"content":"This will limit the number of rows returned.","type":"text/markdown"}},{"key":"collimit","value":"25","disabled":false,"description":{"content":"This will limit the number of columns returned.","type":"text/markdown"}}],"variable":[]},
        "method" : "GET",
        "description" : {
          "content" : "This query will select the first 25 variables and 25 records in the data product as a basic example of querying records. For a complete list of available parameters, please reference the <a href=\"https://documenter.getpostman.com/view/2220438/SzS5umZ3?version=latest#b11de492-633b-49cb-a422-47b90c0810dd\" target=\"_blank\">select query documentation</a>.",
          "type" : "text/markdown"
        },
        "header" : [ ]
      },
      "response" : [ ]
    } ],
    "event" : [ ]
  } ],
  "event" : [ ],
  "variable" : [ ]
}